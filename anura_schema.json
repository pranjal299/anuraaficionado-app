{
  "AdvancedQueueingDetails": {
    "type": "Input",
    "description": "The AdvancedQueueingDetails table contains information about queueing priorities and costs for different facilities, products, and locations within the supply chain. It defines both inbound and outbound queue management rules, including priority levels, time-based costs, and target location specifications. This table allows for granular control over how queues are handled at work centers, transportation lanes, and for order fulfillment processes.",
    "columns": [
      {
        "Column Name": "FacilityName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Facility at which the Queueing Priority is being defined for. Queues will occur on Work Centers, Transportation Lanes, Transportation Lane Modes, and for Order Fulfillments. In all of these instances, we have the ability to select a Queueing Priority Logic that has Location as a part of the priority. Queue Priorities are specified in the Customers, Facilities and Suppliers tables but these will be overwritten by the priorities specified in this table.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Product Name for which the Queueing Priority is being defined for. For Transportation Lane and Transportation Lane Mode queues, the key structure of Origin / Destination / Product Name in the Transportation Policies table must match exactly with the Facility / Target Location / Product Name in the Advanced Queueing Priority table",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QueueDirection",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Queue Direction specifies whether or not the queue at being applied at the Facility / Product combination is inbound or outbound. For example, if an unload process was used as for a Facility / Product combination we would classify this as an Inbound Queue, and could set the priority for which Target Locations (Origins) would be handled first. If we wanted to control the Outbound Queue for the same Facility / Product combination we could set a separate priority for outbound flow to distinct Target Locations (Destinations).",
        "Data Type": "[Inbound, Outbound]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TargetLocation",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Target Location will represent either the Origin or Destination depending on whether the Queue Direction is set to Inbound or Outbound.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers, Facilities, Suppliers",
        "MasterColumn": "[Customers.CustomerName, Facilities.FacilityName, Suppliers.SupplierName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TargetLocationQueuePriority",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Queue Priority entered here will override the Priority value that was set in the Customers, Facilities, or Suppliers table. Priorities will be evaluated with 1 being the highest priority.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Status dictates whether or not the multi-time period record exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "TimeInQueueCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The cost associated with an item sitting in a queue. The cost expressed in this field will be charged each time that items sit in a queue for the length of time specified in the Time In Queue Cost UOM field.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeInQueueCostUOM",
        "Required": NaN,
        "RequiredIf": "TimeInQueueCost",
        "Engine": "[]",
        "Explanation": "The unit of measure that time is expressed in terms of.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "Analytics": {
    "type": "Input",
    "description": "The Analytics table contains information about custom dashboards used for supply chain analysis and reporting. It stores dashboard definitions, descriptions, associated data, categorization tags, and tracks creation and modification dates for maintaining a history of analytical views.",
    "columns": [
      {
        "Column Name": "DashboardName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Description",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Data",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "bytea",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Tags",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CreatedDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LastEditedDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "BillsOfMaterials": {
    "type": "Input",
    "description": "The BillsOfMaterials table contains detailed information about the components, byproducts, and end products associated with a Bill of Materials (BOM). It includes data such as the product type, quantity, unit of measure, status, BOM name, and product name. This table is used to track and manage the various products and their roles within the BOM structure.",
    "columns": [
      {
        "Column Name": "BOMName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The name of the Bill of Material (BOM). This value can be referenced in other tables involving BOMs.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The name of a Product associated with the BOM.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProductType",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The role the specified Product plays in the BOM. A Component will be consumed during production. A Byproduct is created as a secondary result of production. An End Product is the finished good associated with the BOM. The Product associated with the BOM via a production policy is the implied End Product. If the implied End Product and an End Product specified in the BOM record differ, the End Product specified in the BOM record will become a Byproduct. Component requirements and Product Quantities in the BOM record will remain unchanged.",
        "Data Type": "[End Product, Byproduct, Component]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Component"
      },
      {
        "Column Name": "Quantity",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The amount of the Product consumed or produced. If NULL, the default value will be one unit.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1"
      },
      {
        "Column Name": "QuantityUOM",
        "Required": NaN,
        "RequiredIf": "Quantity",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "Status dictates whether or not the BOM record exists. If Status is set to Exclude, this BOM record will be ignored during evaluation of the BOM.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "BusinessCalendars": {
    "type": "Input",
    "description": "The BusinessCalendars table contains information about operational schedules and closure dates for supply chain entities. It defines calendar configurations that can be referenced by other tables to manage facility downtimes and operational availability, allowing for precise scheduling and capacity planning.",
    "columns": [
      {
        "Column Name": "CalendarName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the Calendar; this value can be referenced in tables that deal with downtime.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ClosureDates",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Dates which any entities following this calendar will be shut down. Each date requires its own record.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "BusinessHours": {
    "type": "Input",
    "description": "The BusinessHours table contains detailed operating schedule information for facilities throughout the week. It defines specific opening and closing times for each day, enabling precise timing of operations and activities within the supply chain. This information is used to coordinate work schedules, deliveries, and other time-sensitive operations.",
    "columns": [
      {
        "Column Name": "ScheduleName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The name of the schedule defining hours of operation for each day of the week; this value can be referenced in tables dealing with work schedules.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SundayOpenTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, HOPPER]",
        "Explanation": "The time on Sunday that the Facility opens.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SundayCloseTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, HOPPER]",
        "Explanation": "The time on Sunday that the Facility closes.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MondayOpenTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, HOPPER]",
        "Explanation": "The time on Monday that the Facility opens.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MondayCloseTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, HOPPER]",
        "Explanation": "The time on Monday that the Facility closes.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TuesdayOpenTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, HOPPER]",
        "Explanation": "The time on Tuesday that the Facility opens.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TuesdayCloseTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, HOPPER]",
        "Explanation": "The time on Tuesday that the Facility closes.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "WednesdayOpenTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, HOPPER]",
        "Explanation": "The time on Wednesday that the Facility opens.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "WednesdayCloseTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, HOPPER]",
        "Explanation": "The time on Wednesday that the Facility closes.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ThursdayOpenTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, HOPPER]",
        "Explanation": "The time on Thursday that the Facility opens.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ThursdayCloseTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, HOPPER]",
        "Explanation": "The time on Thursday that the Facility closes.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FridayOpenTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, HOPPER]",
        "Explanation": "The time on Friday that the Facility opens.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FridayCloseTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, HOPPER]",
        "Explanation": "The time on Friday that the Facility closes.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SaturdayOpenTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, HOPPER]",
        "Explanation": "The time on Saturday that the Facility opens.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SaturdayCloseTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, HOPPER]",
        "Explanation": "The time on Saturday that the Facility closes.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ChangeoverTimes": {
    "type": "Input",
    "description": "The ChangeoverTimes table contains information about the time and costs associated with switching production between different products at work centers. It defines transition requirements between current and next products, including downtime duration, associated costs, and status information, helping optimize production scheduling and capacity planning.",
    "columns": [
      {
        "Column Name": "ChangeoverName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name for the set of Changeover times that will apply at a Work Center. Changeover times and costs will be specified by Current Product / Next Product combinations, and the Changeover Name will be referenced in the Work Centers table to associate the changeover times and costs with process activity at the work center.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CurrentProduct",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The product currently being produced at the Work Center. Product Groups are supported; the Group behavior will be Enumerate.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "NextProduct",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The product that will be produced at the Work Center next. Product Groups are supported; the Group behavior will be Enumerate. In SIM, the progression of products will be explicitly tracked and the corresponding changeover time will be applied.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ChangeoverTime",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The amount of time required for the Work Center to adjust its production capabilities from Current Product to Next Product. This value represents downtime in which no production occurs at the Work Center.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ChangeoverTimeUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines Changeover Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "ChangeoverCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The fixed cost associated with the changeover procedure.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the Changeover is included in the model. If the Changeover is excluded from the model, no downtime will be incurred when the Work Center switches production from Current Product to Next Product.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "CustomSimulationScripts": {
    "type": "Input",
    "description": "The CustomSimulationScripts table contains configuration information for custom Python scripts that extend simulation functionality. It defines script execution parameters including timing, frequency, and policy types for transportation, production, inventory, and other supply chain processes, enabling customized behavior in the simulation model.",
    "columns": [
      {
        "Column Name": "CustomScriptName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the custom script. Depending on the Script Policy Type, this name can be entered into the SIM Policy field of the Transportation, Production, Inventory, Customer Fulfillment, Replenishment or Procurement Policy tables.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "CustomScriptPolicyType",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The type of policy the script has been built to enforce. If the policy is set to Transportation, Production, Inventory or Sourcing then the Script Name must be referenced in the corresponding Policy table. If the Policy Type is set to be On Model Start, it will execute at the beginning of the model. If the Policy Type is set to Recurring Event it will begin on the entered Start Date, will be repeatedly executed based on the Time Between Events, and then will stop on the End Date.",
        "Data Type": "[Inventory, Sourcing, Transportation, Production, OnModelStart, RecurringEvent]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ExecutablePath",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The path to where the python file is saved.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "StartDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "For a Policy Type of Recurring Event, the Start Date will specify the first point in the simulation at which the script will execute.",
        "Data Type": "Date/Time*",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeBetweenEvents",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "For a Policy Type of Recurring Event, the Time Between Events will specify how the interval at which the policy will be evaluated.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeBetweenEventsUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The unit of measure that time is evaluated in.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": NaN,
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "EndDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "For a Policy Type of Recurring Event, the End Date will specify the last point in the simulation at which the script will execute.",
        "Data Type": "Date/Time*",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "CustomerDemand": {
    "type": "Input",
    "description": "The CustomerDemand table contains information about the demand for products from customers. It includes details such as the quantity of products requested, the status of the demand record, the unit price the customer will pay, the unit of measure for the unit price, any penalty costs associated with the demand, and the transportation mode required for servicing the demand. Additionally, the table specifies the customer's name, the product name requested, and the period in which the demand occurs. This information helps in optimizing the supply chain and determining the most cost-effective way to fulfill customer demands.",
    "columns": [
      {
        "Column Name": "CustomerName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, TRIAD]",
        "Explanation": "The name of the Customer. Customer Groups are supported; the Group behavior will be Enumerate.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers",
        "MasterColumn": "CustomerName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Product requested by the Customer. Product Groups are supported; the Group behavior will be Enumerate.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If  product group is entered in the Product Name field, the Product Name Group Behavior field allows you to specify if demand records should be generated for every individual product in the group (Enumerate) or if any product contained in the group would be able to satisfy the demand record (Aggregate). In the case that Aggregate is used, the flows into the customer location for all products contained in the product group will be summed, and this total quantity is used to evaluate the demand record.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Enumerate"
      },
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Period in which the demand record occurs. Period Groups are supported; the Group behavior will be enumerate.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "Model Horizon"
      },
      {
        "Column Name": "Quantity",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, TRIAD]",
        "Explanation": "The amount of the Product requested by the Customer in the specified Period.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MinQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The minimum amount of Product required to satisfy the Customer's demand in the specified Period. This value is used to turn demand satisfaction into a soft constraint; if no value is entered, it is assumed that Min Quantity is equal to Quantity.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The maximum amount of Product that the Customer can receive in the specified Period. This value is used to turn demand satisfaction into a soft constraint; if no value is entered, it is assumed that Max Quantity is equal to Quantity.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Required": NaN,
        "RequiredIf": "Quantity",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that measures Quantity, Min Quantity, and Max Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, TRIAD]",
        "Explanation": "Status dictates whether or not the Demand record exists in the model. If Status is set to Exclude, this  record will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "DemandStatus",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Demand Status dictates whether or not the Demand record must be considered in the optimization run. If the Demand Status is set to Consider, the demand record can be serviced if it is optimal to do so, and if it is chosen not to be served then any associated penalty costs will be applied. If the Demand Status is set to Exclude then the demand record will be forced into a Not Served status and any associated Penalty Cost will be applied.",
        "Data Type": "[Include, Exclude, Consider]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "ServiceMode",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Optionally, a required Transportation Mode can be specified here. If multiple Modes are acceptable, a Mode Group may be used; the Group behavior will be Aggregate.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationModes",
        "MasterColumn": "ModeName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DeliveryFrequency",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Delivery Frequency can be used as a way to generate shipment sizes for inbound arcs to customers. If the Shipment Size field is left empty in the Transportation Policies table for an inbound lane to a Customer and Delivery Frequency is populated, the Shipment Size will be applied as Demand Quantity / Delivery Frequency. This is especially useful when your costs are using rate cards entered in the Transportation Band Costing table.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitPrice",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The price that the Customer will pay for each unit of the Product. This price overrides the Unit Price given in the Products table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitPriceUOM",
        "Required": NaN,
        "RequiredIf": "UnitPrice",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Unit Price. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "PenaltyCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The penalty cost associated with not fulfilling a unit of demand",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "PenaltyCostUOM",
        "Required": NaN,
        "RequiredIf": "PenaltyCost",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Penalty Cost. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, TRIAD]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "CustomerDemandOriginConstraints": {
    "type": "Input",
    "description": "The CustomerDemandOriginConstraints table contains rules and limitations regarding where customer demand can be fulfilled from within the supply chain network. It specifies product quantities that can be sourced from specific origin locations during different periods, enabling control over supply chain flow and sourcing strategies.",
    "columns": [
      {
        "Column Name": "CustomerName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Customer. Customer Groups are supported; the Group behavior will be Enumerate.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers",
        "MasterColumn": "CustomerName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Product requested by the Customer. Product Groups are supported; the Group behavior will be Enumerate.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Period in which the demand record occurs. Period Groups are supported; the Group behavior will be enumerate.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "Model Horizon"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the Origin Policy record exists in the model. If Status is set to Exclude, this  record will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "ProductOriginLocation",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "An origin location for the product can be specified here. Groups are supported in this field, with the Group Behavior being treated as Aggregate.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities, Suppliers, Sources",
        "MasterColumn": "[Facilities.FacilityName, Suppliers.SupplierName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProductOriginLocationGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If ProductOriginLocation Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, flow in the constraint will be summed over the members of the Group to satisfy demand.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "Quantity",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The amount of the Product requested by the Customer in the specified Period that this Origin Location policy will apply for. If you want to prevent an origin location from being used to service a demand record, you can enter a quantity of 0.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Required": NaN,
        "RequiredIf": "Quantity",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that measures Quantity, Min Quantity, and Max Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "CustomerFulfillmentPolicies": {
    "type": "Input",
    "description": "The CustomerFulfillmentPolicies table contains information on the optimization, simulation, and unit cost policies that dictate how orders are fulfilled for specific Customer, Product, and Source combinations. It includes details such as the optimization policy, policy values, unit cost, lot size requirements, maximum sourcing range, and simulation policy for each policy record.",
    "columns": [
      {
        "Column Name": "CustomerName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Customer that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers",
        "MasterColumn": "CustomerName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Product (or Product group) that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "SourceName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The source Facility or Supplier (Groups are also supported) that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities, Suppliers, Sources",
        "MasterColumn": "[Facilities.FacilityName, Suppliers.SupplierName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "OptimizationPolicy",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The logic that order fulfillments for the Customer, Product, and Source combination(s) must follow. To Optimize selects the lowest cost option. By Ratio (Auto Scale) will enforce a flow split between the specified sources, the defined ratios will apply to flow into the customer from the listed sources only. By Ratio (No Scale) will enforce a flow split between the specified sources and the defined ratios will be in terms of the total inbound flow into the Customer. Single Source policies force the Customer to receive the Product from one Source. Note that if a group is used in the Customer Name, Product Name, or Source Name field that the groups will be enumerated and the policy logic will be applied over the enumerated entries.",
        "Data Type": "[To Optimize, By Ratio (Auto Scale), By Ratio (No Scale), Single Source]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "To Optimize"
      },
      {
        "Column Name": "OptimizationPolicyValue",
        "Required": NaN,
        "RequiredIf": "OptimizationPolicy = By Ratio (Auto Scale) OR By Ratio (No Scale)",
        "Engine": "[NEO]",
        "Explanation": "By Ratio (Auto Scale): The Policy Value will define the percentage of flow that must be satisfied from the listed source. The percentage will be calculated based on the total inbound flow for the customer/product combination and enforced proportionally across the sources with a policy of By Ratio (Auto Scale).\n\nBy Ratio (No Scale): The Policy Value will define the percentage of flow that must be satisfied from the listed source. The percentage will be calculated based on the total inbound flow for the customer/product combination  and enforced over the listed sources. If the Policy Values add up to less than 100, the remainder of unaccounted flow can be sourced from any other viable lane. If the Policy Values add up to more than 100, they will be scaled to 100 and enforced the same as Auto Scale.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicy",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The logic that order assignment flows for the Customer, Product, and Source combination(s) must follow. By Preference will pick the sources pending product availability in the specified order of preference. Single Source policies force the Customer to receive the Product from one Source.",
        "Data Type": "[By Preference, Single Source, Allocation]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "By Preference"
      },
      {
        "Column Name": "SimulationPolicyValue",
        "Required": NaN,
        "RequiredIf": "SimulationPolicy = By Preference",
        "Engine": "[THROG]",
        "Explanation": "By Preference: Policy Value defines the order of preference in which a source will be selected pending product availability, with the lower numbers representing a higher selection preference",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "Status dictates whether or not the policy exists in the model. If Status is set to Exclude, the policy record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The cost incurred per unit of flow for the specified Source/Customer/Product combination.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit of measure that defines flow for the Source/Customer/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "MinimumOrderQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The minimum quantity that must move between source and destination in a period for a flow to occur",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MinimumOrderQuantityUOM",
        "Required": NaN,
        "RequiredIf": "MinimumOrderQuantity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines the MOQ for the Source/Customer/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "LotSize",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Orders placed from the Customer to the specified sources must be filled in multiples of the specified lot size.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LotSizeUOM",
        "Required": NaN,
        "RequiredIf": "LotSize",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that defines the Lot Size for the Source/Customer/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "MaxSourcingRange",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The maximum allowable distance between Customer and Source for the Product(s) specified. This field is intended for use in models with group policies to eliminate excessively long lanes from consideration.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxSourcingRangeUOM",
        "Required": NaN,
        "RequiredIf": "MaxSourcingRange",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure (Type = Distance) that defines Max Sourcing Range.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "OnlySourceFromSurplus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, when selecting a source for the Customer / Product combination only sources that have available surplus can be selected to fulfill the order.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "CustomerFulfillmentPoliciesMultiTimePeriod": {
    "type": "Input",
    "description": "The CustomerFulfillmentPoliciesMultiTimePeriod table contains information regarding the specific policies that dictate how order fulfillments for customers, products, and sources must be handled over multiple time periods. This table includes details such as the status of the policy, the optimization logic to be followed, unit costs, maximum sourcing range, and the periods in which the policy changes apply.",
    "columns": [
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The period name in which a change is being made. Groups of periods are also supported. Changes that are made in the Multi Time Period table will be applied as overrides for the records of the base table for the specified periods only. Additionally, only the fields that contain information needing to be updated are required to be entered, in the absence of data in the Multi Time Period table the data from the standard table will be persisted",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "CustomerName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Customer that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers",
        "MasterColumn": "CustomerName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Product (or Product group) that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "SourceName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The source Facility or Supplier (Groups are also supported) that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities, Suppliers, Sources",
        "MasterColumn": "[Facilities.FacilityName, Suppliers.SupplierName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the multi-time period record exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "PolicyStatus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Policy Status dictates whether or not the policy exists in the model for the specified period(s). If Policy Status is set to Exclude, the policy record is ignored during the model run for the specified periods.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OptimizationPolicy",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The logic that order fulfillments for the Customer, Product, and Source combination(s) must follow. To Optimize selects the lowest cost option. By Ratio (Auto Scale) will enforce a flow split between the specified sources, the defined ratios will apply to flow into the customer from the listed sources only. By Ratio (No Scale) will enforce a flow split between the specified sources and the defined ratios will be in terms of the total inbound flow into the Customer. Single Source policies force the Customer to receive the Product from one Source. Note that if a group is used in the Period Name, Customer Name, Product Name, or Source Name field that the groups will be enumerated and the policy logic will be applied over the enumerated entries.",
        "Data Type": "[To Optimize, By Ratio (Auto Scale), By Ratio (No Scale), Single Source]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OptimizationPolicyValue",
        "Required": NaN,
        "RequiredIf": "OptimizationPolicy = By Ratio (Auto Scale) OR By Ratio (No Scale)",
        "Engine": "[NEO]",
        "Explanation": "By Ratio (Auto Scale): The Policy Value will define the percentage of flow that must be satisfied from the listed source. The percentage will be calculated based on the total inbound flow for the customer/product combination and enforced proportionally across the sources with a policy of By Ratio (Auto Scale).\n\nBy Ratio (No Scale): The Policy Value will define the percentage of flow that must be satisfied from the listed source. The percentage will be calculated based on the total inbound flow for the customer/product combination  and enforced over the listed sources. If the Policy Values add up to less than 100, the remainder of unaccounted flow can be sourced from any other viable lane. If the Policy Values add up to more than 100, they will be scaled to 100 and enforced the same as Auto Scale.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicy",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The logic that order assignment flows for the Customer, Product, and Source combination(s) must follow. By Preference will pick the sources pending product availability in the specified order of preference. Single Source policies force the Customer to receive the Product from one Source.",
        "Data Type": "[By Preference, Single Source, Allocation]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicyValue",
        "Required": NaN,
        "RequiredIf": "SimulationPolicy = By Preference",
        "Engine": "[]",
        "Explanation": "By Preference: Policy Value defines the order of preference in which a source will be selected pending product availability, with the lower numbers representing a higher selection preference",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost incurred per unit of flow for the specified Source/Customer/Product combination.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines flow for the Source/Customer/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "MinimumOrderQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The minimum quantity that must move between source and destination in a period for a flow to occur",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MinimumOrderQuantityUOM",
        "Required": NaN,
        "RequiredIf": "MinimumOrderQuantity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines the MOQ for the Source/Customer/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "LotSize",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Orders placed from the Customer to the specified sources must be filled in multiples of the specified lot size.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LotSizeUOM",
        "Required": NaN,
        "RequiredIf": "LotSize",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines the Lot Size for the Source/Customer/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "MaxSourcingRange",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The maximum allowable distance between Customer and Source for the Product(s) specified. This field is intended for use in models with group policies to eliminate excessively long lanes from consideration.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxSourcingRangeUOM",
        "Required": NaN,
        "RequiredIf": "MaxSourcingRange",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure (Type = Distance) that defines Max Delivery Range.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "OnlySourceFromSurplus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, when selecting a source for the Customer / Product combination only sources that have available surplus can be selected to fulfill the order.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "CustomerOrderProfiles": {
    "type": "Input",
    "description": "The CustomerOrderProfiles table contains templates for generating recurring customer orders within the simulation. It defines order patterns including quantities, frequencies, service levels, and timing parameters, allowing for the automatic generation of realistic order patterns throughout the simulation period.",
    "columns": [
      {
        "Column Name": "OrderID",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unique identifier for each Order profile, as orders are generated based on their recurring properties they will be indexed off of the entered order number. All Orders will be placed as single line item orders, however multiple recurring orders can be set at the same Customer",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CustomerName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the Customer placing the Order",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers",
        "MasterColumn": "CustomerName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Product that the Order will be placed for",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the Order profile exists in the model. If Status is set to Exclude, this  record will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Quantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The amount of Product being ordered by the Customer. Both doubles, as well as distributions are accepted as entries.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Required": NaN,
        "RequiredIf": "Quantity",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that defines Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "NumberOfOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Based on the information entered in the Start Date, Time Between Orders and End Date fields, the Order Profile will generate orders based at different times throughout the simulation. When an order is generated, the Number Of Orders will be evaluated to determine how many orders are going to be placed at that specific time. Once the Number Of Orders is determined, all of the other information specified in the Product Name, Quantity, Number of Lines will be used to generate the details for each of the orders at that time.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1"
      },
      {
        "Column Name": "NumberOfLines",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If the Product Name is left blank for the Order Profile, recurring orders can be generated with a varying number of line items in each order. An integer value, or a distribution can be entered in this field. In the event that the number of lines in an order is 2 or greater, the Order Profile Product Selection and Order Profile Product Affinity tables will be used to determine which products are to be ordered.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1"
      },
      {
        "Column Name": "ServiceLevel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Service Level will be used to calculate the Due Date for all of the generated recurring orders. Due Date will be set to the Order Date + Service Level.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ServiceLevelUOM",
        "Required": NaN,
        "RequiredIf": "ServiceLevel",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) used to define Service Level.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "StartDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Start Date will defined the date that the first order will drop. Orders will drop exactly at the date/time specified in Start Date, and then each following order's drop date will be determined by the Time Between Orders information.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeBetweenOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Time Between Orders will specify how much time goes by from the previous order until the next order drops. Both doubles, as well as distribution entries are supported.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeBetweenOrdersUOM",
        "Required": NaN,
        "RequiredIf": "TimeBetweenOrders",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) used to define Time Between Orders.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "EndDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The End Date will specify the last possible time that an order can drop. If the Time Between Orders causes the next order drop date to fall after the specified End Date, that last order will not be generated.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "CustomerOrders": {
    "type": "Input",
    "description": "The CustomerOrders table contains information about individual orders placed by customers. It includes details such as the customer name, product name, quantity, unit price, source, order date, due date, status, and any specific requirements or restrictions related to sourcing, backorders, and partial fills. Each order is identified by a unique OrderID, and each line item within an order is given a unique LineItemID.",
    "columns": [
      {
        "Column Name": "OrderID",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unique identifier for each Order; an Order consists of one or more Line Items.",
        "Data Type": "String - Fixed",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LineItemID",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unique identifier for the single Line Item being defined; Orders with multiple Line Items will require multiple table records.",
        "Data Type": "String - Fixed",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CustomerName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the Customer placing the Order. Customer Groups are supported; the Group behavior will be Enumerate.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers",
        "MasterColumn": "CustomerName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Product in the Line Item.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Quantity",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The amount of Product requested by the Customer.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Required": NaN,
        "RequiredIf": "Quantity",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that defines Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "OrderDate",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The date and time at which the Customer places the Order.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DueDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The date and time at which the Order is due at the Customer.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the Line Item exists in the model. If Status is set to Exclude, this  record will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "UnitPrice",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The price that the Customer will pay for each unit of the Product. This price overrides the Unit Price given in the Products table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitPriceUOM",
        "Required": NaN,
        "RequiredIf": "UnitPrice",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that defines Unit Price. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "ServiceMode",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Optionally, a required Transportation Mode can be specified here. If multiple Modes are acceptable, a Mode Group may be used; the Group behavior will be Aggregate. If NULL, any Mode is assumed to be acceptable.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationModes",
        "MasterColumn": "ModeName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SourceName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Optionally, a required Source for the Line Item can be specified here. If multiple Sources are acceptable, a Source (Facility or Supplier) Group may be used; the Group behavior will be Aggregate. If NULL, any Source is assumed to be acceptable.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SingleSourceOrder",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, all Line Items in the Order must be sourced from a single site (Facility or Supplier). If False, each Line Item within the Order may be sourced from a different site. A value of True in this field overrides Single Source Line Items = False, enforcing that all Line Items in the order come from a single source. This entry will override the properties set in the Customers table",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SingleSourceLineItems",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the entire Line Item must be sourced from a single site (Facility or Supplier). If False, the Line Item may be sourced from different sites. This entry will override the properties set in the Customers table",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowPartialFillOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the Order may be partially filled. Otherwise, it must be filled in full. If backordering is allowed, the remaining quantity may be satisfied in the future with additional shipments; if the Backorder Time Limit is reached on a partially filled order, the remaining quantity will be cancelled. If Partial Fill Orders is False, Partial Fill Line Items will also be forced to False. This entry will override the properties set in the Customers table",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowPartialFillLineItems",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the specified Line Item may be partially filled. Otherwise, the Line Item must be filled in full. If backordering is allowed, the remaining quantity of partially filled Line Items may be satisfied in the future with additional shipments; if the Backorder Time Limit is reached on a partially filled Line Item, the remaining quantity will be cancelled. This entry will override the properties set in the Customers table",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowDropShip",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, orders placed by the Customer that cannot be filled directly by its fulfillment source(s) can be directly filled by an alternative source (Supplier or Facility).",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowBackorders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the Customer will accept a backorder in the event that the Order cannot be fulfilled before its Due Date. If False and if the Order is not fulfilled by its Due Date, it will be cancelled on that date. This entry will override the properties set in the Customers table",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BackorderTimeLimit",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If Allow Backorders = True, this value is the amount of time after which the backorder will be cancelled by the Customer. A value of NULL will be interpreted as an infinite time limit, while a value of zero is equivalent to setting Allow Backorders = False. This entry will override the properties set in the Customers table",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BackorderTimeLimitUOM",
        "Required": NaN,
        "RequiredIf": "BackorderTimeLimit",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) used to define Backorder Time Limit.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "CustomerRiskConfigurations": {
    "type": "Input",
    "description": "The CustomerRiskConfigurations table contains detailed configurations and settings related to calculating the Customer Risk Score. This table may include information such as weights applied to different risk factors (such as Geographic Risk, User Defined Risk, Concentration Risk, and Source Count Risk), as well as the specific Risk Bands used to evaluate each type of risk. Additionally, the table may specify the Risk Profile for which these configurations are saved, allowing for different risk assessments to be conducted based on the selected profile.",
    "columns": [
      {
        "Column Name": "RiskProfileName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The name of the Risk Profile that the risk configuration is saved for. Risk Profiles are configured to run using specified source data in the Risk Rating Configurations table, and will take the risk weightings and bands associated with the Risk Profile from each of the configuration tables.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskRatingConfigurations",
        "MasterColumn": "RiskProfileName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "GeographicRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Geographic Risk when calculating the Customer Risk Score. Detailed Geographic Risks configurations on geographic risk components are entered in the Geographic Risk Configurations table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UserDefinedRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the User Defined Risk when calculating the Customer Risk Score.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConcentrationRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Concentration Risk when calculating the Customer Risk Score.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConcentrationRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The Risk Band that is used to evaluate the Concentration Risk at the Customer. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "BandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SourceCountRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Source Count Risk when calculating the Customer Risk Score.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SourceCountRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The Risk Band that is used to evaluate the Source Count Risk at the Customer. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "BandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "CustomerTransitConstraints": {
    "type": "Input",
    "description": "The CustomerTransitConstraints table contains constraints related to customers, products, sources, modes, periods, transit bands, and band percentages for determining service fulfillment requirements based on the distance or time from a facility to the customer. It includes information about group behaviors, unit of measures, and percentage of service that must occur within a specified band for a particular customer/product combination.",
    "columns": [
      {
        "Column Name": "CustomerName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Customer(s) which we are constraining service. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers",
        "MasterColumn": "CustomerName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "CustomerNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Customer Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Product(s) which we are constraining service. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "ProductNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Product Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "SourceName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Source(s) which we are constraining service from. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities, Suppliers, Sources",
        "MasterColumn": "[Facilities.FacilityName, Suppliers.SupplierName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "SourceNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Source Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ModeName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Mode(s) which we are constraining service over. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationModes",
        "MasterColumn": "ModeName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "ModeNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Mode Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "PeriodName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Period(s) in which we are constraining service. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "PeriodNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Period Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "TransitBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Transit Bands can be defined for Customer/Product pairings on the basis of either time or distance. Transit Bands force orders to be fulfilled by Facilities within a particular travel time or distance from the Customer.",
        "Data Type": "double",
        "Primary Key": "Yes",
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TransitBandUOM",
        "Required": NaN,
        "RequiredIf": "TransitBand",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Transit Band. Time and Distance units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance, Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance, Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "BandPercentage",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The percentage of service that must occur within the Service Band for the specified Customer/Product combination.",
        "Data Type": "double",
        "Primary Key": "Yes",
        "Validation Type": "Percentage",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BandPercentageUOM",
        "Required": NaN,
        "RequiredIf": "BandPercentage",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Band Percentage. Quantity, Volume, and Weight units of measure are supported. The default UOM will be the primary Quantity unit of measure.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the constraint exists in the model. If Status is set to Exclude, this constraint (or constraints in the case of Enumerated Groups) will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "Customers": {
    "type": "Input",
    "description": "The Customers table contains information about individual customers, including their single source requirements, backorder preferences, queue priorities, risk scores, status in the model, address details, and geographic coordinates. This table also includes fields for customer name, city, region/state, postal code, and country.",
    "columns": [
      {
        "Column Name": "CustomerName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The name of the Customer",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "Status dictates whether or not the Customer exists in the model. If the Customer is included in the model, all of its demand records are enforced based on the Min QTY/Max QTY specified in the Customer Demand table. If the Customer is excluded from the model, any records for this Customer in other tables will also be ignored.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Address",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, TRIAD, HOPPER]",
        "Explanation": "The street address of the Customer",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "City",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The city of the Customer",
        "Data Type": "String - Fixed",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Region",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The state/region of the Customer",
        "Data Type": "String - Fixed",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "PostalCode",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The ZIP/postal Code of the Customer",
        "Data Type": "String - Fixed",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Country",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The country of the Customer",
        "Data Type": "String - Fixed",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Latitude",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The latitude coordinate of the Customer",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "LatitudeValue",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "Longitude",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The longitude coordinate of the Customer",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "LongitudeValue",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "SingleSource",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If True, all demand records for the Customer must be satisfied by a single source. Otherwise, demand may be satisfied by multiple sources. The single source will be selected across all products over the entire model horizon.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "False"
      },
      {
        "Column Name": "SingleSourceOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, all Line Items in the Orders placed from this Customer must be sourced from a single site (Facility or Supplier). If False, each Line Item within the Orders may be sourced from a different site. A value of True in this field overrides Single Source Line Items = False, enforcing that all Line Items in the orders come from a single source.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "False"
      },
      {
        "Column Name": "SingleSourceLineItems",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the entire Line Item in orders placed from this Customer must be sourced from a single site (Facility or Supplier). If False, the Line Items may be sourced from different sites.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "False"
      },
      {
        "Column Name": "AllowBackorders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the Customer accepts backorders in the event that an order cannot be fulfilled before its Due Date (defined in the Customer Orders table).",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BackorderTimeLimit",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "This value is the amount of time after which unsatisfied backorders will be cancelled by the Customer. A value of NULL will be interpreted as an infinite time limit, while a value of 0 is equivalent to setting Allow Backorders = False.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BackorderTimeUOM",
        "Required": NaN,
        "RequiredIf": "BackorderTimeLimit",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure used to define the Backorder Time Limit. Any of the time units of measure defined in the Units Of Measure table can be used here.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "AllowPartialFillOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, orders placed by the Customer may be partially filled. Otherwise, orders must be filled in full. If backordering is allowed, the remaining quantity of partially filled orders may be satisfied in the future with additional shipments; if the Backorder Time Limit is reached on a partially filled order, the remaining quantity will be cancelled. If Partial Fill Orders is False, Partial Fill Line Items will also be forced to False.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowPartialFillLineItems",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, line items within orders placed by the Customer may be partially filled. Otherwise, line items must be filled in full. If backordering is allowed, the remaining quantity of partially filled line items may be satisfied in the future with additional shipments; if the Backorder Time Limit is reached on a partially filled line item, the remaining quantity will be cancelled.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowDirectShip",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, orders placed by the Customer that cannot be filled directly by its fulfillment source(s) can be shipped directly to the customer from an alternative location (Supplier or Facility)",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "QueuePriority",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "For any Queues that are evaluated with a Queueing Priority Logic, there can be a By Location component to the priority logic used. If By Location is used, The Queue Priority fields in the Customers, Facilities and Suppliers table will be used to determine how the queues will be ordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OperatingSchedule",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The schedule (defined in the Business Hours table) dictating when the Customer will be open for business. If no schedule is specified, the Customer is assumed to be open 24 hours per day.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BusinessHours",
        "MasterColumn": "ScheduleName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedPickupTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The fixed pickup time required at this Customer. This will be additive to the FixedPickupTime specified in the Shipments table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedPickupTimeUOM",
        "Required": NaN,
        "RequiredIf": "FixedPickupTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines Fixed Pickup Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "FixedDeliveryTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The fixed time required at the delivery locations for this Customer. This will be additive to the FixedDeliveryTime specified in the Shipments table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedDeliveryTimeUOM",
        "Required": NaN,
        "RequiredIf": "FixedDeliveryTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines Fixed Delivery Time",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "UnitPickupTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The time required per unit to be loaded at this Customer. This will be additive to any UnitPickupTime that is specified in the Shipments table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitPickupTimeUOM",
        "Required": NaN,
        "RequiredIf": "UnitPickupTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines Unit Pickup Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "UnitDeliveryTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The time required per unit to be delivered at this location. This will be additive to any UnitDeliveryTime that is specified in the Shipments table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitUOM",
        "Required": NaN,
        "RequiredIf": "UnitPickupTime OR UnitDeliveryTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that defines the basis on which UnitPickupTime and UnitDeliveryTime will be applied for the Customer. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "UnitDeliveryTimeUOM",
        "Required": NaN,
        "RequiredIf": "UnitDeliveryTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines Unit Delivery Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "GeographicRiskScore",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": "When geocoding a location, or following the most recent DART run, the Geographic Risk will be populated using the Primary Risk Rating defined in Model Settings. For more detailed information on Geographic Risk, reference the Geographic Risk Metrics output table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UserDefinedRiskScore",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": "An optional input that can be leveraged by DART when calculating Customer Risk. If left empty for some records, the User Defined Risk will not be considered for those specific Customers. The weighting for this component will be defined in the Customer Risk Configurations table, and any outputs will be reported alongside other geographic risk scores in the Geographic Risk Metrics table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "CustomersMultiTimePeriod": {
    "type": "Input",
    "description": "The CustomersMultiTimePeriod table is used to track and manage changes to customer records over multiple time periods. It includes fields such as Status, CustomerStatus, and SingleSource, which determine the inclusion of customers in the model, enforcement of demand records, and sourcing constraints. It also includes fields for PeriodName and CustomerName, allowing for changes to be applied to specific periods and customers. This table allows for flexibility in managing customer data and demand requirements over time in the model.",
    "columns": [
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The period name in which a change is being made. Groups of periods are also supported. Changes that are made in the Multi Time Period table will be applied as overrides for the records of the base table for the specified periods only. Additionally, only the fields that contain information needing to be updated are required to be entered, in the absence of data in the Multi Time Period table the data from the standard table will be persisted",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "CustomerName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Customer",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers",
        "MasterColumn": "CustomerName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the multi-time period record exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "CustomerStatus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Customer Status dictates whether or not the Customer exists in the model during the specified period(s).If the Customer is included in the model, all of its demand records are enforced based on the Min QTY/Max QTY specified in the Customer Demand table. If the Customer Status is set to Exclude, then any demand records for this customer in that period are ignored and there are no penalty costs applied for lost demand. If penalty costs need to be enforced, the Customer Demand Status can be leveraged in the Customer Demand table.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SingleSource",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If True, all demand records for the Customer must be satisfied by a single source. Otherwise, demand may be satisfied by multiple sources.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SingleSourceOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, each order record for the Customer must be satisfied by a single source. Otherwise, demand may be satisfied by multiple sources.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SingleSourceLineItems",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, each line item in an order must come from a single source. Otherwise, a line item may be satisfied by multiple sources.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowBackorders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, the Customer accepts backorders in the event that an order cannot be fulfilled before its Due Date (defined in the Customer Orders table).",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BackorderTimeLimit",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "This value is the amount of time after which unsatisfied backorders will be cancelled by the Customer. A value of NULL will be interpreted as an infinite time limit, while a value of 0 is equivalent to setting Allow Backorders = False.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BackorderTimeUOM",
        "Required": NaN,
        "RequiredIf": "BackorderTimeLimit",
        "Engine": "[]",
        "Explanation": "The unit of measure used to define the Backorder Time Limit. Any of the time units of measure defined in the Units Of Measure table can be used here.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "AllowPartialFillOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, orders placed by the Customer may be partially filled. Otherwise, orders must be filled in full. The remaining quantity of partially filled orders may be satisfied in the future with additional shipments; if the Backorder Time Limit is reached on a partially filled order, the remaining quantity will be cancelled.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowPartialFillLineItems",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, line items within orders placed by the Customer may be partially filled. Otherwise, line items must be filled in full. The remaining quantity of partially filled line items may be satisfied in the future with additional shipments; if the Backorder Time Limit is reached on a partially filled line item, the remaining quantity will be cancelled.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowDirectShip",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, orders placed by the Customer that cannot be filled directly by its fulfillment source(s) will be filled by an alternative source (Supplier or Facility)",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QueuePriority",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "For any Queues that are evaluated with a Queueing Priority Logic, there can be a By Location component to the priority logic used. If By Location is used, The Queue Priority fields in the Customers, Facilities and Suppliers table will be used to determine how the queues will be ordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "Facilities": {
    "type": "Input",
    "description": "The Facilities table provides information on the various facilities within the network, including details such as initial state (existing or potential), fixed startup and closing costs, storage and throughput capacities, source order requirements, backorder policies, fill order preferences, queue priorities, risk scores, address details, and operating costs. This table allows for the management and optimization of facilities within the model to ensure efficient and effective operations within the supply chain network.",
    "columns": [
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The name of the Facility",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "Status dictates whether or not the Facility will be included in the scenario run. If the Status is set to Exclude, all elements of the Facility will be ignored and any mentions of the Facility in other input tables will be ignored as well",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "FacilityStatus",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": "Facility Status dictates whether or not the Facility is to be actively included in the model. If the Facility Status is set to Consider, the Facility may either be opened (Initial State = Potential) or closed (Initial State = Existing) depending on what is optimal. If the Facility Status is set to be  excluded from the model, any associated closing costs will still be applied and any records for this Facility in other tables will be ignored.",
        "Data Type": "[Open, Closed, Consider]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Open"
      },
      {
        "Column Name": "InitialState",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Initial State = Existing, the Facility currently exists in the network. If Initial State = Potential, the Facility will be considered for inclusion in the network during the model run.",
        "Data Type": "[Existing, Potential]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Existing"
      },
      {
        "Column Name": "Organization",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Organization which the Facility belongs to. Organizations are defined in the Organizations table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Organizations",
        "MasterColumn": "OrganizationName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Address",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The street address of the Facility.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "City",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The city of the Facility.",
        "Data Type": "String - Fixed",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Region",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The state/region of the Facility.",
        "Data Type": "String - Fixed",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "PostalCode",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The ZIP/postal Code of the Facility.",
        "Data Type": "String - Fixed",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Country",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The country of the Facility.",
        "Data Type": "String - Fixed",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Latitude",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The latitude coordinate of the Facility.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "LatitudeValue",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "Longitude",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The longitude coordinate of the Facility.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "LongitudeValue",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "FixedStartupCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Status = Consider and Initial State = Potential, the Fixed Startup Cost will be incurred if the Facility is opened during the model solve. No startup cost will be incurred if the facility already exists. Fixed Startup Cost may be a single value or a step function of the Facility's throughput. If a step function is used, this cost will be determined based on the largest throughput recorded in any of the periods for which the Facility will be operating once opened.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "FixedOperatingCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, TRIAD]",
        "Explanation": "The fixed cost associated with operating the Facility; Fixed Operating Cost may be a single value or a step function of the Facility's throughput. If a step function is used, this cost will be determined using the total throughput over each period. Step costs can either be entered directly in this field or defined in the Step Costs table and referenced by name here.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "FixedClosingCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Status = Consider and Initial State = Existing, the Fixed Closing Cost will be incurred if the Facility is closed during the model solve. Fixed Closing Cost may be a single value or a step function of the Facility's throughput. If a step function is used, this cost will be determined based on the largest throughput recorded in any of the periods for which the Facility was operating. Step costs can either be entered directly in this field or defined in the Step Costs table and referenced by name here.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "StorageCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "This value indicates the total storage capacity (across products) of the Facility over each period in the horizon. Total Storage is measured as the Ending Inventory at the Facility, calculated as Max Turns Estimated Inventory + Ending Prebuild Inventory. Period-specific capacities can be entered in the Facilities Multi Time Period table and product-specific capacities can be modeled using inventory constraints.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "StorageCapacityUOM",
        "Required": NaN,
        "RequiredIf": "StorageCapacity",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure used to define the Storage Capacity of the Facility. Quantity, weight, and volume units of measure defined in the Units Of Measure table are accepted.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "ThroughputCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": "This value indicates the total allowable throughput (across products) of the Facility over each period in the horizon. Period-specific capacities can be entered in the Facilities Multi Time Period table and product-specific limits can be modeled using flow constraints.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ThroughputCapacityUOM",
        "Required": NaN,
        "RequiredIf": "ThroughputCapacity",
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit of measure used to define the Throughput Capacity of the Facility. Quantity, weight, and volume units of measure defined in the Units Of Measure table are accepted.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "ThroughputCapacityPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "For Simulation runs, this field will specify the length of time over which the throughput capacity will be applied. For example, the Throughput Capacity might be set to 500 EA with Capacity Period = 1 and Capacity Period UOM = DAY - this would mean that the Facility could process no more than 500 units in any day. The first period will be evaluated at the Simulation Start Time, and throughput capacity will be evaluated over the specified period length. Capacity is evaluated over individual capacity periods, a rolling capacity is not considered.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ThroughputCapacityPeriodUOM",
        "Required": NaN,
        "RequiredIf": "ThroughputCapacityPeriod",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines Throughput Capacity Period.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "SingleSource",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, the Facility can only receive inbound product from a single source.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "False"
      },
      {
        "Column Name": "SingleSourceOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, all Line Items in the Orders placed from this Facility must be sourced from a single site (Facility or Supplier). If False, each Line Item within the Orders may be sourced from a different site. A value of True in this field overrides Single Source Line Items = False, enforcing that all Line Items in the orders come from a single source.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "False"
      },
      {
        "Column Name": "SingleSourceLineItems",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the entire Line Item in orders placed from this Facility must be sourced from a single site (Facility or Supplier). If False, the Line Items may be sourced from different sites.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "False"
      },
      {
        "Column Name": "AllowBackorders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the Facility accepts backorders in the event that an order cannot be fulfilled before the Order Due Date (defined in the Replenishment Orders and Procurement Orders tables).",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BackorderTimeLimit",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "This value is the amount of time after which unsatisfied backorders will be cancelled by the Facility. A value of NULL will be interpreted as an infinite time limit, while a value of 0 is equivalent to setting Allow Backorders = False.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BackorderTimeUOM",
        "Required": NaN,
        "RequiredIf": "BackorderTimeLimit",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure used to define the Backorder Time Limit. Any of the time units of measure defined in the Units Of Measure table can be used here.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "AllowPartialFillOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, orders placed by the Facility may be partially filled. Otherwise, orders must be filled in full. The remaining quantity of partially filled orders may be satisfied in the future with additional shipments; if the Backorder Time Limit is reached on a partially filled order, the remaining quantity will be cancelled. If Partial Fill Orders is False, Partial Fill Line Items will also be forced to False.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowPartialFillLineItems",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, line items within orders placed by the Facility may be partially filled. Otherwise, line items must be filled in full. The remaining quantity of partially filled line items may be satisfied in the future with additional shipments; if the Backorder Time Limit is reached on a partially filled line item, the remaining quantity will be cancelled.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OperatingSchedule",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The schedule (defined in the Business Hours table) dictating when the Facility will be open for business. If no schedule is specified, the Facility is assumed to be open 24 hours per day.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BusinessHours",
        "MasterColumn": "ScheduleName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OperatingCalendar",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The calendar (defined in the Business Calendar table) dictating which days of the year the Facility will shut down. If no calendar is specified, the Facility is assumed not to shut down.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BusinessCalendars",
        "MasterColumn": "CalendarName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QueuePriority",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "For any Queues that are evaluated with a Queueing Priority Logic, there can be a By Location component to the priority logic used. If By Location is used, The Queue Priority fields in the Customers, Facilities and Suppliers table will be used to determine how the queues will be ordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedCO2Emissions",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The fixed amount of CO2 Emissions at this Facility. This can be thought of as the amount of CO2 that needs to be offset for the facility to exist in the network. Variable CO2 Emissions can be defined for specific production or transportation activities in the Production Policy and Transportation Policy tables.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "FixedPickupTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The fixed time required at this Facility. This will be additive to the FixedPickupTime specified in the Shipments table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedPickupTimeUOM",
        "Required": NaN,
        "RequiredIf": "FixedPickupTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines Fixed Pickup Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "FixedDeliveryTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The fixed time required for deliveries at this Facility. This will be additive to the FixedDeliveryTime specified in the Shipments table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedDeliveryTimeUOM",
        "Required": NaN,
        "RequiredIf": "FixedDeliveryTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines Fixed Delivery Time",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "UnitPickupTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The time required per unit to be loaded at this Facility. This will be additive to any UnitPickupTime that is specified in the Shipments table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitPickupTimeUOM",
        "Required": NaN,
        "RequiredIf": "UnitPickupTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines Unit Pickup Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "UnitDeliveryTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The time required per unit to be delivered at this Facility. This will be additive to any UnitDeliveryTime that is specified in the Shipments table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitUOM",
        "Required": NaN,
        "RequiredIf": "UnitPickupTime OR UnitDeliveryTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that defines the basis on which UnitPickupTime and UnitDeliveryTime will be applied at this Facility. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "UnitDeliveryTimeUOM",
        "Required": NaN,
        "RequiredIf": "UnitDeliveryTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines Unit Delivery Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "GeographicRiskScore",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": "When geocoding a location, or following the most recent DART run, the Geographic Risk will be populated using the Primary Risk Rating defined in Model Settings. For more detailed information on Geographic Risk, reference the Geographic Risk Metrics output table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UserDefinedRiskScore",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": "An optional input that can be leveraged by DART when calculating Facility Risk. If left empty for some records, the User Defined Risk will not be considered for those specific Facilities. The weighting for this component will be defined in the Facility Risk Configurations table, and any outputs will be reported alongside other geographic risk scores in the Geographic Risk Metrics table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "FacilitiesMultiTimePeriod": {
    "type": "Input",
    "description": "The FacilitiesMultiTimePeriod table contains information about specific facilities over multiple time periods. This includes details such as the status of the facility, startup and operating costs, storage and throughput capacities, and any changes or overrides that apply to the facility for different periods. This table allows for the modeling and analysis of how facilities may be opened, closed, or operated in an optimal way over a range of time periods.",
    "columns": [
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The period name in which a change is being made. Groups of periods are also supported. Changes that are made in the Multi Time Period table will be applied as overrides for the records of the base table for the specified periods only. Additionally, only the fields that contain information needing to be updated are required to be entered, in the absence of data in the Multi Time Period table the data from the standard table will be persisted",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Facility",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the multi-time period record exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "FacilityStatus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Facility Status dictates whether or not the Facility is included in the model for the specified period(s). If Status is set to Consider, the Facility may either be opened (Initial State = Potential) or closed (Initial State = Existing) depending on what is optimal. If the Facility is excluded from the model, any records for this Facility in other tables will also be ignored.",
        "Data Type": "[Open, Closed, Consider]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedStartupCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Status = Consider and Initial State = Potential, the Fixed Startup Cost will be incurred if the Facility is opened during the model solve. No startup cost will be incurred if the facility already exists. Fixed Startup Cost may be a single value or a step function of the Facility's throughput. If a step function is used, this cost will be determined based on the largest throughput recorded in any of the periods for which the Facility will be operating once opened.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedOperatingCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The fixed cost associated with operating the Facility; Fixed Operating Cost may be a single value or a step function of the Facility's throughput. If a step function is used, this cost will be determined using the total throughput over each period. Step costs can either be entered directly in this field or defined in the Step Costs table and referenced by name here.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedClosingCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Status = Consider and Initial State = Existing, the Fixed Closing Cost will be incurred if the Facility is closed during the model solve. Fixed Closing Cost may be a single value or a step function of the Facility's throughput. If a step function is used, this cost will be determined based on the largest throughput recorded in any of the periods for which the Facility was operating. Step costs can either be entered directly in this field or defined in the Step Costs table and referenced by name here.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "StorageCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "This value indicates the total storage capacity (across products) of the Facility for the specified periods. Total Storage is measured as the Ending Inventory Product-specific capacities can be modeled using inventory constraints.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "StorageCapacityUOM",
        "Required": NaN,
        "RequiredIf": "StorageCapacity",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure used to define the Storage Capacity of the Facility. Quantity, weight, and volume units of measure defined in the Units Of Measure table are accepted.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "ThroughputCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "This value indicates the total allowable throughput (across products) of the Facility over the specified period(s). Product-specific limits can be modeled using flow constraints.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ThroughputCapacityUOM",
        "Required": NaN,
        "RequiredIf": "ThroughputCapacity",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure used to define the Throughput Capacity of the Facility. Quantity, weight, and volume units of measure defined in the Units Of Measure table are accepted.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "ThroughputCapacityPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "For Simulation runs, this field will specify the length of time over which the throughput capacity will be applied. For example, the Throughput Capacity might be set to 500 EA with Capacity Period = 1 and Capacity Period UOM = DAY - this would mean that the Facility could process no more than 500 units in any day. The first period will be evaluated at the Simulation Start Time, and throughput capacity will be evaluated over the specified period length. Capacity is evaluated over individual capacity periods, a rolling capacity is not considered.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ThroughputCapacityPeriodUOM",
        "Required": NaN,
        "RequiredIf": "ThroughputCapacityPeriod",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Time) that defines Throughput Capacity Period.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "SingleSource",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, the Facility can only receive inbound product from a single source.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SingleSourceOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, every order placed at the Facility must be satisfied from a single source.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SingleSourceLineItems",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, each line item in an order must come from a single source. Otherwise, a line item may be satisfied by multiple sources.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowBackorders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, the Facility accepts backorders in the event that an order cannot be fulfilled before the Order Due Date (defined in the Replenishment Orders and Procurement Orders tables).",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BackorderTimeLimit",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "This value is the amount of time after which unsatisfied backorders will be cancelled by the Facility. A value of NULL will be interpreted as an infinite time limit, while a value of 0 is equivalent to setting Allow Backorders = False.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BackorderTimeUOM",
        "Required": NaN,
        "RequiredIf": "BackorderTimeLimit",
        "Engine": "[]",
        "Explanation": "The unit of measure used to define the Backorder Time Limit. Any of the time units of measure defined in the Units Of Measure table can be used here.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "AllowPartialFillOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, orders placed by the Facility may be partially filled. Otherwise, orders must be filled in full. The remaining quantity of partially filled orders may be satisfied in the future with additional shipments; if the Backorder Time Limit is reached on a partially filled order, the remaining quantity will be cancelled.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowPartialFillLineItems",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, line items within orders placed by the Facility may be partially filled. Otherwise, line items must be filled in full. The remaining quantity of partially filled line items may be satisfied in the future with additional shipments; if the Backorder Time Limit is reached on a partially filled line item, the remaining quantity will be cancelled.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OperatingSchedule",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The schedule (defined in the Business Hours table) dictating when the Facility will be open for business. If no schedule is specified, the Facility is assumed to be open 24 hours per day.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BusinessHours",
        "MasterColumn": "ScheduleName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OperatingCalendar",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The calendar (defined in the Business Calendar table) dictating which days of the year the Facility will shut down. If no calendar is specified, the Facility is assumed not to shut down.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BusinessCalendars",
        "MasterColumn": "CalendarName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QueuePriority",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "For any Queues that are evaluated with a Queueing Priority Logic, there can be a By Location component to the priority logic used. If By Location is used, The Queue Priority fields in the Customers, Facilities and Suppliers table will be used to determine how the queues will be ordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedCO2Emissions",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The fixed amount of CO2 Emissions at this Facility for the given period. This can be thought of as the amount of CO2 that needs to be offset for the facility to exist in the network. Variable CO2 Emissions can be defined for specific production or transportation activities in the Production Policy and Transportation Policy tables.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "FacilityCountConstraints": {
    "type": "Input",
    "description": "The FacilityCountConstraints table contains information about constraints related to counting open facilities during specific periods. It includes details such as the facility names, periods, constraint types, constraint values, and counting rules for evaluating the number of open facilities. The table also specifies the status of each constraint and whether it should be included or excluded during the model run.",
    "columns": [
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Facility or Facilities for which we are counting open sites. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "FacilityNameGroupBehavior",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Facility Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Period(s) in which we are counting open Facilities. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "PeriodNameGroupBehavior",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Period Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ConstraintType",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The type of constraint imposed on the count for the specified Facility/Period combination. \n\nMin: the count must be greater than or equal to the Constraint Value.\nMax: the count must be less than or equal to the Constraint Value.\nFixed: the count must be equal to the Constraint Value.\nFixed With Tolerance: The count must be equal to the Constraint Value * (1 +/- Relative Constraint Tolerance). Relative Constraint Tolerance is specified in the Model Run Options.\nConditional Min: if the count is nonzero, it must be greater than or equal to the Constraint Value.",
        "Data Type": "[Min, Max, Fixed, Fixed With Tolerance, Conditional Min]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConstraintValue",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The numeric value that the specified count will be evaluated against.",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the constraint exists in the model. If Status is set to Exclude, this constraint (or constraints in the case of Enumerated Groups) will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "CountingRule",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Facilities: Count the number of unique Facilities which are open during the specified Period(s).\nPeriods: Count the unique number of Periods in which the specified Facility or Facilities are open.",
        "Data Type": "[Facilities, Periods]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "FacilityDemand": {
    "type": "Input",
    "description": "The FacilityDemand table contains information about internal facility requirements for products across different time periods. It specifies demand quantities, pricing, penalties for unfulfilled demand, and service requirements, similar to customer demand but for internal facility needs within the supply chain network.",
    "columns": [
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The name of the Facility. Facility Groups are supported; the Group behavior will be Enumerate.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The name of the Product requested by the Facility. Product Groups are supported; the Group behavior will be Enumerate.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "When set to aggregate, this field allows for product groups that are entered for a demand record to be evaluated together as all group members being able to satisfy the single demand record.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Enumerate"
      },
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Period in which the demand record occurs. Period Groups are supported; the Group behavior will be enumerate.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "Model Horizon"
      },
      {
        "Column Name": "Quantity",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The amount of the Product requested by the Facility in the specified Period.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MinQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The minimum amount of Product required to satisfy the Facility's demand in the specified Period. This value is used to turn demand satisfaction into a soft constraint; if no value is entered, it is assumed that Min Quantity is equal to Quantity.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The maximum amount of Product that the Facility can receive in the specified Period. This value is used to turn demand satisfaction into a soft constraint; if no value is entered, it is assumed that Max Quantity is equal to Quantity.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Required": NaN,
        "RequiredIf": "Quantity",
        "Engine": "[]",
        "Explanation": "The unit of measure that measures Quantity, Min Quantity, and Max Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Status dictates whether or not the Demand record exists in the model. If Status is set to Exclude, this  record will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "DemandStatus",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Demand Status dictates whether or not the Demand record must be considered in the optimization run. If the Demand Status is set to Consider, the demand record can be serviced if it is optimal to do so, and if it is chosen not to be served then any associated penalty costs will be applied. If the Demand Status is set to Exclude then the demand record will be forced into a Not Served status and any associated Penalty Cost will be applied.",
        "Data Type": "[Include, Exclude, Consider]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "ServiceMode",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Optionally, a required Transportation Mode can be specified here. If multiple Modes are acceptable, a Mode Group may be used; the Group behavior will be Aggregate.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationModes",
        "MasterColumn": "ModeName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitPrice",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The price that the Facility will pay for each unit of the Product. This price overrides the Unit Price given in the Products table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitPriceUOM",
        "Required": NaN,
        "RequiredIf": "UnitPrice",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Unit Price. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "PenaltyCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The penalty cost associated with not fulfilling a unit of demand",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "PenaltyCostUOM",
        "Required": NaN,
        "RequiredIf": "PenaltyCost",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Penalty Cost. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "FacilityRiskConfigurations": {
    "type": "Input",
    "description": "The FacilityRiskConfigurations table contains detailed configurations for evaluating different types of risks (geographic, user-defined, utilization, concentration, and source count) when calculating the Facility Risk Score. This table includes the weights applied to each type of risk, as well as any specific risk bands used for evaluating concentration and source count risks. The configurations saved in this table are specific to the Risk Profile selected for analysis.",
    "columns": [
      {
        "Column Name": "RiskProfileName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The name of the Risk Profile that the risk configuration is saved for. Risk Profiles are configured to run using specified source data in the Risk Rating Configurations table, and will take the risk weightings and bands associated with the Risk Profile from each of the configuration tables",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskRatingConfigurations",
        "MasterColumn": "RiskProfileName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "GeographicRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Geographic Risk when calculating the Facility Risk Score. Detailed Geographic Risks configurations on geographic risk components are entered in the Geographic Risk Configurations table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UserDefinedRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the User Defined Risk when calculating the Facility Risk Score.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UtilizationRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Utilization Risk when calculating the Facility Risk Score. Detailed Utilization Risks configurations on the utilization risk components are entered in the Utilization Risk Configurations table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConcentrationRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Concentration Risk when calculating the Facility Risk Score.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConcentrationRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The Risk Band that is used to evaluate the Concentration Risk at the Facility. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "BandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SourceCountRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Source Count Risk when calculating the Facility Risk Score.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SourceCountRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The Risk Band that is used to evaluate the Source Count Risk at the Facility. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "BandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "FixedRoutes": {
    "type": "Input",
    "description": "The FixedRoutes table contains definitions for predetermined transportation routes within the supply chain network. It specifies review periods, scheduling parameters, and route planner associations, enabling the configuration of regular, scheduled transportation patterns for consistent movement of goods.",
    "columns": [
      {
        "Column Name": "FixedRouteName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the fixed route",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "RoutePlannerName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The route planner that will use the fixed route",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationRoutePlanners",
        "MasterColumn": "RoutePlannerName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriodFirstTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The first Date/Time at which to review the queue for the specified fixed route. After this Date/Time, the review period length will dictate when fixed route reviews occur. If NULL, Review Period First Time will be the start of the simulation.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time between fixed route executions. After Review Period First Time, a fixed route execution will occur each time Review Period has elapsed. For example, if Review Period First Time is 1/1/2022 12:00:00 AM and Review Period is six hours, we will conduct reviews on 1/1/2022 at 12:00:00 AM, 6:00:00 AM, 12:00:00 PM, and 6:00:00 PM, continuing similarly until the simulation ends. A Review Schedule defined in the Review Schedules table can be entered by Review Schedule Name in this field as well. If NULL, continuous review is used.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "ReviewSchedules",
        "MasterColumn": "ReviewScheduleName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriodUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines Review Period length.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": NaN,
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the fixed route exists in the model. If Status is set to Exclude, the fixed route record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "FixedRoutesDefinitions": {
    "type": "Input",
    "description": "The FixedRoutesDefinitions table contains the detailed sequence of stops that make up predefined transportation routes in the supply chain network. It specifies the ordered list of facilities and customers that comprise each fixed route, including stop numbers and status information, enabling the configuration of regular delivery or pickup sequences.",
    "columns": [
      {
        "Column Name": "FixedRouteName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the fixed route that the stop is associated with",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "FixedRoutes",
        "MasterColumn": "FixedRouteName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SiteName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The location of the stop for the fixed route, this can be a Facility or a Customer.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers, Facilities",
        "MasterColumn": "[Customers.CustomerName, Facilities.FacilityName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "StopNumber",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The stop number within the fixed route for the specified site name",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the stop exists in the route. If Status is set to Exclude, the stop is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "FlowConstraints": {
    "type": "Input",
    "description": "The FlowConstraints table specifies constraints on the flow of goods or materials in a supply chain model. Constraints can be defined based on the origin, destination, product, transportation mode, and period of the flow, as well as the type of constraint (Min, Max, Fixed, etc.) and the numeric value to be evaluated against. Constraints can be set to be included or excluded during the model run.",
    "columns": [
      {
        "Column Name": "OriginName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Origin(s) (Facilities and/or Suppliers) of the flow we are constraining. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities, Suppliers, Sources",
        "MasterColumn": "[Facilities.FacilityName, Suppliers.SupplierName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "OriginNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Origin Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "DestinationName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Destination(s) (Facilities and/or Customers) of the flow we are constraining. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers, Facilities, Destinations",
        "MasterColumn": "[Customers.CustomerName, Facilities.FacilityName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "DestinationNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Destination Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Product(s) in the flow we are constraining. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "ProductNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Product Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ModeName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Transportation Mode(s) of the flow we are constraining (optional). Groups are supported. If left empty, all flows will be considered regardless of if a Mode is used. To specifically constrain against flows that do not use a Mode, enter a value of 'None'",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationModes",
        "MasterColumn": "ModeName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "ModeNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Mode Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Period(s) in which we are constraining flow. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "PeriodNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Period Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ConstraintType",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The type of constraint imposed on the flow for the specified Source/Destination/Product/Mode/Period combination. \n\nMin: the flow must be greater than or equal to the Constraint Value.\nMax: the flow must be less than or equal to the Constraint Value.\nFixed: the flow must be equal to the Constraint Value.\nFixed With Tolerance: The flow must be equal to the Constraint Value * (1 +/- Relative Constraint Tolerance). Relative Constraint Tolerance is specified in the Model Run Options.\nConditional Min: if the flow is nonzero, it must be greater than or equal to the Constraint Value.",
        "Data Type": "[Min, Max, Fixed, Fixed With Tolerance, Conditional Min]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConstraintValue",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The numeric value that the specified flow will be evaluated against.",
        "Data Type": "double",
        "Primary Key": "Yes",
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConstraintValueUOM",
        "Required": NaN,
        "RequiredIf": "ConstraintValue",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Constraint Value. Quantity, Volume, Weight and Shipment units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Shipment, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Shipment, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the constraint exists in the model. If Status is set to Exclude, this constraint (or constraints in the case of Enumerated Groups) will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "FlowCountConstraints": {
    "type": "Input",
    "description": "The FlowCountConstraints table contains constraints that determine the number of flows based on specified criteria such as origin, destination, product, transportation mode, and period. Constraints can be set based on the count of unique elements within these criteria, and can include minimum, maximum, fixed, or conditional values. The table also includes information on the behavior of groups within each criteria and the status of whether the constraint should be included or excluded during the model run.",
    "columns": [
      {
        "Column Name": "OriginName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Origin(s) (Facilities and/or Suppliers) of the flow we are counting. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities, Suppliers, Sources",
        "MasterColumn": "[Facilities.FacilityName, Suppliers.SupplierName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "OriginNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Origin Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "DestinationName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Destination(s) (Facilities and/or Customers) of the flow we are counting. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers, Facilities, Destinations",
        "MasterColumn": "[Customers.CustomerName, Facilities.FacilityName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "DestinationNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Destination Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Product(s) in the flow we are counting. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "ProductNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Product Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ModeName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Transportation Mode(s) of the flow we are counting (optional). Groups are supported. If left empty, all flows will be considered regardless of if a Mode is used. To specifically constrain against flows that do not use a Mode, enter a value of 'None'",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationModes",
        "MasterColumn": "ModeName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "ModeNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Mode Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Period(s) in which we are counting flow. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "PeriodNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Period Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ConstraintType",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The type of constraint imposed on the flow for the specified Source/Destination/Product/Mode/Period combination. \n\nMin: the count must be greater than or equal to the Constraint Value.\nMax: the count must be less than or equal to the Constraint Value.\nFixed: the count must be equal to the Constraint Value.\nFixed With Tolerance: The count must be equal to the Constraint Value * (1 +/- Relative Constraint Tolerance). Relative Constraint Tolerance is specified in the Model Run Options.\nConditional Min: if the count is nonzero, it must be greater than or equal to the Constraint Value.",
        "Data Type": "[Min, Max, Fixed, Fixed With Tolerance, Conditional Min]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConstraintValue",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The numeric value that the specified flow count will be evaluated against.",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the constraint exists in the model. If Status is set to Exclude, this constraint (or constraints in the case of Enumerated Groups) will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "CountingRule",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Origins: Count the number of unique Origins in the flows for the specified Destination/Product/Mode/Period combination.\nDestinations: Count the number of unique Destinations in the flows for the specified Origin/Product/Mode/Period combination.\nProducts: Count the number of unique Products in the flows for the specified Origin/Destination/Mode/Period combination.\nModes: Count the number of unique Modes used in the flows for the specified Origin/Destination/Product/Period combination.\nPeriods: Count the number of unique Periods in which flow occurs for the specified Origin/Destination/Product/Mode combination.\nOrigins-Destinations: Count the number of unique Origin-Destination combinations on which flow occurs for the specified Mode/Product/Period combination.",
        "Data Type": "[Origins, Destinations, Products, Modes, Periods, Origins-Destinations]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "GeographicRiskConfigurations": {
    "type": "Input",
    "description": "The  GeographicRiskConfigurations table contains information on the weightings and risk bands assigned to various geographic risks such as Bio Lab Distance, Economic, Natural Disaster, Nuclear Distance, Political, Epidemic, and Labor risks. These weightings and risk bands are used to calculate the Geographic Risk Score for each Customer, Facility, and Supplier. The table also specifies the Risk Profile that the risk configuration is saved for, allowing for different risk profiles to be configured and applied to different sets of source data.",
    "columns": [
      {
        "Column Name": "RiskProfileName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The name of the Risk Profile that the risk configuration is saved for. Risk Profiles are configured to run using specified source data in the Risk Rating Configurations table, and will take the risk weightings and bands associated with the Risk Profile from each of the configuration tables",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskRatingConfigurations",
        "MasterColumn": "RiskProfileName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BioLabDistanceRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Bio Lab Distance Risks when calculating the Geographic Risk Score. The aggregate Geographic Risk score will then be weighted again at each Customer, Facility, and Supplier based on the Geographic Risk Weight in the corresponding risk configuration table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BioLabDistanceRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The Risk Band that is used to evaluate the Bio Lab Distance Risk. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "BandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "EconomicRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Economic Risks when calculating the Geographic Risk Score. The aggregate Geographic Risk score will then be weighted again at each Customer, Facility, and Supplier based on the Geographic Risk Weight in the corresponding risk configuration table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "EconomicRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The Risk Band that is used to evaluate the Economic Risk. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "BandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "NaturalDisasterRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Natural Disaster Risks when calculating the Geographic Risk Score. The aggregate Geographic Risk score will then be weighted again at each Customer, Facility, and Supplier based on the Geographic Risk Weight in the corresponding risk configuration table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "NaturalDisasterRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The Risk Band that is used to evaluate the Natural Disaster Risk. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "BandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "NuclearDistanceRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Nuclear Distance Risks when calculating the Geographic Risk Score. The aggregate Geographic Risk score will then be weighted again at each Customer, Facility, and Supplier based on the Geographic Risk Weight in the corresponding risk configuration table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "NuclearDistanceRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The Risk Band that is used to evaluate the Nuclear Distance Risk. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "BandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "PoliticalRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Political Risks when calculating the Geographic Risk Score. The aggregate Geographic Risk score will then be weighted again at each Customer, Facility, and Supplier based on the Geographic Risk Weight in the corresponding risk configuration table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "PoliticalRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The Risk Band that is used to evaluate the Political Risk. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "BandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "EpidemicRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Epidemic Risks when calculating the Geographic Risk Score. The aggregate Geographic Risk score will then be weighted again at each Customer, Facility, and Supplier based on the Geographic Risk Weight in the corresponding risk configuration table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "EpidemicRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The Risk Band that is used to evaluate the Epidemic Risk. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "BandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LaborRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Labor Risks when calculating the Geographic Risk Score. The aggregate Geographic Risk score will then be weighted again at each Customer, Facility, and Supplier based on the Geographic Risk Weight in the corresponding risk configuration table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LaborRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The Risk Band that is used to evaluate the Labor Risk. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "BandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "GreenfieldServiceBands": {
    "type": "Input",
    "description": "The GreenfieldServiceBands table provides information on various service bands within a model. It includes details such as the distance value for the service band, the unit of measure for the distance, the status of the constraint (whether it is excluded or not), and the name and percentage of demand quantity that must be fulfilled within the service band distance. This table is used to manage and analyze service band constraints in a model.",
    "columns": [
      {
        "Column Name": "ServiceBandName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The name of the Service Band constraint, this name will be referenced in the Greenfield output tables",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ServiceBandPercentage",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The percentage (in terms of demand quantity) that must be fulfilled within the specified Service Band Distance.",
        "Data Type": "double",
        "Primary Key": "Yes",
        "Validation Type": "Percentage",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ServiceBandDistance",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The distance value for the service band.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ServiceBandDistanceUOM",
        "Required": NaN,
        "RequiredIf": "ServiceBandDistance",
        "Engine": "[TRIAD]",
        "Explanation": "The distance unit of measure that the service band is expressed in terms of.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "Status dictates whether or not the constraint exists in the model. If Status is set to Exclude, this constraint will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "GreenfieldSettings": {
    "type": "Input",
    "description": "The GreenfieldSettings table outlines the parameters and options for optimizing the location and operation of new facilities in a supply chain network. It includes settings for minimizing total facilities, excluding suppliers, restricting facility selection to candidate locations, setting fixed costs for greenfield facilities, determining customer fulfillment and procurement costs, refining facility locations, clustering customers, setting limits on new facility openings, excluding certain facilities, specifying maximum sourcing distances, and establishing minimum and maximum throughput capacities for greenfield facilities.",
    "columns": [
      {
        "Column Name": "MinNumberOfNewFacilities",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The minimum number of new facility locations to be opened during solve. This will include any Candidate Facilities that are selected as well as any Greenfield Facilities. This value is ignored if MinimizeTotalFacilities is set to True.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxNumberOfNewFacilities",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The maximum number of new facility locations to be opened during solve. This will include any Candidate Facilities that are selected as well as any Greenfield Facilities. This value is ignored if MinimizeTotalFacilities is set to True.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MinimizeTotalFacilities",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "If True, the number of new facility locations to be opened will be minimized (Greenfield Facilities and Candidate Facilities). If False, the total cost (Facility Fixed Cost and Transportation Cost) will be minimized.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "False"
      },
      {
        "Column Name": "ExcludeFacilities",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "If True, all Facilities in the model will be ignored during the Greenfield run. This value is set to False if OnlyUseFacilitiesAsCandidateLocations is set to True.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "True"
      },
      {
        "Column Name": "ExcludeSuppliers",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "If True, all Suppliers in the model will be ignored during the Greenfield run.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "True"
      },
      {
        "Column Name": "OnlyUseFacilitiesAsCandidateLocations",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "If True, the selection pool for Greenfield locations will be restricted to Facilities that are Included. Facilities with a Facility Status of 'Open' will be forced to open and have their fixed operating cost charged in the Greenfield solve. Facilities with a Facility Status of 'Consider' will have the option to be opened as a Candidate Facility location and if selected, their fixed operating cost will be charged.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "False"
      },
      {
        "Column Name": "CustomerMaxSourcingDistance",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The maximum distance that any Customer can source a flow from a Greenfield Facility, a Candidate Facility, or an Existing Facility.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "GreenfieldFacilityMinThroughput",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The minimum quantity of demand that a Greenfield Facility must service to be selected.This will apply to all Facilities, both new and existing, for the Greenfield solve.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "GreenfieldFacilityMaxThroughput",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The maximum quantity of demand that a single Greenfield Facility can service. For existing or candidate Facilities the throughput capacity will be specified in the Facilities table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "GreenfieldFacilityFixedCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The fixed cost applied to each Greenfield Facility used in the solve.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "CustomerFulfillmentCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The cost charged for all flows from Facilities to Customers on a quantity-distance basis.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1"
      },
      {
        "Column Name": "ProcurementCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The cost charged for all flows from Suppliers to Facilities on a quantity-distance basis.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0.75"
      },
      {
        "Column Name": "RunLocationRefinementHeuristic",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "If True, the Greenfield Facilities selected by the solver can be improved beyond their initial location that would be co-located with a Customer / Cluster location.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "True"
      },
      {
        "Column Name": "CustomerClusterRadius",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The distance that Customers should be clustered over. The UOM of this distance measure is the primary distance UOM specified in the Model Settings table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AutoDetectClusterRadius",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "If True, large models with more than 3000 customers will be automatically clustered to have less than 3000 nodes during the optimization phase. Clustomers are then disaggregated for outputs.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "True"
      },
      {
        "Column Name": "ClusteringApproach",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The method used to identify customer clusters. The 'fcluster' method requires a computation of the full distance matrix between all customers pairs which can be a time consuming process. The 'utm' method is based on the Universal Transverse Mercator (UTM) coordinate system looks to identify clusters in each UTM zone. While UTM based method may in some cases be less accurate it does not to precompute the full distance matrix between all customer pairs.",
        "Data Type": "[utm, fcluster]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "utm"
      }
    ]
  },
  "Groups": {
    "type": "Input",
    "description": "The Groups table provides information about different groups of members that can be included or excluded from a model run. Each group is assigned a GroupName and GroupType, and contains individual Members that have an associated record in a master table. The status of each Member in a Group determines if they are included or excluded during the model run. The type of behavior for each Group can be either Aggregate or Enumerate, which affects how the members are evaluated in the model.",
    "columns": [
      {
        "Column Name": "GroupName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The name of the Group; this value can be referenced in other tables to apply records to members of the Group. Depending on which table the Group is referenced in, treatment of the Group members will either be implied or taken as input in that table. Group behavior types are Aggregate and Enumerate. Items in an Enumerated Group are evaluated individually while items in an Aggregated Group will be evaluated collectively.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "GroupType",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The type of elements the Group consists of. If Group Type = Source, the Group can contain both Facilities and Suppliers. If Group Type = Destination, the Group can contain both Facilities and Customers. Otherwise, Group Type denotes the table that members may come from.\n\nNEO does not currently support GroupType = WorkResources\n\nTHROG does not currently support GroupType = Periods",
        "Data Type": "[Products, Customers, Facilities, Suppliers, Sources, Destinations, Periods, Modes, WorkCenters, WorkResources, Processes, BillsOfMaterials, Shipments, TransportationAssets]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MemberName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The entity that is being assigned to the Group. The Member Name must have an associated record in the relevant master table.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products, Customers, Facilities, Suppliers, Periods, TransportationModes, WorkCenters, WorkResources, Processes, BillsOfMaterials",
        "MasterColumn": "[Products.ProductName, Customers.CustomerName, Facilities.FacilityName, Suppliers.SupplierName, Periods.PeriodName, TransportationModes.ModeName, WorkCenters.WorkCenterName, WorkResources.WorkResourceName, Processes.ProcessName, BillsOfMaterials.BOMName, Shipments.ShipmentID, TransportationAssets.AssetName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "Status dictates whether the specified Member is included in or excluded from the Group during the model run. If Status = Exclude, the specified Member is ignored wherever the Group is referenced.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "Histograms": {
    "type": "Input",
    "description": "The Histograms table contains statistical distribution data used for modeling variable values in the supply chain simulation. It defines probability distributions through bin edges and heights that can be referenced by other tables to generate realistic variability in quantities, times, and other numeric values.",
    "columns": [
      {
        "Column Name": "HistogramName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the histogram. If this Histogram Name is used as an input in another table, the histogram's data as described by the Bin Edges and Bin Heights will be used to form a distribution and draw a value.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BinEdge",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The lower edge of the bin, a bin's width will be determined by the next defined bin edge. The last edge will serve as the upper edge for the last bin and the height will be ignored.",
        "Data Type": "double",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BinHeight",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The height of each bin.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "InputFactors": {
    "type": "Input",
    "description": "The InputFactors table contains configuration settings for variables that can be adjusted during genetic algorithm optimization of the supply chain model. It defines the parameters, constraints, and adjustment rules for various model inputs across different tables, enabling systematic exploration of different supply chain scenarios.",
    "columns": [
      {
        "Column Name": "InputFactorName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The name of the Input Factor (SIM-specific); Input Factors correspond to values (\"genes\") that are allowed to be adjusted in the genetic algorithm (GA). The GA will iteratively run the simulation with modified genes to improve the model outcomes according to the Utility Level field of the Output Factors table.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TableName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The name of the table that contains the data which the Input Factor can adjust.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "Valid Input Table",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ColumnName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The name of the column (within the specified table) that the Input Factor will adjust.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "Valid Column Name",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Filter",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The filter to apply to the specified column and table (optional).",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": "Valid Filter",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BaseValue",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The value used to initialize the Input Factor. If left empty, the value from the cell in the Input Table being referenced will be used as the base value.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MinValue",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The minimum value that the Input Factor is allowed to take in any iteration.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxValue",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The maximum value that the Input Factor is allowed to take in any iteration.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "StepSize",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The increments by which the Input Factor is allowed to be adjusted. Min Value and Max Value will always be allowed even if they cannot be reached from Base Value in increments of this size.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "RelativeValues",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "If True, the values specified for Min Value, Max Value and Step Size will be relative percentages of the Base Value. For example, if Base Value = 200, Min Value = 50 and RelativeValues = TRUE then the Minimum Value that van be used would be 100.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Enumerate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "Optionally, a list of values which the Input Factor is allowed to take. These values should be entered as [ Value 1 | Value 2 | Value 3 | \u2026 ]. If both the Base Value and Enumerate fields are populated, the values specified in Enumerate will be used.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "Status dictates whether or not the Input Factor is included when running the genetic algorithm.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "InventoryConstraints": {
    "type": "Input",
    "description": "The InventoryConstraints table contains information on constraints related to inventory levels for different facilities, products, and periods. It includes details such as the type of constraint, the numeric value to be evaluated against, the unit of measure, and the type of inventory considered. The status column indicates whether the constraint is included or excluded in the model run, while group behaviors specify how constraints are applied to groups of facilities, products, or periods.",
    "columns": [
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Facility or Facilities at which we are constraining inventory. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "FacilityNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Facility Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Product(s) for which we are constraining inventory. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "ProductNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Product Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Period(s) in which we are constraining inventory. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "PeriodNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Period Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ConstraintType",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The type of constraint imposed on the inventory for the specified Facility/Product combination. \n\nMin: the inventory level must be greater than or equal to the Constraint Value.\nMax: the inventory level must be less than or equal to the Constraint Value.\nFixed: the inventory level must be equal to the Constraint Value.\nFixed With Tolerance: The inventory level must be equal to the Constraint Value * (1 +/- Relative Constraint Tolerance). Relative Constraint Tolerance is specified in the Model Run Options.\nConditional Min: if the inventory level is nonzero, it must be greater than or equal to the Constraint Value.",
        "Data Type": "[Min, Max, Fixed, Fixed With Tolerance, Conditional Min]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConstraintValue",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The numeric value that the specified inventory level will be evaluated against.",
        "Data Type": "double",
        "Primary Key": "Yes",
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConstraintValueUOM",
        "Required": NaN,
        "RequiredIf": "ConstraintValue",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Constraint Value. Quantity, Volume, and Weight units of measure are supported. DOS is also supported where Constraint Type = Min.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, DaysOfSupply]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, DaysOfSupply]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "ConsideredInventory",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The type of inventory that is to be considered when applying the constraint.",
        "Data Type": "[Prebuild Only, Turn Estimated Only, Prebuild and Turn Estimated]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Prebuild Only"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the constraint exists in the model. If Status is set to Exclude, this constraint (or constraints in the case of Enumerated Groups) will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "InventoryCountConstraints": {
    "type": "Input",
    "description": "The InventoryCountConstraints table stores information about constraints that dictate whether certain inventory records should be included or excluded during a model run. This information includes details such as the specific facility, product, and period being counted, the type of constraint imposed, the constraint value, and the counting rule being applied. The table also includes fields for specifying group behavior for facilities, products, and periods, as well as the status of the constraint (whether it is included or excluded).",
    "columns": [
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Facility or Facilities at which we are counting inventory records. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "FacilityNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Facility Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Product(s) for which we are counting inventory records. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "ProductNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Product Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Period(s) in which we are counting inventory records. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "PeriodNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Period Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ConstraintType",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The type of constraint imposed on the inventory count for the specified Facility/Product/Period combination. \n\nMin: the count must be greater than or equal to the Constraint Value.\nMax: the count must be less than or equal to the Constraint Value.\nFixed: the count must be equal to the Constraint Value.\nFixed With Tolerance: The count must be equal to the Constraint Value * (1 +/- Relative Constraint Tolerance). Relative Constraint Tolerance is specified in the Model Run Options.\nConditional Min: if the count is nonzero, it must be greater than or equal to the Constraint Value.",
        "Data Type": "[Min, Max, Fixed, Fixed With Tolerance, Conditional Min]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConstraintValue",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The numeric value that the specified count will be evaluated against.",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the constraint exists in the model. If Status is set to Exclude, this constraint (or constraints in the case of Enumerated Groups) will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "CountingRule",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Facilities: Count the number of unique Facilities at which inventory is held for the specified Product/Period combination.\nProducts: Count the number of unique Products that are held in inventory for the specified Facility/Period combination.\nPeriods: Count the number of unique Periods in which inventory is held for the specified Facility/Product combination.",
        "Data Type": "[Facilities, Products, Periods]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "InventoryPolicies": {
    "type": "Input",
    "description": "The InventoryPolicies table contains information on the inventory management policies and parameters for specific Facility/Product combinations. It includes details such as unit of measure for reorder points, order quantities, review periods, unit values, carrying costs, surplus levels, DOS calculations, forecasting types, inventory turnover times, simulation policies, stocking sites, and status of the policy. This table helps manage and track inventory levels and policies for efficient supply chain operations.",
    "columns": [
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Facility that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Product that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicy",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The inventory management logic applied to the specified Facility/Product combination.",
        "Data Type": "[(s,S), (Min,Max), (R,Q), (T,S), Do Nothing]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicyValue1",
        "Required": "Yes",
        "RequiredIf": "SimulationPolicy = (s,S) OR (Min,Max) OR (R,Q)",
        "Engine": "[THROG]",
        "Explanation": "The first argument of the Policy. To Optimize policies do not require parameters. (T,S) will not use this parameter, but the periodic review information will be taken from the Review Period First Time / Duration fields directly",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicyValue1UOM",
        "Required": NaN,
        "RequiredIf": "SimulationPolicyValue1",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure by which the reorder points specified will be evaluated by",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, DaysOfSupply]",
        "Master Table": NaN,
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, DaysOfSupply]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "SimulationPolicyValue2",
        "Required": "Yes",
        "RequiredIf": "SimulationPolicy = (s,S) OR (Min,Max) OR (R,Q) OR (T,S)",
        "Engine": "[THROG]",
        "Explanation": "The second argument of the Policy. To Optimize policies do not require parameters.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicyValue2UOM",
        "Required": NaN,
        "RequiredIf": "SimulationPolicyValue2",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure by which the order up to / order quantities will be evaluated by",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, DaysOfSupply]",
        "Master Table": NaN,
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, DaysOfSupply]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "StockingSite",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If True, the Facility can hold inventory of the specified Product. Otherwise, no units of the Product can be held in inventory at the Facility. Non-inventory handling costs can be defined in the Warehousing Policies table.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "True"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "Status dictates whether or not the policy exists in the model. If Status is set to Exclude, the policy record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "ReviewPeriodFirstTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The first Date/Time at which to review inventory of the Product at the specified Facility. Inventory levels will be evaluated using the criteria defined by the Policy and Policy Parameter fields. After this Date/Time, the review period length will dictate when inventory reviews occur. If NULL, Review Period First Time will be the start of the simulation.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time between inventory reviews. After Review Period First Time, an inventory review will occur each time Review Period has elapsed. For example, if Review Period First Time is 1/1/2022 12:00:00 AM and Review Period is six hours, we will conduct reviews on 1/1/2022 at 12:00:00 AM, 6:00:00 AM, 12:00:00 PM, and 6:00:00 PM, continuing similarly until the simulation ends. A Review Schedule defined in the Review Schedules table can be entered by Review Schedule Name in this field as well. If NULL, continuous review is used.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "ReviewSchedules",
        "MasterColumn": "ReviewScheduleName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriodUOM",
        "Required": NaN,
        "RequiredIf": "ReviewPeriod",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines Review Period.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "UnitValue",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Unit Value represents the value of one unit of the Product being held at the Facility. If NULL, this field will be equal to the Unit Value specified in the Products table. The holding cost for this Facility/Product combination will be calculated as Unit Value * Carrying Cost Percentage.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitValueUOM",
        "Required": NaN,
        "RequiredIf": "UnitValue",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines the Unit Value. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "CarryingCostPercentage",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The percentage of the Product's value (Unit Value) that will be incurred as a per unit inventory holding cost. This percentage is to be entered as an annual percentage of the value, and inventory holding costs will be calculated as Average Inventory Value * Carrying Cost Percentage * (Period Length in days) / 365). This field will read entries in as the percentages which they represent, for example an entry of 12 will correspond to a carrying cost of 12%.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "Percentage",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "{InventoryCarryingCostPercentage}"
      },
      {
        "Column Name": "InitialInventory",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The inventory levels for the Facility/Product combination at the beginning of the model run.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "InitialInventoryUOM",
        "Required": NaN,
        "RequiredIf": "InitialInventory",
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit of measure that defines initial inventory levels. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "UnitStorageCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost associated with storing one unit of the Product in inventory at the Facility. This cost is incurred in addition to inventory holding costs and is applied against the calculated Average Inventory for the Facility / Product combination. This field can support a single numeric value, a step cost lookup (defined in the Step Costs table), or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "UnitStorageCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitStorageCost",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Unit Storage Cost. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "MinDwellTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Min Dwell Time will determine the length of time that a product must remain at a Facility before it can flow out or be consumed. When being used in Optimization, Dwell Time will be evaluated against the period lengths to determine which period a product will become available. For example, if the Dwell Time is 45 Days and a model has monthly periods, the product will become available in Period 2.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MinDwellTimeUOM",
        "Required": NaN,
        "RequiredIf": "MinDwellTime",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Time) that defines the length of the Min Dwell Time",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "MaxDwellTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Max Dwell Time will determine the maximum length of time that a product can remain at a Facility before it must flow out or be consumed. When being used in Optimization, Dwell Time will be evaluated against the period lengths to determine which period a product will become available. For example, if the Dwell Time is 45 Days and a model has monthly periods, the product must leave the Facility by Period 2.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxDwellTimeUOM",
        "Required": NaN,
        "RequiredIf": "MaxDwellTime",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Time) that defines the length of the Max Dwell Time",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "SurplusLevel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The inventory level above which surplus inventory will be calculated. For any inventory that is identified as surplus, any push policies will be evaluated from the Replenishment Policies table to identify which destinations the surplus inventory might be sent out to. In the event that ALL inventory should be pushed, set the Surplus Level to 0.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SurplusLevelUOM",
        "Required": NaN,
        "RequiredIf": "SurplusLevel",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that defines Surplus Level.  Quantity, Volume, and Weight and DOS units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, DaysOfSupply]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, DaysOfSupply]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "SurplusReviewPeriodFirstTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The first Date/Time at which to evaluate whether surplus inventory is present for the Facility/Product combination. If NULL, Surplus Review Period First Time will be the start of the simulation. NOTE this review period will only apply to Push policies where identified surplus is pushed out of the facility. In instances where Pull policies are evaluating surplus, a surplus review will happen at the time the pull request lands at the Facility.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SurplusReviewPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time between Surplus reviews. After Surplus Review Period First Time, a Surplus review will occur each time Surplus Review Period has elapsed. If NULL, Surplus Review Period Duration will be 30 days. NOTE this review period will only apply to Push policies where identified surplus is pushed out of the facility. In instances where Pull policies are evaluating surplus, a surplus review will happen at the time the pull request lands at the Facility.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "30"
      },
      {
        "Column Name": "SurplusReviewPeriodUOM",
        "Required": NaN,
        "RequiredIf": "SurplusReviewPeriod",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines Surplus Review Period.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "DOSWindow",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of days' worth of throughput that will be tracked for the Facility/Product combination when determining the Days of Supply (DOS) level. Throughput will be summed over this window then divided by the length of the window to obtain a single-day DOS estimate. This DOS estimate can be used as the unit of measure in inventory constraints.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DOSWindowUOM",
        "Required": NaN,
        "RequiredIf": "DOSWindow",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines the length of the DOS Window.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "DOSLeadTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The length of time to offset the DOS Window by when determining the DOS value for the Facility/Product combination.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DOSLeadTimeUOM",
        "Required": NaN,
        "RequiredIf": "DOSLeadTime",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines DOS Lead Time. If DOS Lead Time = 5 and DOS Lead Time UOM Symbol = Day, the end point of the DOS Window will be five days prior to the current simulation time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "DOSReviewPeriodFirstTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The first Date/Time at which to calculate DOS for the Facility/Product combination. If NULL, DOS Review Period First Time will be the start of the simulation.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DOSReviewPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time between DOS reviews. After DOS Review Period First Time, a DOS review will occur each time DOS Review Period has elapsed. If NULL, DOS Review Period will be 30 days.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "30"
      },
      {
        "Column Name": "DOSReviewPeriodUOM",
        "Required": NaN,
        "RequiredIf": "SafetyStockReviewPeriod",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines DOS Review Period Duration.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "ForecastType",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If Days Of Supply is used as a UOM for SIM Policy Value 1 or 2, or in the Surplus Level definition, we must specify whether a Historical or User-Defined forecast will be used when calculating the DOS value. If User-Defined is selected, the Forecast Name specified in the DOS User Defined Forecast Name will be used for all DOS calculations.",
        "Data Type": "[Historical, User-Defined]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DOSUserDefinedForecastName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If DOS Forecast Type is set to User-Defined, the User Defined Forecast Name entered here will be used for all DOS calculations. User Defined Forecasts are defined in the User Defined Forecasts table where the aggregation and disaggregation settings are entered, and all forecast data will be entered in the User Defined Forecasts Data table",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UserDefinedForecasts",
        "MasterColumn": "ForecastName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuotedTimeToFill",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Quoted Time To Fill will be used to calculate Order and Line Service Percentages for the Facility and Facility Product Service Summary output tables. Orders that are able to be filled within the quoted fill time from the time that they enter the order fulfillment queue at the facility will be marked as successfully serviced.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuotedTimeToFillUOM",
        "Required": NaN,
        "RequiredIf": "QuotedTimeToFill",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Time) that defines Quoted Time To Fill.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "TimeBetweenInventoryTurns",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The amount of time that it takes for Inventory of the specified Facility/Product combination to turn over. Given the time between inventory turns, the number of turns will be calculated for the length of the period. Then, total outbound flow of the specified Product from the Facility will be divided by the number of turns to determine the Max Turn Estimated Inventory. In the event that the Time Between Inventory Turns is longer than the length of the Period, the Turn Estimated Inventory will be calculated based off of the proportion of the turn window that falls within the period.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeBetweenInventoryTurnsUOM",
        "Required": NaN,
        "RequiredIf": "TimeBetweenInventoryTurns",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines the Time Between Inventory Turns. Time units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "InventoryPoliciesMultiTimePeriod": {
    "type": "Input",
    "description": "The InventoryPoliciesMultiTimePeriod table is used to store policies related to inventory management that apply to specific facilities and products over multiple time periods. This table includes information such as scheduled receipts, unit values, carrying costs, storage costs, and other factors that impact inventory management decisions. Changes made in this table will override the records of the base table for the specified periods only.",
    "columns": [
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The period name in which a change is being made. Groups of periods are also supported. Changes that are made in the Multi Time Period table will be applied as overrides for the records of the base table for the specified periods only. Additionally, only the fields that contain information needing to be updated are required to be entered, in the absence of data in the Multi Time Period table the data from the standard table will be persisted",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Facility that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Product that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the multi-time period record exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "PolicyStatus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Policy Status dictates whether or not the policy exists in the model for the specified period(s). If Policy Status is set to Exclude, the policy record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicy",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The inventory management logic applied to the specified Facility/Product combination. This Policy can be used as  a base rule or can be linked to a policy in the Inventory Planning table.",
        "Data Type": "[(s,S), (Min,Max), (R,Q), (T,S), Do Nothing]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicyValue1",
        "Required": NaN,
        "RequiredIf": "SimulationPolicy = (s,S) OR (Min,Max) OR (R,Q)",
        "Engine": "[]",
        "Explanation": "The first argument of the Policy. To Optimize policies do not require parameters. (T,S) will not use this parameter, but the periodic review information will be taken from the Review Period First Time / Duration fields directly",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicyValue1UOM",
        "Required": NaN,
        "RequiredIf": "SimulationPolicyParameter1",
        "Engine": "[]",
        "Explanation": "The unit of measure by which the reorder points specified will be evaluated by",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, DaysOfSupply]",
        "Master Table": NaN,
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, DaysOfSupply]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "SimulationPolicyValue2",
        "Required": NaN,
        "RequiredIf": "SimulationPolicy = (s,S) OR (Min,Max) OR (R,Q) OR (T,S)",
        "Engine": "[]",
        "Explanation": "The second argument of the Policy. To Optimize policies do not require parameters.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicyValue2UOM",
        "Required": NaN,
        "RequiredIf": "SimulationPolicyParameter2",
        "Engine": "[]",
        "Explanation": "The unit of measure by which the order up to / order quantities will be evaluated by",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, DaysOfSupply]",
        "Master Table": NaN,
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, DaysOfSupply]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "StockingSite",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If True, the Facility can hold inventory of the specified Product. Otherwise, no units of the Product can be held in inventory at the Facility. Non-inventory handling costs can be defined in the Warehousing Policies table.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriodFirstTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The first Date/Time at which to review inventory of the Product at the specified Facility. Inventory levels will be evaluated using the criteria defined by the Policy and Policy Parameter fields. After this Date/Time, the review period length will dictate when inventory reviews occur. If NULL, Review Period First Time will be the start of the simulation.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The time between inventory reviews. After Review Period First Time, an inventory review will occur each time Review Period has elapsed. For example, if Review Period First Time is 1/1/2022 12:00:00 AM and Review Period is six hours, we will conduct reviews on 1/1/2022 at 12:00:00 AM, 6:00:00 AM, 12:00:00 PM, and 6:00:00 PM, continuing similarly until the simulation ends. A Review Schedule defined in the Review Schedules table can be entered by Review Schedule Name in this field as well. If NULL, continuous review is used.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "ReviewSchedules",
        "MasterColumn": "ReviewScheduleName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriodUOM",
        "Required": NaN,
        "RequiredIf": "ReviewPeriod",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Time) that defines Review Period.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "ScheduledReceipt",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The amount of inventory that is set to arrive at the beginning of the specified period",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ScheduledReceiptUOM",
        "Required": NaN,
        "RequiredIf": "ScheduledReceipt",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines the scheduled receipt amount. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "UnitValue",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Unit Value represents the value of one unit of the Product being held at the Facility. If NULL, this field will be equal to the Unit Value specified in the Products table. The holding cost for this Facility/Product combination will be calculated as Unit Value * Carrying Cost Percentage.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitValueUOM",
        "Required": NaN,
        "RequiredIf": "UnitValue",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines the Unit Value. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "CarryingCostPercentage",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The percentage of the Product's value (Unit Value) that will be incurred as a per unit inventory holding cost. This percentage is to be entered as an annual percentage of the value, and inventory holding costs will be calculated as Average Inventory Value * Carrying Cost Percentage * (Period Length in days) / 365)",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "Percentage",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "{InventoryCarryingCostPercentage}"
      },
      {
        "Column Name": "UnitStorageCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost associated with storing one unit of the Product in inventory at the Facility. This cost is incurred in addition to inventory holding costs and is applied against the calculated Average Inventory for the Facility / Product combination. This field can support a single numeric value, a step cost lookup (defined in the Step Costs table), or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "UnitStorageCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitStorageCost",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Unit Storage Cost. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "MinDwellTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Min Dwell Time will determine the length of time that a product must remain at a Facility before it can flow out or be consumed. When being used in Optimization, Dwell Time will be evaluated against the period lengths to determine which period a product will become available. For example, if the Dwell Time is 45 Days and a model has monthly periods, the product will become available in Period 2.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MinDwellTimeUOM",
        "Required": NaN,
        "RequiredIf": "MinDwellTime",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Time) that defines the length of the Min Dwell Time",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "MaxDwellTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Max Dwell Time will determine the maximum length of time that a product can remain at a Facility before it must flow out or be consumed. When being used in Optimization, Dwell Time will be evaluated against the period lengths to determine which period a product will become available. For example, if the Dwell Time is 45 Days and a model has monthly periods, the product must leave the Facility by Period 2.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxDwellTimeUOM",
        "Required": NaN,
        "RequiredIf": "MaxDwellTime",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Time) that defines the length of the Max Dwell Time",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "SurplusLevel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The inventory level above which surplus inventory will be calculated. For any inventory that is identified as surplus, any push policies will be evaluated from the Replenishment Policies table to identify which destinations the surplus inventory might be sent out to. In the event that ALL unclaimed inventory should be pushed, set the Surplus Level to 0.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SurplusLevelUOM",
        "Required": NaN,
        "RequiredIf": "SurplusLevel",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Surplus Level.  Quantity, Volume, and Weight and DOS units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, DaysOfSupply]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, DaysOfSupply]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "SurplusReviewPeriodFirstTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The first Date/Time at which to evaluate whether surplus inventory is present for the Facility/Product combination. If NULL, Surplus Review Period First Time will be the start of the simulation. NOTE this review period will only apply to Push policies where identified surplus is pushed out of the facility. In instances where Pull policies are evaluating surplus, a surplus review will happen at the time the pull request lands at the Facility.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SurplusReviewPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The time between Surplus reviews. After Surplus Review Period First Time, a Surplus review will occur each time Surplus Review Period has elapsed. If NULL, Surplus Review Period Duration will be 30 days. NOTE this review period will only apply to Push policies where identified surplus is pushed out of the facility. In instances where Pull policies are evaluating surplus, a surplus review will happen at the time the pull request lands at the Facility.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "30"
      },
      {
        "Column Name": "SurplusReviewPeriodUOM",
        "Required": NaN,
        "RequiredIf": "SurplusReviewPeriod",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Time) that defines Surplus Review Period.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "DOSWindow",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The number of days' worth of throughput that will be tracked for the Facility/Product combination when determining the Days of Supply (DOS) level. Throughput will be summed over this window then divided by the length of the window to obtain a single-day DOS estimate. This DOS estimate can be used as the unit of measure in inventory constraints.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DOSWindowUOM",
        "Required": NaN,
        "RequiredIf": "DOSWindow",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Time) that defines the length of the DOS Window.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "DOSLeadTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The length of time to offset the DOS Window by when determining the DOS value for the Facility/Product combination.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DOSLeadTimeUOM",
        "Required": NaN,
        "RequiredIf": "DOSLeadTime",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Time) that defines DOS Lead Time. If DOS Lead Time = 5 and DOS Lead Time UOM Symbol = Day, the end point of the DOS Window will be five days prior to the current simulation time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "DOSReviewPeriodFirstTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The first Date/Time at which to calculate DOS for the Facility/Product combination. If NULL, DOS Review Period First Time will be the start of the simulation.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DOSReviewPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The time between DOS reviews. After DOS Review Period First Time, a DOS review will occur each time DOS Review Period has elapsed. If NULL, DOS Review Period will be 30 days.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DOSReviewPeriodUOM",
        "Required": NaN,
        "RequiredIf": "SafetyStockReviewPeriod",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Time) that defines DOS Review Period Duration.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "ForecastType",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If Days Of Supply is used as a UOM for SIM Policy Value 1 or 2, or in the Surplus Level definition, we must specify whether a Historical or User-Defined forecast will be used when calculating the DOS value. If User-Defined is selected, the Forecast Name specified in the DOS User Defined Forecast Name will be used for all DOS calculations.",
        "Data Type": "[Historical, User-Defined]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DOSUserDefinedForecastName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If DOS Forecast Type is set to User-Defined, the User Defined Forecast Name entered here will be used for all DOS calculations. User Defined Forecasts are defined in the User Defined Forecasts table where the aggregation and disaggregation settings are entered, and all forecast data will be entered in the User Defined Forecasts Data table",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UserDefinedForecasts",
        "MasterColumn": "ForecastName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuotedTimeToFill",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Quoted Time To Fill will be used to calculate Order and Line Service Percentages for the Facility and Facility Product Service Summary output tables. Orders that are able to be filled within the quoted fill time from the time that they enter the order fulfillment queue at the facility will be marked as successfully serviced.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuotedTimeToFillUOM",
        "Required": NaN,
        "RequiredIf": "QuotedTimeToFill",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Time) that defines Quoted Time To Fill.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "TimeBetweenInventoryTurns",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The amount of time that it takes for Inventory of the specified Facility/Product combination to turn over. Given the time between inventory turns, the number of turns will be calculated for the length of the period. Then, total outbound flow of the specified Product from the Facility will be divided by the number of turns to determine the Max Turn Estimated Inventory. In the event that the Time Between Inventory Turns is longer than the length of the Period, the Turn Estimated Inventory will be calculated based off of the proportion of the turn window that falls within the period.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeBetweenInventoryTurnsUOM",
        "Required": NaN,
        "RequiredIf": "TimeBetweenInventoryTurns",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines the Time Between Inventory Turns. Time units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "LoadBalancingDemand": {
    "type": "Input",
    "description": "The LoadBalancingDemand table contains information about regular product deliveries from sources to customers that need to be balanced across time periods. It specifies weekly demand volumes, delivery frequencies, and scheduling rules to ensure efficient distribution of regular shipments.",
    "columns": [
      {
        "Column Name": "SourceName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The Facility or Supplier that the demand will be served from.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities, Suppliers",
        "MasterColumn": "[Facilities.FacilityName, Suppliers.SupplierName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "UOMConversion": NaN
      },
      {
        "Column Name": "CustomerName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The name of the Customer receiving the demand",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers",
        "MasterColumn": "CustomerName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "UOMConversion": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The Product for the demand.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "UOMConversion": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "Status dictates whether or not this demand will be considered in the model",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include",
        "UOMConversion": NaN
      },
      {
        "Column Name": "WeeklyDemand",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": NaN,
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1",
        "UOMConversion": NaN
      },
      {
        "Column Name": "NumberOfDeliveriesPerWeek",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": NaN,
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1",
        "UOMConversion": NaN
      },
      {
        "Column Name": "LoadBalancingScheduleName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The rules that the delivery schedule must follow for this customer",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "LoadBalancingSchedules",
        "MasterColumn": "LoadBalancingScheduleName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "UOMConversion": NaN
      }
    ]
  },
  "LoadBalancingSchedules": {
    "type": "Input",
    "description": "The LoadBalancingSchedules table contains delivery schedule constraints and rules for balanced product distribution. It defines allowable delivery days, minimum and maximum intervals between deliveries, and day-specific delivery permissions to optimize regular delivery patterns.",
    "columns": [
      {
        "Column Name": "LoadBalancingScheduleName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "A set of rules governing the delivery schedule for a customer",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "UOMConversion": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "Status dictates whether or not this schedule will be considered in the model",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include",
        "UOMConversion": NaN
      },
      {
        "Column Name": "MinDaysBetweenDelivery",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": NaN,
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0",
        "UOMConversion": NaN
      },
      {
        "Column Name": "MaxDaysBetweenDelivery",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": NaN,
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "7",
        "UOMConversion": NaN
      },
      {
        "Column Name": "MondayDelivery",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": NaN,
        "Data Type": "[Force, Prevent, Consider]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Consider",
        "UOMConversion": NaN
      },
      {
        "Column Name": "TuesdayDelivery",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": NaN,
        "Data Type": "[Force, Prevent, Consider]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Consider",
        "UOMConversion": NaN
      },
      {
        "Column Name": "WednesdayDelivery",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": NaN,
        "Data Type": "[Force, Prevent, Consider]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Consider",
        "UOMConversion": NaN
      },
      {
        "Column Name": "ThursdayDelivery",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": NaN,
        "Data Type": "[Force, Prevent, Consider]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Consider",
        "UOMConversion": NaN
      },
      {
        "Column Name": "FridayDelivery",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": NaN,
        "Data Type": "[Force, Prevent, Consider]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Consider",
        "UOMConversion": NaN
      },
      {
        "Column Name": "SaturdayDelivery",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": NaN,
        "Data Type": "[Force, Prevent, Consider]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Consider",
        "UOMConversion": NaN
      },
      {
        "Column Name": "SundayDelivery",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": NaN,
        "Data Type": "[Force, Prevent, Consider]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Consider",
        "UOMConversion": NaN
      }
    ]
  },
  "Lookups": {
    "type": "Input",
    "description": "The Lookups table in the ANURA database stores information about different lookup operations that can be performed to retrieve values from a specified source table based on mappings provided in the source and destination columns. This includes details such as the source table, destination table, whether it is a range lookup, default value in case of lookup failure, lookup name, source value column, and mappings for joining source and destination columns. This table is used to facilitate data retrieval and mapping operations within the database.",
    "columns": [
      {
        "Column Name": "LookupName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name assigned to this lookup. This name can be referenced in other input tables, at which point the lookup will attempt to pull in the Source Value based on the mappings defend in the Source Column and Destination Column fields.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SourceTable",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The table that will serve as the data source for the lookup. Values will be pulled from the column listed in the Source Value field based on the mappings specified in the Source Column and Destination Column Mapping fields",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DestinationTable",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The table in the ANURA database that the lookup will be used in.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SourceColumnMapping",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Source Column Mapping and Destination Column Mapping fields will specify the columns in the listed Source Table and the Input Table where the lookup is referenced that a join will be defined over.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DestinationColumnMapping",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Source Column Mapping and Destination Column Mapping fields will specify the columns in the listed Source Table and the Input Table where the lookup is referenced that a join will be defined over. The Destination Column will support the use of a dot operator to reference columns in the associated master table, if applicable. For example, the Destination Column could be listed as ProductName.UnitWeight and this would be referencing the Unit Weight entry in the Products table for whatever product the lookup is being evaluated over.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "IsRangeLookup",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Is Range Lookup field will define whether or not the mapping for the Source / Destination Column mapping fields should be an exact match (Range Lookup = FALSE) or a ranged lookup (Range Lookup = True). If a value of True is entered, the value from the Source column will be evaluated against those in the Destination Column where the Destination values will serve as lower bounds for the different bands.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SourceValue",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The column from the Source Table that is the be populated into the input filed where the Lookup is called.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DefaultValue",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If a lookup fails to return a value for a record, the Default Value will be inserted instead.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "Maps": {
    "type": "Input",
    "description": "The Maps table contains visualization configurations for displaying supply chain network information. It stores map definitions, descriptions, associated data, and metadata for creating geographic representations of supply chain elements and relationships.",
    "columns": [
      {
        "Column Name": "MapName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Description",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Data",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Tags",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MapType",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CreatedDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LastEditedDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ModelInfo": {
    "type": "Input",
    "description": "The ModelInfo table contains metadata about the supply chain model itself. It stores model identification, description, versioning information, tags, and tracking details about model creation and updates for documentation and management purposes.",
    "columns": [
      {
        "Column Name": "ModelName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, DART, DENDRO]",
        "Explanation": NaN,
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ModelDescription",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, DART, DENDRO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Tags",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, DART, DENDRO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Image",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, DART, DENDRO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DataModel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, DART, DENDRO]",
        "Explanation": NaN,
        "Data Type": "[ANURA, Tadpole]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DataModelVersion",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, DART, DENDRO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CreatedBy",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, DART, DENDRO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CreatedDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, DART, DENDRO]",
        "Explanation": NaN,
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UpgradeDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, DART, DENDRO]",
        "Explanation": NaN,
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ModelRunOptions": {
    "type": "Input",
    "description": "The ModelRunOptions table contains options for users to customize and adjust settings for model runs in a software program. The table includes fields for status, value, technology, description, data type, UI display name, UI display category, UI display order, and additional options for optimization or simulation models. Users can adjust these options to tailor the model runs to their specific needs and preferences.",
    "columns": [
      {
        "Column Name": "Option",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "Models run using either Optimization or Simulation will have additional run options that can be adjusted. The name of those options will be listed in this field, with the option setting, description, and impacted technology in fields to follow",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Status of the Model Run Options, all will be set to Exclude by default which will allow for the solver-specified defaults to be used. If users wish to use their own settings for runs, they can adjust the status to be Include and set the appropriate Value",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Exclude"
      },
      {
        "Column Name": "Value",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "This field will specify the value that the solver option is taking",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Technology",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "This field will note which technology the solver option will apply for. This can be quickly filtered against to only show options that are relevant to the technology which you are currently running",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Description",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "This field will offer a description as to the functionality of the run option.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DataType",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "For use in Cosmic Frog, this passes over the Data Type to show which options to render in the UI",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UIDisplayName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "For use in Cosmic Frog, this passes over the parameter's display name to be shown in the run options splash screen.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UIDisplayCategory",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "For use in Cosmic Frog, this is a toggle to show which section of the splash screen, if any, the option should be displayed in.",
        "Data Type": "[Basic, Advanced, None]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UIDisplayOrder",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "For use in Cosmic Frog, this will control the ordering in which options are displayed.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ModelSettings": {
    "type": "Input",
    "description": "The ModelSettings table contains various configuration settings and parameters that define how the simulation model operates, including factors such as circuity factor, average speed, unit of measure symbols for different types of measurements, decimal precision for various fields, risk rating, model horizon dates, warm-up period dates, inventory carrying cost percentage, and more. These settings help customize the simulation model to accurately reflect the real-world scenario being modeled.",
    "columns": [
      {
        "Column Name": "ModelStartDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, HOPPER]",
        "Explanation": "The first date in the Model Horizon",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ModelEndDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, HOPPER]",
        "Explanation": "The last date in the Model Horizon",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "WarmupEndDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The simulation warm up period will begin at the Model Start Date, with the warm up period ending at the Warmup End Date. If the Warmup End Date falls before the Model Start Date, then there will be no warmup period in the simulation.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "InventoryCarryingCostPercentage",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The default percentage of product value that will be applied as inventory holding cost. This value can be overwritten in the Inventory Policies table at the Facility/Product level",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "Percentage",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "CircuityFactor",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, TRIAD, HOPPER]",
        "Explanation": "The circuity factor that is applied when straight line distance calculations are used.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "Percentage",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "17"
      },
      {
        "Column Name": "AverageSpeed",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, TRIAD, HOPPER]",
        "Explanation": "The average speed in PrimarySpeedUOM that will be used to calculate transportation time given a known transportation distance.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "55"
      },
      {
        "Column Name": "CO2Cost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, HOPPER]",
        "Explanation": "The cost applied to the amount of CO2 generated in the model.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": "[]",
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxCO2Emissions",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The maximum amount of CO2 Emissions that will be allowed in the solve. If no value is specified, CO2 will not be restricted at a network-wide level. Specific CO2 constraints can be modelled through Flow or Production Constraints where CO2 is the selected UOM.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": "[]",
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "PrimaryQuantityUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, HOPPER]",
        "Explanation": "The unit of measure symbol that will be used for all {PrimaryUOM} of Type = Quantity",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity]",
        "Expandable": NaN,
        "Default value": "EA"
      },
      {
        "Column Name": "PrimaryVolumeUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit of measure symbol that will be used for all {PrimaryUOM} of Type = Volume",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Volume]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Volume]",
        "Expandable": NaN,
        "Default value": "CFT"
      },
      {
        "Column Name": "PrimaryWeightUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, HOPPER]",
        "Explanation": "The unit of measure symbol that will be used for all {PrimaryUOM} of Type = Weight",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Weight]",
        "Expandable": NaN,
        "Default value": "LB"
      },
      {
        "Column Name": "PrimaryTimeUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The unit of measure symbol that will be used for all {PrimaryUOM} of Type = Time",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "HR"
      },
      {
        "Column Name": "PrimaryDistanceUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, TRIAD, HOPPER]",
        "Explanation": "The unit of measure symbol that will be used for all {PrimaryUOM} of Type = Distance",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance]",
        "Expandable": NaN,
        "Default value": "MI"
      },
      {
        "Column Name": "PrimarySpeedUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, HOPPER]",
        "Explanation": "The unit of measure symbol that will be used for all {PrimaryUOM} of Type = Speed",
        "Data Type": "[MPH, KPH]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "MPH"
      },
      {
        "Column Name": "PrimaryAreaUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure symbol that will be used for all {PrimaryUOM} of Type = Area",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Area]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Area]",
        "Expandable": NaN,
        "Default value": "SMI"
      },
      {
        "Column Name": "PrimaryDOSUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure symbol that will be used for all {PrimaryUOM} of Type = Days Of Supply",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [DaysOfSupply]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[DaysOfSupply]",
        "Expandable": NaN,
        "Default value": "DOS"
      },
      {
        "Column Name": "CostToServeUnitBasis",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The basis by which Cost To Serve will allocate costs over. Quantity, Volume and Weight are supported entries.",
        "Data Type": "[Quantity, Volume, Weight]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": "[]",
        "Expandable": NaN,
        "Default value": "Quantity"
      },
      {
        "Column Name": "QuantityDecimalPrecision",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The number of decimal places that quantity fields will be displayed with.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "VolumeDecimalPrecision",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The number of decimal places that volume fields will be displayed with.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "WeightDecimalPrecision",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The number of decimal places that weight fields will be displayed with.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CostDecimalPrecision",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The number of decimal places that cost fields will be displayed with.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "RiskDecimalPrecision",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The number of decimal places that risk fields will be displayed with.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DistanceDecimalPrecision",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The number of decimal places that distance fields will be displayed with.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeDecimalPrecision",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The number of decimal places that time fields will be displayed with.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "PercentageDecimalPrecision",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The number of decimal places that percentage fields will be displayed with.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConstraintDecimalPrecision",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The number of decimal places that constraint fields will be displayed with.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "GeoCoordinateDecimalPrecision",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The number of decimal places that latitude and longitude fields will be displayed with.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "PrimaryRiskRating",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[DART]",
        "Explanation": "The Risk Rating that will be used to populate Risk outputs in non-risk-specific output tables. This will also be used to populate the Geographic Risk column in the Customers, Facilities and Suppliers input table.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable ",
        "Master Table": "RiskRatingConfigurations",
        "MasterColumn": "RiskRatingName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "OptiRisk"
      }
    ]
  },
  "NetworkRiskConfigurations": {
    "type": "Input",
    "description": "The NetworkRiskConfigurations table contains information about the weightings and risk bands associated with different risk factors that are used to calculate the Network Risk Score. This includes details such as the weights applied to different risks, the risk bands used to evaluate those risks, and the name of the Risk Profile that the configuration is saved for. This table is used to configure and customize the calculation of the overall network risk for a given scenario or organization.",
    "columns": [
      {
        "Column Name": "RiskProfileName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The name of the Risk Profile that the risk configuration is saved for. Risk Profiles are configured to run using specified source data in the Risk Rating Configurations table, and will take the risk weightings and bands associated with the Risk Profile from each of the configuration tables",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskRatingConfigurations",
        "MasterColumn": "RiskProfileName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProductStockingPointCountRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Product Stocking Point Count Risk when calculating the Network Risk Score.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProductStockingPointCountRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The Risk Band that is used to evaluate the Product Stocking Point Count Risk. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "RiskBandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProductMakeAndSupplyCountRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Product Make and Supply Count Risk when calculating the Network Risk Score.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProductMakeAndSupplyCountRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The Risk Band that is used to evaluate the Product Make and Supply Count Risk. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "RiskBandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TransportTimeRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Transport Time Risk when calculating the Network Risk Score.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TransportTimeRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The Risk Band that is used to evaluate the Transport Time Risk. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "RiskBandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeToImportRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Time To Import Risk when calculating the Network Risk Score.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeToImportRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The Risk Band that is used to evaluate the Time To Import Risk. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "RiskBandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeToExportRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Time To Export Risk when calculating the Network Risk Score.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeToExportRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The Risk Band that is used to evaluate the Time to Export Risk. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "RiskBandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "OrderFulfillmentPolicies": {
    "type": "Input",
    "description": "The OrderFulfillmentPolicies table contains policies related to order fulfillment at different facilities. These policies include allowing partial fill orders and line items, setting the review period for order queue evaluations, defining queueing priority logic, and determining the status of each policy in the model. Each policy record is associated with a specific facility.",
    "columns": [
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Facility that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "AllowPartialFillOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, orders fulfilled by the Facility may be partially filled. Otherwise, orders must be filled in full. A value of False overrides a value of True in the Allow Partial Fill Lines field.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "True"
      },
      {
        "Column Name": "AllowPartialFillLineItems",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, line items within orders fulfilled by the Facility may be partially filled. Otherwise, line items must be filled in full.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "True"
      },
      {
        "Column Name": "ReviewPeriodFirstTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The first Date/Time at which to review order queues at the specified Facility. Order queues will be evaluated using the logic specified in Order Assignment Policies. After this Date/Time, the review period length will dictate when order queue reviews occur. If NULL, Review Period First Time will be the start of the simulation.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time between order queue reviews. After Review Period First Time, an order queue review will occur each time Review Period has elapsed. For example, if Review Period First Time is 1/1/2022 12:00:00 AM and Review Period is six hours, we will conduct reviews on 1/1/2022 at 12:00:00 AM, 6:00:00 AM, 12:00:00 PM, and 6:00:00 PM, continuing similarly until the simulation ends. A Review Schedule defined in the Review Schedules table can be entered by Review Schedule Name in this field as well. If NULL, continuous review is used.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "ReviewSchedules",
        "MasterColumn": "ReviewScheduleName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriodUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines Review Period length.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": NaN,
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "QueueingPriorityLogic",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The logic used at the Facility both when deciding how to arrange orders in the order queue and when evaluating the order queue to determine if an order should be repositioned. ByDueDateAndLocation will fulfill the orders that are due the soonest first, and in the case of ties will prioritize orders based on the destination priority set in either the Customers, Facilities, or the Advanced Queueing Priorities table. ByDayQueuedAndLocation will place the items that have been in the queue the longest first, and apply the same prioritization logic as described for ByDueDateAndLocation",
        "Data Type": "[FIFO, ByDueDateAndLocation, ByDayQueuedAndLocation]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "FIFO"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the policy exists in the model. If Status is set to Exclude, the policy record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "TimeInQueueCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The cost associated with an item sitting in a queue. The cost expressed in this field will be charged each time that items sit in a queue for the length of time specified in the Time In Queue Cost UOM field.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeInQueueCostUOM",
        "Required": NaN,
        "RequiredIf": "TimeInQueueCost",
        "Engine": "[]",
        "Explanation": "The unit of measure that time is expressed in terms of.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "OrderProfileProductAffinity": {
    "type": "Input",
    "description": "The OrderProfileProductAffinity table contains information about product relationships in multi-line orders. It defines the likelihood of products being ordered together, specifying primary and secondary product relationships and selection percentages to generate realistic order combinations.",
    "columns": [
      {
        "Column Name": "OrderID",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Order ID as specified in any of the Order Profile tables for which the secondary product selection likelihoods will apply. If left empty, the product affinity details will apply over all order profiles.",
        "Data Type": "String",
        "Primary Key": "YES",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "PrimaryProduct",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Primary Product drawn for multi line order profiles, the selection percentages of the primary product are specified in the Order Profile Product Selection table.",
        "Data Type": "Name",
        "Primary Key": "YES",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": NaN,
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SecondaryProduct",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Given the selected Primary Product, Secondary Products pairings will specify which additional products would be potentially ordered along on the additional line items. If no secondary products are specified, only the primary product will be ordered.",
        "Data Type": "Name",
        "Primary Key": "YES",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": NaN,
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SecondaryProductSelectionPercentage",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The likelihood that the secondary product is selected as an additional line item to be ordered with the primary product. If selected, the quantity listed for this product in the Order Profile Product Selection table will be used to determine the line item quantity.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "Percentage",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "OrderProfileProductSelection": {
    "type": "Input",
    "description": "The OrderProfileProductSelection table contains rules for how products are chosen within order profiles. It defines selection probabilities, quantities, and proportions for products in generated orders, enabling realistic simulation of customer ordering patterns.",
    "columns": [
      {
        "Column Name": "OrderID",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Order ID as specified in any of the Order Profile tables for which the product selection likelihoods will apply. If left empty, the product selection details will apply over all order profiles.",
        "Data Type": "String",
        "Primary Key": "YES",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "PrimaryProduct",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The product name that will be selected as the primary product. For Order Profiles that contain multiple lines, the primary product will be selected first and then draws will occur to fill the products of the remaining line items based on the likelihood of selection as defined in the OrderProfileProductAffinity table.",
        "Data Type": "Name",
        "Primary Key": "YES",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SelectionPercentage",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The percentage chance that the listed product will be selected as the primary product for the order. When selecting a primary product, the SIM will generate a probability distribution for all possible primary products and will draw one product to be used as the primary product of the order.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "Percentage",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OrderQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The quantity of product to be ordered. If the Order Quantity was filled out in the Order Profile record, this quantity entry will be ignored.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OrderQuantityUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that defines Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "OrderProportion",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If the Order Quantity was filled out in the Order Profile table, the Order Proportion field will be used to determine how the Order Profile Quantity will be divided amongst the products that were selected to make up the line items.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "OrderedProductSubstitution": {
    "type": "Input",
    "description": "The OrderedProductSubstitution table contains rules for product substitutions in order fulfillment. It specifies which products can be substituted for others, including priorities and mixing rules, allowing flexible fulfillment strategies when primary products are unavailable.",
    "columns": [
      {
        "Column Name": "SourceLocation",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": NaN,
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities, Suppliers",
        "MasterColumn": "[Facilities.FacilityName, Suppliers.SupplierName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OrderCreationLocation",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers, Facilities",
        "MasterColumn": "[Customers.CustomerName, Facilities.FacilityName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OrderedProduct",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowProductMix",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If Allow Product Mix is set to be True, orders can be made up of a mixture between the ordered and substitute products. If Allow Product Mix is set to False, in the even that a substitute product is used it must fulfill the entire requirement for the ordered product.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": "Products",
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": true
      },
      {
        "Column Name": "SubstituteProduct",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SubstituteProductPriority",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "Organizations": {
    "type": "Input",
    "description": "The Organizations table contains information about different organizational entities within the supply chain network. It defines which facilities belong to which organizations and specifies whether their associated costs should be included in model calculations and objective functions, enabling multi-organization supply chain modeling.",
    "columns": [
      {
        "Column Name": "OrganizationName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The name of the Organization. If no Organization is specified, all facilities are assumed to belong to one Organization. Facilities are assigned to Organizations in the Facilities table.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "InScope",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, costs associated with the Organization are included in the model's objective function (MIP) and cost calculations (SIM). Otherwise, costs associated with the Organization will not be included in the objective function or cost calculations.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": true
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "OutputFactors": {
    "type": "Input",
    "description": "The OutputFactors table contains configuration settings for evaluating simulation results in genetic algorithm optimization. It defines target metrics, utility curves, and weights for different output measures, allowing the system to assess and optimize model performance based on multiple weighted objectives.",
    "columns": [
      {
        "Column Name": "OutputFactorName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The name of the Output Factor; Output Factors allow a user to build a utility curve for a selection of simulation metrics which will be used in a genetic algorithm (GA). The GA will iteratively run the simulation and modify certain input parameters (defined in the Input Factors table) to improve the model outcomes according to the Utility Level field of the Output Factors table.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TableName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The name of the output table that contains the target Output Factor.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "Valid Table Name",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ColumnName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The column of the specified table that contains the simulation metric that the genetic algorithm will seek to improve.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "Valid Column Name",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Filter",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The filter to apply to the specified column and table (optional).",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": "Valid Filter",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UtilityCurve",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "A series of pairings that will build the utility curve for the specified Output Factor. These pairs should be entered as [ Level 1 | Utility Point 1 ][ Level 2 | Utility Point 2 ]\u00e2\u20ac\u00a6 A piecewise linear utility function of the specified Output Factor will be constructed using the given levels and points; this function will be used to evaluate performance of the genetic algorithm as it makes changes to Input Factors.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OutputFactorWeight",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The weight that is applied to the Utility Curve when calculating the listed Output Factor's impact on the overall utility function. Weight is used in the case of multiple output factors being specified so that the weight of each factor can be expressed relative to the other factors being considered.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1"
      },
      {
        "Column Name": "Status",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "Status dictates whether or not the Output Factor is considered when running the genetic algorithm.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "Periods": {
    "type": "Input",
    "description": "The table Periods likely contains information on different defined time periods within a modeling or simulation scenario. Each period is likely labeled with a specific name (PeriodName) and is defined by a StartDate, with the period extending until the next soonest Start Date of the other defined periods. The table may be used to segment the model into smaller time buckets for optimization or simulation purposes. It may also specify requirements for equal length periods in models with cross-period flows.",
    "columns": [
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Period. Periods allow for the model to be broken down into smaller sections of time, each with its own modeling inputs. Optimization will require periods to divide the model into smaller time buckets other than the model horizon whereas Simulation will have a rolling clock. Simulation can still interpret changes that are made through Multi Time Period records, however this will not be required for Simulation models.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "StartDate",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Periods are each defined based on their Start Date value. A Period extends from its Start Date to the soonest Start Date of the other defined Periods. NOTE that for optimization models that will contain cross-period flows (the transportation/production time exceeds that of the period length) then the periods are required to be of equal length.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "Processes": {
    "type": "Input",
    "description": "The Processes table provides a detailed description of the sequential processing steps involved in production, inbound/outbound warehousing, and inbound/outbound transportation. Each process is defined by a series of steps that include information on component consumption, byproduct production, processing rate, unit cost, lot size, and yield percentage. The table also includes data on work centers and work resources assigned to each step, as well as fixed time and fixed costs associated with using the process step.",
    "columns": [
      {
        "Column Name": "ProcessName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The name of the Process; Processes are a single path of sequential processing steps that can be used to describe Production, Inbound/Outbound Warehousing, and Inbound/Outbound Transportation behavior.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "Guru Table3": "TransportationProcessSteps",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "Guru Column3": "ProcessName",
        "PrecisionCategory": "[NaN]",
        "BasicMode": "[]",
        "MasterColumn": NaN
      },
      {
        "Column Name": "StepName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The name of the Process Step being defined; each Step can have its own unit cost, processing time, component consumption, and byproduct production details.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "Guru Table3": "TransportationProcessSteps",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "Guru Column3": "ProcessStepName",
        "PrecisionCategory": "[NaN]",
        "BasicMode": "[]",
        "MasterColumn": NaN
      },
      {
        "Column Name": "StepNumber",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The position of the specified Step in the Process sequence.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "Guru Table3": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "Guru Column3": NaN,
        "PrecisionCategory": "[Integer]",
        "BasicMode": "[]",
        "MasterColumn": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "Status dictates whether or not the Step exists in the Process. If Status is set to Exclude, the Step will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "Guru Table3": "TransportationProcessSteps",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include",
        "Guru Column3": "TransportationProcessStepsStatus",
        "PrecisionCategory": "[NaN]",
        "BasicMode": "[]",
        "MasterColumn": NaN
      },
      {
        "Column Name": "ComponentName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the Component (optional) consumed at the specified Process Step; at most one Component can be associated with each Step. If a BOM is associated with the specified Process via a production policy but consumption of a BOM Component is not specified in a Process Step, the Component will be consumed during the first Process Step. A Component may be consumed during a Process Step without explicitly being required by a BOM.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "Guru Table3": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "Guru Column3": NaN,
        "PrecisionCategory": "[NaN]",
        "BasicMode": "[]",
        "MasterColumn": "ProductName"
      },
      {
        "Column Name": "ComponentQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The amount of the Component consumed during the Process Step. If a BOM is associated with the Process via a production policy and the Component is a member of the BOM, this amount will be compared to the Component's required amount in the BOM. In the event that the total amount of the Component consumed across all Steps of the Process is less than the BOM requirement, the difference will be consumed at the first Step of the Process. Otherwise, the Component Quantity specified at each Step will be consumed accordingly.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "Guru Table3": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "Guru Column3": NaN,
        "PrecisionCategory": "[Quantity]",
        "BasicMode": "[]",
        "MasterColumn": NaN
      },
      {
        "Column Name": "ComponentQuantityUOM",
        "Required": NaN,
        "RequiredIf": "ComponentQuantity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Component Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "Guru Table3": NaN,
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}",
        "Guru Column3": NaN,
        "PrecisionCategory": "[NaN]",
        "BasicMode": "[]",
        "MasterColumn": "Symbol"
      },
      {
        "Column Name": "ByproductName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the Byproduct (optional) produced at the specified Process Step; at most one Byproduct can be associated with each Step. If a BOM is associated with the specified Process via a production policy but production of a Byproduct is not specified in a Process Step, the Byproduct will be produced during the final Process Step. A Byproduct may be produced during a Process Step without explicitly being specified in a BOM.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "Guru Table3": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "Guru Column3": NaN,
        "PrecisionCategory": "[NaN]",
        "BasicMode": "[]",
        "MasterColumn": "ProductName"
      },
      {
        "Column Name": "ByproductQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The amount of the Byproduct produced during the Process Step. If a BOM is associated with the Process via a production policy and the Byproduct is a member of the BOM, this amount will be compared to the Byproduct's amount in the BOM. In the event that the total amount of the Byproduct produced across all Steps of the Process is less than the BOM requirement, the difference will be produced at the final Step of the Process. Otherwise, the Byproduct Quantity specified at each Step will be consumed accordingly.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "Guru Table3": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "Guru Column3": NaN,
        "PrecisionCategory": "[Quantity]",
        "BasicMode": "[]",
        "MasterColumn": NaN
      },
      {
        "Column Name": "ByproductQuantityUOM",
        "Required": NaN,
        "RequiredIf": "ByproductQuantity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Byproduct Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "Guru Table3": NaN,
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}",
        "Guru Column3": NaN,
        "PrecisionCategory": "[NaN]",
        "BasicMode": "[]",
        "MasterColumn": "Symbol"
      },
      {
        "Column Name": "EndProductName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the End Product that will be introduced as the result of the Process Step.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "Guru Table3": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "Guru Column3": NaN,
        "PrecisionCategory": "[NaN]",
        "BasicMode": "[]",
        "MasterColumn": "ProductName"
      },
      {
        "Column Name": "EndProductQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The amount of the End Product that is introduced as the result of the specified Process Step.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "Guru Table3": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "Guru Column3": NaN,
        "PrecisionCategory": "[Quantity]",
        "BasicMode": "[]",
        "MasterColumn": NaN
      },
      {
        "Column Name": "EndProductQuantityUOM",
        "Required": NaN,
        "RequiredIf": "EndProductQuantity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines End Product Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "Guru Table3": NaN,
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}",
        "Guru Column3": NaN,
        "PrecisionCategory": "[NaN]",
        "BasicMode": "[]",
        "MasterColumn": "Symbol"
      },
      {
        "Column Name": "WorkCenterName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Work Center assigned to the Process Step; the processing time and capacity consumed by the Process Step will count toward the capacity of the Work Center. Work Center Groups are not supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "WorkCenters",
        "Guru Table3": "TransportationProcessSteps",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "Guru Column3": "WorkCenterName",
        "PrecisionCategory": "[NaN]",
        "BasicMode": "[]",
        "MasterColumn": "WorkCenterName"
      },
      {
        "Column Name": "WorkResourceName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Work Resource assigned to the Process Step; the processing time and capacity consumed by the Process Step will count toward the capacity of the Work Resource. If a Work Resource Group is entered into this field, the Process will be created for each group member (i.e., the group behavior will be Enumerate).",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "WorkResources",
        "Guru Table3": "TransportationProcessSteps",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "Guru Column3": "WorkResourceName",
        "PrecisionCategory": "[NaN]",
        "BasicMode": "[]",
        "MasterColumn": "WorkResourceName"
      },
      {
        "Column Name": "ProcessingRate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The production rate for the given Process Step. It will be defined as Quantity/Time as is specified in the Quantity/Time UOM fields. If there are is a production rate defined in the Production Policies table where the Process is called, the information in the Process table will override any information that exists in the Production Policies table",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "Guru Table3": "TransportationProcessSteps",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "Guru Column3": "UnitTime",
        "PrecisionCategory": "[Quantity]",
        "BasicMode": "[]",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RateQuantityUOM",
        "Required": NaN,
        "RequiredIf": "ProcessingRate",
        "Engine": "[NEO, THROG]",
        "Explanation": "The UOM that defines the number of units that the Production Rate is expressed in. This can be any UOM of Type = Quantity, Weight, Volume.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "Guru Table3": NaN,
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}",
        "Guru Column3": NaN,
        "PrecisionCategory": "[NaN]",
        "BasicMode": "[]",
        "MasterColumn": "Symbol"
      },
      {
        "Column Name": "RateTimeUOM",
        "Required": NaN,
        "RequiredIf": "ProcessingRate",
        "Engine": "[NEO, THROG]",
        "Explanation": "The UOM that defines the amount of time that the Production Rate is expressed in. This can be any UOM of Type = Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "Guru Table3": NaN,
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}",
        "Guru Column3": NaN,
        "PrecisionCategory": "[NaN]",
        "BasicMode": "[]",
        "MasterColumn": "Symbol"
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The cost associated with each unit of flow that undergoes the specified Process Step. This field can support a single numeric value, a step cost lookup (defined in Step Costs), or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "Guru Table3": "TransportationProcessSteps",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0",
        "Guru Column3": "UnitCost",
        "PrecisionCategory": "[Cost]",
        "BasicMode": "[]",
        "MasterColumn": "StepCostName"
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit of measure that defines Unit Cost. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "Guru Table3": NaN,
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}",
        "Guru Column3": NaN,
        "PrecisionCategory": "[NaN]",
        "BasicMode": "[]",
        "MasterColumn": "Symbol"
      },
      {
        "Column Name": "FixedTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The fixed time that is applied if the Process Step is used. This is how NEO will apply the concept of Changeover Time",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "Guru Table3": "TransportationProcessSteps",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "Guru Column3": "AvgChangeoverTime",
        "PrecisionCategory": "[Time]",
        "BasicMode": "[]",
        "MasterColumn": NaN
      },
      {
        "Column Name": "FixedTimeUOM",
        "Required": NaN,
        "RequiredIf": "FixedTime",
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines the Fixed Time",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "Guru Table3": NaN,
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}",
        "Guru Column3": NaN,
        "PrecisionCategory": "[NaN]",
        "BasicMode": "[]",
        "MasterColumn": "Symbol"
      },
      {
        "Column Name": "FixedCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The fixed cost that is applied if the Process Step is used. This is how NEO will apply the concept of Changeover Costs",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": "StepCosts",
        "Guru Table3": "TransportationProcessSteps",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0",
        "Guru Column3": "SetupCost",
        "PrecisionCategory": "[Cost]",
        "BasicMode": "[]",
        "MasterColumn": NaN
      },
      {
        "Column Name": "LotSize",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Lot Size for the Process Step",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "Guru Table3": "TransportationProcessSteps",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "Guru Column3": "LotSize",
        "PrecisionCategory": "[Quantity]",
        "BasicMode": "[]",
        "MasterColumn": NaN
      },
      {
        "Column Name": "LotSizeUOM",
        "Required": NaN,
        "RequiredIf": "LotSize",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that defines the Lot Size. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "Guru Table3": NaN,
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}",
        "Guru Column3": NaN,
        "PrecisionCategory": "[NaN]",
        "BasicMode": "[]",
        "MasterColumn": "Symbol"
      },
      {
        "Column Name": "YieldPercentage",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The yield percentage of the Process Step, if the field is left as null it will be assumed that the Yield is 100% and there is no loss",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "Percentage",
        "Master Table": NaN,
        "Guru Table3": "TransportationProcessSteps",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "100",
        "Guru Column3": "Yield",
        "PrecisionCategory": "[Percentage]",
        "BasicMode": "[]",
        "MasterColumn": NaN
      },
      {
        "Column Name": "CO2EmissionRate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The rate of CO2 emissions for this process.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "Guru Table3": NaN,
        "AllowableUOMTypes": "[]",
        "Expandable": NaN,
        "Default value": "0",
        "Guru Column3": NaN,
        "PrecisionCategory": "[Cost]",
        "BasicMode": "[]",
        "MasterColumn": NaN
      },
      {
        "Column Name": "CO2EmissionRateUOM",
        "Required": NaN,
        "RequiredIf": "CO2EmissionRate",
        "Engine": NaN,
        "Explanation": "The unit of measure (Type = Quantity, Volume, Weight, Time) that defines the CO2 Emission Rate.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Time]",
        "Master Table": "UnitsOfMeasure",
        "Guru Table3": NaN,
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}",
        "Guru Column3": NaN,
        "PrecisionCategory": "[NaN]",
        "BasicMode": "[]",
        "MasterColumn": "Symbol"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "Guru Table3": "TransportationProcessSteps",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN,
        "Guru Column3": "TransportationProcessStepsNotes",
        "PrecisionCategory": "[NaN]",
        "BasicMode": "[]",
        "MasterColumn": NaN
      }
    ]
  },
  "ProcessesMultiTimePeriod": {
    "type": "Input",
    "description": "ProcessesMultiTimePeriod is a table that allows for the modification of process-related data for specific periods. It includes fields such as Status, Process Step Status, Step Number, Work Center Name, Processing Rate, Unit Cost, Fixed Time, and Fixed Cost, among others. Changes made in this table will override the records of the base table for the specified periods only.",
    "columns": [
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The period name in which a change is being made. Groups of periods are also supported. Changes that are made in the Multi Time Period table will be applied as overrides for the records of the base table for the specified periods only. Additionally, only the fields that contain information needing to be updated are required to be entered, in the absence of data in the Multi Time Period table the data from the standard table will be persisted",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProcessName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Process; Processes are a single path of sequential processing steps that can be used to describe Production, Inbound/Outbound Warehousing, and Inbound/Outbound Transportation behavior.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Processes",
        "MasterColumn": "ProcessName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "StepName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Process Step being defined; each Step can have its own unit cost, processing time, component consumption, and byproduct production details.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the multi-time period record exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "ProcessStepStatus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Process Step Status dictates whether or not the policy exists in the model for the specified period(s). If Process Step Status is set to Exclude, the Process Step will be  ignored during the model run for the specified period(s).",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "StepNumber",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The position of the specified Step in the Process sequence.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ComponentName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The name of the Component (optional) consumed at the specified Process Step; at most one Component can be associated with each Step. If a BOM is associated with the specified Routing via a production policy but consumption of a BOM Component is not specified in a Process Step, the Component will be consumed during the first Process Step. A Component may be consumed during a Process Step without explicitly being required by a BOM.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ComponentQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The amount of the Component consumed during the Process Step. If a BOM is associated with the Process via a production policy and the Component is a member of the BOM, this amount will be compared to the Component's required amount in the BOM. In the event that the total amount of the Component consumed across all Steps of the Process is less than the BOM requirement, the difference will be consumed at the first Step of the Process. Otherwise, the Component Quantity specified at each Step will be consumed accordingly.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ComponentQuantityUOM",
        "Required": NaN,
        "RequiredIf": "ComponentQuantity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Component Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "ByproductName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The name of the Byproduct (optional) produced at the specified Process Step; at most one Byproduct can be associated with each Step. If a BOM is associated with the specified Process via a production policy but production of a Byproduct is not specified in a Process Step, the Byproduct will be produced during the final Process Step. A Byproduct may be produced during a Process Step without explicitly being specified in a BOM.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ByproductQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The amount of the Byproduct produced during the Process Step. If a BOM is associated with the Process via a production policy and the Byproduct is a member of the BOM, this amount will be compared to the Byproduct's amount in the BOM. In the event that the total amount of the Byproduct produced across all Steps of the Process is less than the BOM requirement, the difference will be produced at the final Step of the Process. Otherwise, the Byproduct Quantity specified at each Step will be consumed accordingly.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ByproductQuantityUOM",
        "Required": NaN,
        "RequiredIf": "ByproductQuantity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Byproduct Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "EndProductName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The name of the End Product that will be introduced as the result of the Process Step.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "EndProductQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The amount of the End Product that is introduced as the result of the specified Process Step.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "EndProductQuantityUOM",
        "Required": NaN,
        "RequiredIf": "EndProductQuantity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines End Product Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "WorkCenterName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Work Center assigned to the Process Step; the processing time and capacity consumed by the Process Step will count toward the capacity of the Work Center. Work Center Groups are not supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "WorkCenters",
        "MasterColumn": "WorkCenterName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "WorkResourceName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Work Resource assigned to the Process Step; the processing time and capacity consumed by the Process Step will count toward the capacity of the Work Resource. If a Work Resource Group is entered into this field, the Process will be created for each group member (i.e., the group behavior will be Enumerate).",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "WorkResources",
        "MasterColumn": "WorkResourceName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProcessingRate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The production rate for the given Process Step. It will be defined as Quantity/Time as is specified in the Quantity/Time UOM fields. If there are is a production rate defined in the Production Policies table where the Routing is called, the information in the Process table will override any information that exists in the Production Policies table",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "RateQuantityUOM",
        "Required": NaN,
        "RequiredIf": "ProcessingRate",
        "Engine": "[NEO]",
        "Explanation": "The UOM that defines the number of units that the Production Rate is expressed in. This can be any UOM of Type = Quantity, Weight, Volume.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "RateTimeUOM",
        "Required": NaN,
        "RequiredIf": "ProcessingRate",
        "Engine": "[NEO]",
        "Explanation": "The UOM that defines the amount of time that the Production Rate is expressed in. This can be any UOM of Type = Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost associated with each unit of flow that undergoes the specified Process Step. This field can support a single numeric value, a step cost lookup (defined in Step Costs), or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Unit Cost. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "FixedTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The fixed time that is applied if the Process is used. This is how NEO will apply the concept of Changeover Time",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedTimeUOM",
        "Required": NaN,
        "RequiredIf": "FixedTime",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure (Type = Time) that defines the Fixed Time",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "FixedCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The fixed cost that is applied if the Process is used. This is how NEO will apply the concept of Changeover Costs",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": "StepCosts",
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LotSize",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Lot Size for the Process Step",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LotSizeUOM",
        "Required": NaN,
        "RequiredIf": "LotSize",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines the Lot Size. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "YieldPercentage",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The yield percentage of the Process Step, if the field is left as null it will be assumed that the Yield is 100% and there is no loss",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "Percentage",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CO2EmissionRate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The rate of CO2 emissions for this process for the given period.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": "[]",
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CO2EmissionRateUOM",
        "Required": NaN,
        "RequiredIf": "CO2EmissionRate",
        "Engine": NaN,
        "Explanation": "The unit of measure (Type = Quantity, Volume, Weight, Time) that defines the CO2 Emission Rate.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ProcurementOrderProfiles": {
    "type": "Input",
    "description": "The ProcurementOrderProfiles table contains templates for generating recurring procurement orders from facilities to suppliers. It defines order generation patterns including quantities, frequencies, service levels, and timing parameters, enabling simulation of regular purchasing patterns throughout the model timeline.",
    "columns": [
      {
        "Column Name": "OrderID",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unique identifier for each Order profile, as orders are generated based on their recurring properties they will be indexed off of the entered order number. All Orders will be placed as single line item orders, however multiple recurring orders can be set at the same Facility",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the Facility placing the Order",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Product that the Order will be placed for",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the Order profile exists in the model. If Status is set to Exclude, this  record will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Quantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The amount of Product being ordered by the Facility. Both doubles, as well as distributions are accepted as entries.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Required": NaN,
        "RequiredIf": "Quantity",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that defines Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "NumberOfOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Based on the information entered in the Start Date, Time Between Orders and End Date fields, the Order Profile will generate orders based at different times throughout the simulation. When an order is generated, the Number Of Orders will be evaluated to determine how many orders are going to be placed at that specific time. Once the Number Of Orders is determined, all of the other information specified in the Product Name, Quantity, Number of Lines will be used to generate the details for each of the orders at that time.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1"
      },
      {
        "Column Name": "NumberOfLines",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If the Product Name is left blank for the Order Profile, recurring orders can be generated with a varying number of line items in each order. An integer value, or a distribution can be entered in this field. In the event that the number of lines in an order is 2 or greater, the Order Profile Product Selection and Order Profile Product Affinity tables will be used to determine which products are to be ordered.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1"
      },
      {
        "Column Name": "ServiceLevel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Service Level will be used to calculate the Due Date for all of the generated recurring orders. Due Date will be set to the Order Date + Service Level.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ServiceLevelUOM",
        "Required": NaN,
        "RequiredIf": "ServiceLevel",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) used to define Service Level.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "StartDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Start Date will defined the date that the first order will drop. Orders will drop exactly at the date/time specified in Start Date, and then each following order's drop date will be determined by the Time Between Orders information.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeBetweenOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Time Between Orders will specify how much time goes by from the previous order until the next order drops. Both doubles, as well as distribution entries are supported.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeBetweenOrdersUOM",
        "Required": NaN,
        "RequiredIf": "TimeBetweenOrders",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) used to define Time Between Orders.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "EndDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The End Date will specify the last possible time that an order can drop. If the Time Between Orders causes the next order drop date to fall after the specified End Date, that last order will not be generated.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ProcurementOrders": {
    "type": "Input",
    "description": "The ProcurementOrders table contains detailed information about specific procurement orders placed by facilities. It tracks order specifics including line items, quantities, dates, sourcing requirements, and rules for partial fills and backorders, managing the complete lifecycle of procurement transactions.",
    "columns": [
      {
        "Column Name": "OrderID",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unique identifier for each Order; an Order consists of one or more Line Items.",
        "Data Type": "String - Fixed",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LineItemID",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unique identifier for the single Line Item being defined; Orders with multiple Line Items will require multiple table records.",
        "Data Type": "String - Fixed",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the Facility placing the Order. Facility Groups are supported; the Group behavior will be Enumerate.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Product in the Line Item",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Quantity",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The amount of Product requested by the Facility.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Required": NaN,
        "RequiredIf": "Quantity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "OrderDate",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The date and time at which the Facility places the Order.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DueDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The date and time at which the Order is due at the Facility.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the Line Item exists in the model. If Status is set to Exclude, this  record will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "ServiceMode",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Optionally, a required Transportation Mode can be specified here. If multiple Modes are acceptable, a Mode Group may be used; the Group behavior will be Aggregate. If NULL, any Mode is assumed to be acceptable.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationModes",
        "MasterColumn": "ModeName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SourceName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Optionally, a required Supplier for the Line Item can be specified here. If multiple Suppliers are acceptable, a Supplier Group may be used; the Group behavior will be Aggregate. If NULL, any Supplier of the Product is assumed to be acceptable.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Suppliers",
        "MasterColumn": "SupplierName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SingleSourceOrder",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, all Line Items in the Order must be sourced from a single Supplier. If False, each Line Item within the Order may be sourced from a different Supplier. A value of True in this field overrides Single Source Line Items = False, enforcing that all Line Items in the order come from a single source.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SingleSourceLineItems",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the entire Line Item must be sourced from a single Supplier. If False, the Line Item may be sourced from different sites.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowPartialFillOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the Order may be partially filled. Otherwise, it must be filled in full. If backordering is allowed, the remaining quantity may be satisfied in the future with additional shipments; if the Backorder Time Limit is reached on a partially filled order, the remaining quantity will be cancelled. If Partial Fill Orders is False, Partial Fill Line Items will also be forced to False.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowPartialFillLineItems",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the specified Line Item may be partially filled. Otherwise, the Line Item must be filled in full. If backordering is allowed, the remaining quantity of partially filled Line Items may be satisfied in the future with additional shipments; if the Backorder Time Limit is reached on a partially filled Line Item, the remaining quantity will be cancelled.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowBackorders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the Facility will accept a backorder in the event that the Order cannot be fulfilled before its Due Date. If False and if the Order is not fulfilled by its Due Date, it will be cancelled on that date.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BackorderTimeLimit",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If Allow Backorders = True, this value is the amount of time after which the backorder will be cancelled by the Facility. A value of NULL will be interpreted as an infinite time limit, while a value of zero is equivalent to setting Allow Backorders = False.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BackorderTimeLimitUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) used to define Backorder Time Limit.",
        "Data Type": "Name",
        "Primary Key": "BackorderTimeLimit",
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ProcurementPolicies": {
    "type": "Input",
    "description": "The table ProcurementPolicies contains information on the optimization, simulation, and unit cost policies that must be followed for procurement flows for specific Facility, Product, and Source combinations. The table includes details such as the optimization policy, policy values, unit costs, lot sizes, sourcing range limits, simulation policies, and status of each policy record. Additionally, it specifies the Facility, Product, and Supplier that the policy record applies to.",
    "columns": [
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Facility that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Product that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "SourceName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Supplier that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Suppliers",
        "MasterColumn": "SupplierName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "OptimizationPolicy",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The logic that procurement flows for the Facility, Product, and Source combination(s) must follow. To Optimize selects the lowest cost option. By Ratio (Auto Scale) will enforce a flow split between the specified sources, the defined ratios will apply to flow into the Facility from the listed sources only. By Ratio (No Scale) will enforce a flow split between the specified sources and the defined ratios will be in terms of the total inbound flow into the Facility. Single Source policies force the Facility to receive the Product from one Source. Note that if a group is used in the Facility Name, Product Name, or Source Name field that the groups will be enumerated and the policy logic will be applied over the enumerated entries.",
        "Data Type": "[To Optimize, By Ratio (Auto Scale), By Ratio (No Scale), Single Source]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "To Optimize"
      },
      {
        "Column Name": "OptimizationPolicyValue",
        "Required": NaN,
        "RequiredIf": "OptimizationPolicy = By Ratio (Auto Scale) OR By Ratio (No Scale)",
        "Engine": "[NEO]",
        "Explanation": "By Ratio (Auto Scale): The Policy Value will define the percentage of flow that must be satisfied from the listed source. The percentage will be calculated based on the total inbound flow for the Facility/Product combination from sources with a policy of By Ratio (Auto Scale).\n\nBy Ratio (No Scale): The Policy Value will define the percentage of flow that must be satisfied from the listed source. The percentage will be calculated based on the total inbound flow for the Facility/Product combination across ALL sources.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicy",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The logic that procurement flows for the Facility, Product, and Source combination(s) must follow. By Preference will pick the sources pending product availability in the specified order of preference. Single Source policies force the Facility to receive the Product from one Source.",
        "Data Type": "[By Preference, Single Source, Allocation]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "By Preference"
      },
      {
        "Column Name": "SimulationPolicyValue",
        "Required": NaN,
        "RequiredIf": "SimulationPolicy = By Preference",
        "Engine": "[THROG]",
        "Explanation": "By Preference: Policy Value defines the order of preference in which a source will be selected pending product availability, with the lower numbers representing a higher selection preference",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "Status dictates whether or not the policy exists in the model. If Status is set to Exclude, the policy record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit cost associated with flow for the specified Supplier/Facility/Product combination. This field can support a single numeric value, a step cost (either a direct entry or a lookup), or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit of measure used to define flow for the specified Supplier/Facility/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "MinimumOrderQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The minimum quantity that must move between source and destination in a period for a flow to occur",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MinimumOrderQuantityUOM",
        "Required": NaN,
        "RequiredIf": "MinimumOrderQuantity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines the MOQ for the Supplier/Facility/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "LotSize",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Orders placed from the Customer to the specified sources must be filled in multiples of the specified lot size.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LotSizeUOM",
        "Required": NaN,
        "RequiredIf": "LotSize",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that defines the Lot Size for the Source/Customer/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "MaxSourcingRange",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The maximum allowable distance between the Facility and Source for the Product(s) specified. This field is intended for use in models with group policies to eliminate excessively long lanes from consideration.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxSourcingRangeUOM",
        "Required": NaN,
        "RequiredIf": "MaxSouringRange",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure (Type = Distance) that defines Max Delivery Range.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ProcurementPoliciesMultiTimePeriod": {
    "type": "Input",
    "description": "The ProcurementPoliciesMultiTimePeriod table stores policies related to the procurement of products from suppliers for facilities over multiple time periods. This table includes information such as the status of the policy, optimization rules, unit costs, maximum sourcing ranges, and specific details for each period, facility, product, and supplier involved.",
    "columns": [
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The period name in which a change is being made. Groups of periods are also supported. Changes that are made in the Multi Time Period table will be applied as overrides for the records of the base table for the specified periods only. Additionally, only the fields that contain information needing to be updated are required to be entered, in the absence of data in the Multi Time Period table the data from the standard table will be persisted",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Facility that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Product that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "SourceName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Supplier that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Suppliers",
        "MasterColumn": "SupplierName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the multi-time period record exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "PolicyStatus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Policy Status dictates whether or not the policy exists in the model for the specified period(s). If Policy Status is set to Exclude, the policy record is ignored during the model run for the specified periods.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OptimizationPolicy",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The logic that procurement flows for the Facility, Product, and Source combination(s) must follow. To Optimize selects the lowest cost option. By Ratio (Auto Scale) will enforce a flow split between the specified sources, the defined ratios will apply to flow into the Facility from the listed sources only. By Ratio (No Scale) will enforce a flow split between the specified sources and the defined ratios will be in terms of the total inbound flow into the Facility. Single Source policies force the Facility to receive the Product from one Source. Note that if a group is used in the Period Name, Facility Name, Product Name, or Source Name field that the groups will be enumerated and the policy logic will be applied over the enumerated entries.",
        "Data Type": "[To Optimize, By Ratio (Auto Scale), By Ratio (No Scale), Single Source]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OptimizationPolicyValue",
        "Required": NaN,
        "RequiredIf": "OptimizationPolicy = By Ratio (Auto Scale) OR By Ratio (No Scale)",
        "Engine": "[NEO]",
        "Explanation": "By Ratio (Auto Scale): The Policy Value will define the percentage of flow that must be satisfied from the listed source. The percentage will be calculated based on the total inbound flow for the Facility/Product combination from sources with a policy of By Ratio (Auto Scale).\n\nBy Ratio (No Scale): The Policy Value will define the percentage of flow that must be satisfied from the listed source. The percentage will be calculated based on the total inbound flow for the Facility/Product combination across ALL sources.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicy",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The logic that procurement flows for the Facility, Product, and Source combination(s) must follow. By Preference will pick the sources pending product availability in the specified order of preference. Single Source policies force the Facility to receive the Product from one Source.",
        "Data Type": "[By Preference, Single Source, Allocation]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicyValue",
        "Required": NaN,
        "RequiredIf": "SimulationPolicy = By Preference",
        "Engine": "[]",
        "Explanation": "By Preference: Policy Value defines the order of preference in which a source will be selected pending product availability, with the lower numbers representing a higher selection preference",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit cost associated with flow for the specified Supplier/Facility/Product combination. This field can support a single numeric value, a step cost (either a direct entry or a lookup), or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure used to define flow for the specified Supplier/Facility/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "MinimumOrderQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The minimum quantity that must move between source and destination in a period for a flow to occur",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MinimumOrderQuantityUOM",
        "Required": NaN,
        "RequiredIf": "MinimumOrderQuantity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines the MOQ for the Supplier/Facility/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "LotSize",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Orders placed from the Facility to the specified sources must be filled in multiples of the specified lot size.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LotSizeUOM",
        "Required": NaN,
        "RequiredIf": "LotSize",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines the Lot Size for the Source/Facility/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "MaxSourcingRange",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The maximum allowable distance between the Facility and Source for the Product(s) specified. This field is intended for use in models with group policies to eliminate excessively long lanes from consideration.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxSourcingRangeUOM",
        "Required": NaN,
        "RequiredIf": "MaxSourcingRange",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure (Type = Distance) that defines Max Delivery Range.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ProductUnitsOfMeasure": {
    "type": "Input",
    "description": "The ProductUnitsOfMeasure table contains conversion rules for different units of measure specific to each product. It defines how generic quantity units relate to product-specific measurements, enabling accurate conversion between different units of measure across the supply chain model.",
    "columns": [
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Product for which we are defining a unit conversion. Product Groups are also supported with the behavior of enumerate",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "UOMSymbol",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The UOM (Type = Quantity) for which we are specifying the unit conversion.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity]",
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Quantity",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "This field allows for a product-specific number of units to be assigned to a generic Quantity UOM. For example, we could specify in this record that one pallet contains 1000 coffee mugs. In a separate record, we could specify that one pallet contains four refrigerators. This enables us to convert aggregate UOMs to smaller UOMs and vice versa.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": 1.0
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ProductionConstraints": {
    "type": "Input",
    "description": "The ProductionConstraints table contains information regarding constraints on production levels for specific Facilities, Products, Periods, Bills of Materials (BOMs), and Processes. It includes fields such as Status, FacilityName, ProductName, PeriodName, BOMName, ProcessName, ConstraintType, ConstraintValue, and ConstraintValueUOM, allowing users to set constraints on production quantities based on various criteria. The table also includes fields for specifying behaviors of groups for Facility Name, Product Name, Period Name, BOM Name, and Process Name.",
    "columns": [
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Facility or Facilities at which we are constraining production. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "FacilityNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Facility Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Product(s) for which we are constraining production. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "ProductNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Product Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Period(s) in which we are constraining production. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "PeriodNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Period Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "BOMName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Bill(s) of Materials (BOMs) associated with the production we are constraining (optional). If a BOM is not specified in the Production Policies table for this Facility/Product combination, the constraint will be ignored and the user will be alerted. If left empty, the production constraint will be applied for productions that use a BOM as well as those which do not. To specifically constrain against productions that do not use a BOM, enter a value of 'None'.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BillsOfMaterials",
        "MasterColumn": "BOMName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "BOMNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Bill of Material Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ProcessName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Process(es) associated with the production we are constraining (optional). If a Process is not specified in the Production Policies table for this Facility/Product combination, the constraint will be ignored and the user will be alerted.If left empty, the production constraint will be applied for productions that use a Process as well as those which do not. To specifically constrain against productions that do not use a Process, enter a value of 'None'.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Processes",
        "MasterColumn": "ProcessName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "ProcessNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Process Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ConstraintType",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The type of constraint imposed on production for the specified Facility/Product combination. \n\nMin: the number of units produced must be greater than or equal to the Constraint Value.\nMax: the number of units produced must be less than or equal to the Constraint Value.\nFixed: the number of units produced must be equal to the Constraint Value.\nFixed With Tolerance: The number of units produced must be equal to the Constraint Value * (1 +/- Relative Constraint Tolerance). Relative Constraint Tolerance is specified in the Model Run Options.\nConditional Min: if the number of units produced is nonzero, it must be greater than or equal to the Constraint Value.",
        "Data Type": "[Min, Max, Fixed, Fixed With Tolerance, Conditional Min]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConstraintValue",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The numeric value that the specified production level will be evaluated against.",
        "Data Type": "double",
        "Primary Key": "Yes",
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConstraintValueUOM",
        "Required": NaN,
        "RequiredIf": "ConstraintValue",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Constraint Value. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the constraint exists in the model. If Status is set to Exclude, this constraint (or constraints in the case of Enumerated Groups) will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ProductionCountConstraints": {
    "type": "Input",
    "description": "The ProductionCountConstraints table contains information about constraints that dictate whether or not certain production occurrences are counted in the model. This includes details about the facilities, products, BOMs, processes, and periods being counted, as well as the type of constraint and the value it must meet. The table also specifies how to handle groups and provides options for different counting rules.",
    "columns": [
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Facility or Facilities at which we are counting production occurrences. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "FacilityNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Facility Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Product(s) for which we are counting production occurrences. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "ProductNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Product Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "BOMName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "TThe Bill(s) of Materials (BOMs) associated with the production we are counting over. If a BOM is not specified in the Production Policies table for this Facility/Product combination, the constraint will be ignored and the user will be alerted.If left empty, the constraint will be counted over productions that use a BOM as well as those which do not. To specifically constrain against productions that do not use a BOM, enter a value of 'None'.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BillsOfMaterials",
        "MasterColumn": "BOMName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "BOMNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If BOM Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ProcessName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Process(es) associated with the production we are counting over. If a Process is not specified in the Production Policies table for this Facility/Product combination, the constraint will be ignored and the user will be alerted.If left empty, the constraint will be counted over productions that use a Process as well as those which do not. To specifically constrain against productions that do not use a Process, enter a value of 'None'.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Processes",
        "MasterColumn": "ProcessName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "ProcessNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Process Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Period(s) in which we are counting production occurrences. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "PeriodNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Period Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ConstraintType",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The type of constraint imposed on the production count for the specified Facility/Product/Period combination. \n\nMin: the count must be greater than or equal to the Constraint Value.\nMax: the count must be less than or equal to the Constraint Value.\nFixed: the count must be equal to the Constraint Value.\nFixed With Tolerance: The count must be equal to the Constraint Value * (1 +/- Relative Constraint Tolerance). Relative Constraint Tolerance is specified in the Model Run Options.\nConditional Min: if the count is nonzero, it must be greater than or equal to the Constraint Value.",
        "Data Type": "[Min, Max, Fixed, Fixed With Tolerance, Conditional Min]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConstraintValue",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The numeric value that the specified count will be evaluated against.",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the constraint exists in the model. If Status is set to Exclude, this constraint (or constraints in the case of Enumerated Groups) will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "CountingRule",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Facilities: Count the number of unique Facilities at which production occurs for the specified Product/BOM/Routing/Period combination.\nProducts: Count the number of unique Products for which production occurs for the specified Facility/BOM/Routing/Period combination.\nBOMs: Count the number of unique BOMs used in production at the specified Facility/Product/Routing/Period combination.\nProcesses: Count the number of unique Processes used in production at the specified Facility/Product/BOM/Period combination.\nPeriods: Count the number of unique Periods in which production occurs for the specified Facility/Product/BOM/Routing combination.",
        "Data Type": "[Facilities, Products, BOMs, Processes, Periods]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ProductionOrderProfiles": {
    "type": "Input",
    "description": "The ProductionOrderProfiles table contains templates for generating recurring production orders within facilities. It specifies production patterns including quantities, frequencies, service levels, and scheduling parameters, facilitating the simulation of regular manufacturing activities.",
    "columns": [
      {
        "Column Name": "OrderID",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unique identifier for each Order profile, as orders are generated based on their recurring properties they will be indexed off of the entered order number. All Orders will be placed as single line item orders, however multiple recurring orders can be set at the same Facility",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the Facility at which the Production Order will be placed",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Product that the Order will be placed for",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the Order profile exists in the model. If Status is set to Exclude, this  record will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Quantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The amount of Product being scheduled for production at the Facility. Both doubles, as well as distributions are accepted as entries.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Required": NaN,
        "RequiredIf": "Quantity",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that defines Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "NumberOfOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Based on the information entered in the Start Date, Time Between Orders and End Date fields, the Order Profile will generate orders based at different times throughout the simulation. When an order is generated, the Number Of Orders will be evaluated to determine how many orders are going to be placed at that specific time. Once the Number Of Orders is determined, all of the other information specified in the Product Name, Quantity, Number of Lines will be used to generate the details for each of the orders at that time.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1"
      },
      {
        "Column Name": "NumberOfLines",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If the Product Name is left blank for the Order Profile, recurring orders can be generated with a varying number of line items in each order. An integer value, or a distribution can be entered in this field. In the event that the number of lines in an order is 2 or greater, the Order Profile Product Selection and Order Profile Product Affinity tables will be used to determine which products are to be ordered.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1"
      },
      {
        "Column Name": "ServiceLevel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Service Level will be used to calculate the Due Date for all of the generated recurring orders. Due Date will be set to the Order Date + Service Level.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ServiceLevelUOM",
        "Required": NaN,
        "RequiredIf": "ServiceLevel",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) used to define Service Level.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "StartDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Start Date will defined the date that the first order will drop. Orders will drop exactly at the date/time specified in Start Date, and then each following order's drop date will be determined by the Time Between Orders information.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeBetweenOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Time Between Orders will specify how much time goes by from the previous order until the next order drops. Both doubles, as well as distribution entries are supported.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeBetweenOrdersUOM",
        "Required": NaN,
        "RequiredIf": "TimeBetweenOrders",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) used to define Time Between Orders.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "EndDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The End Date will specify the last possible time that an order can drop. If the Time Between Orders causes the next order drop date to fall after the specified End Date, that last order will not be generated.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ProductionOrders": {
    "type": "Input",
    "description": "ProductionOrders is a table that contains information about the production orders placed at a facility. It includes details such as the facility name, product name, quantity, order date, due date, status, and options for partial fill orders, partial fill line items, and backorders. The table also includes information on the backorder time limit and notes related to the orders and line items. Each order is identified by a unique OrderID, and each line item within an order is identified by a LineItemID.",
    "columns": [
      {
        "Column Name": "OrderID",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unique identifier for each Order; an Order consists of one or more Line Items.",
        "Data Type": "String - Fixed",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LineItemID",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unique identifier for the single Line Item being defined; Orders with multiple Line Items will require multiple table records.",
        "Data Type": "String - Fixed",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Facility at which the production order is placed.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Product in the Line Item. Product Groups are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Quantity",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The amount of the Product being ordered. This field will support probability distributions in the future.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Required": NaN,
        "RequiredIf": "Quantity",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that defines Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "OrderDate",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The date and time at which the Order is placed.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DueDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The date and time at which the Order must be completed by the Facility.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the Line Item exists in the model. If Status is set to Exclude, this  record will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "ProcessName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Process required for the Line Item according to the Facility/Product combination can be specified here. In the event that the Facility does not have a production policy in place for this Product/Process combination, the Process will not be applied. This discrepancy will be reported to the user.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Processes",
        "MasterColumn": "ProcessName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowPartialFillOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the Order may be partially filled. Otherwise, it must be filled in full. If backordering is allowed, the remaining quantity may be satisfied in the future; if the Backorder Time Limit is reached on a partially filled order, the remaining quantity will be cancelled. If Partial Fill Orders is False, Partial Fill Line Items will also be forced to False.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "True"
      },
      {
        "Column Name": "AllowPartialFillLineItems",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the specified Line Item may be partially filled. Otherwise, the Line Item must be filled in full. If backordering is allowed, the remaining quantity of partially filled Line Items may be satisfied in the future with additional shipments; if the Backorder Time Limit is reached on a partially filled Line Item, the remaining quantity will be cancelled.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "True"
      },
      {
        "Column Name": "AllowBackorders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the Facility will accept a backorder in the event that the entirety of the Order cannot be produced before its Due Date. If False and if the Order is not produced by its Due Date, it will be cancelled on that date.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "True"
      },
      {
        "Column Name": "BackorderTimeLimit",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If Allow Backorders = True, this value is the amount of time after which the backorder will be cancelled by the Facility. A value of NULL will be interpreted as an infinite time limit, while a value of zero is equivalent to setting Allow Backorders = False.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BackorderTimeLimitUOM",
        "Required": NaN,
        "RequiredIf": "BackorderTimeLimit",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) used to define Backorder Time Limit.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ProductionPolicies": {
    "type": "Input",
    "description": "The ProductionPolicies table contains records that define the production policies for specific Facility/Product combinations. It includes information such as the lot size, production rate, unit cost, simulation policy, status, and other relevant details that dictate the production logic for the specified combination. This table allows for the configuration of production orders, scheduling, and costs associated with production activities at a given facility for a specific product.",
    "columns": [
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Facility at which the production policy is being defined",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Product for which the production policy is being defined",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Status of the policy record, if this is set to Exclude the policy record is ignored during the model run",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "SimulationPolicy",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The policy that will dictate the production logic for the Facility/Product combination. Make By Demand will trigger production events based on the Production Orders which are triggered by the Inventory Policy for the Facility/Product combination. Make By Schedule will trigger production events based off of Production Orders specified in the Production Orders / Recurring Production Orders tables. Make By Demand And Schedule will trigger production orders based on both the Inventory Policy and the orders specified in the Production Orders / Recurring Production Orders tables. Continuous Production will continuously trigger production orders of the amount specified in the SIM Policy Lot Size field as soon as the production of the previous lot is completed.",
        "Data Type": "[Make By Demand, Make By Schedule, Make By Demand And Schedule, Continuous Production]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Make By Demand"
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit cost of a production flow at the Facility/Product combination. This field can support either a single numeric value, a lookup into a defined step cost, or a custom cost function entered directly into the field. If there are Processes defined, the information in the Processes table will override any information that exists in the Production Policies table",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[NEO, THROG]",
        "Explanation": "The UOM that specifies what unit the Unit Cost will be applied over. This can be any UOM of Type = Quantity, Weight, Volume. If there are Processes defined, the information in the Processes table will override any information that exists in the Production Policies table",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "ProductionRate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The production rate for the given Facility/Product combination. It will be defined as Quantity/Time as is specified in the Quantity/Time UOM fields. If there are Processes defined, the information in the Processes table will override any information that exists in the Production Policies table",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "RateQuantityUOM",
        "Required": NaN,
        "RequiredIf": "ProductionRate",
        "Engine": "[NEO, THROG]",
        "Explanation": "The UOM that defines the number of units that are able to be produced on this Production Policy. This can be any UOM of Type = Quantity, Weight, Volume. If there are Processes defined, the information in the Processes table will override any information that exists in the Production Policies table",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "RateTimeUOM",
        "Required": NaN,
        "RequiredIf": "ProductionRate",
        "Engine": "[NEO, THROG]",
        "Explanation": "The UOM that defines the amount of time that the Production Rate is expressed in. This can be any UOM of Type = Time. If there are Processes defined, the information in the Processes table will override any information that exists in the Production Policies table",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "WorkCenterName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Work Center assigned to the Production Policy; the production time and capacity consumed by the production at the listed Facility / Product will count toward the capacity of the Work Center. If a Process is also specified for this Production Policy, then this Work Center field is ignored and the value from the Processes table will take precedence.\n\nWorkCenter groups are not supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "WorkCenters",
        "MasterColumn": "WorkCenterName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BOMName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Bill of Material record that will be associated with any productions that occur at the Facility/Product combination. If a BOM is specified, in order to produce the product for this policy record the production location must also be able to source all required components as entered in the BOM\n\nBOM Groups are not currently supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BillsOfMaterials",
        "MasterColumn": "BOMName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProcessName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Process associated with the production behavior for the specified Facility/Product combination. Processes offer a more detailed step by step production behavior that can specify the work time per unit, which Work Centers or Work Resources must be used, and at which points a component is required in the production flow.\n\nProcess Groups are not currently supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Processes",
        "MasterColumn": "ProcessName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "LotSize",
        "Required": NaN,
        "RequiredIf": "SimulationPolicy = Continuous Production",
        "Engine": "[THROG]",
        "Explanation": "For SIM Policy = Continuous Production, the SIM Policy Lot Size will determine the size of each production order that is triggered for the Facility / Product combination.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LotSizeUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The UOM that specifies what unit the SIM Policy Lot Size will be defined in. This can be any UOM of Type = Quantity, Weight, Volume.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "CO2EmissionRate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The rate of CO2 emissions for this production policy.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": "[]",
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "CO2EmissionRateUOM",
        "Required": NaN,
        "RequiredIf": "CO2EmissionRate",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure (Type = Quantity, Volume, Weight, Time) that defines the CO2 Emission Rate.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ProductionPoliciesMultiTimePeriod": {
    "type": "Input",
    "description": "The ProductionPoliciesMultiTimePeriod table contains information related to the status, production rate, unit cost, and other details for production policies at specific facilities and for specific products over multiple time periods. The table allows for overrides and updates to be applied for the specified periods only, and information from this table will take precedence over data in the standard ProductionPolicies table.",
    "columns": [
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The period name in which a change is being made. Groups of periods are also supported. Changes that are made in the Multi Time Period table will be applied as overrides for the records of the base table for the specified periods only. Additionally, only the fields that contain information needing to be updated are required to be entered, in the absence of data in the Multi Time Period table the data from the standard table will be persisted",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Facility at which the production policy is being defined",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Product for which the production policy is being defined",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the multi-time period record exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "PolicyStatus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Policy Status dictates whether or not the policy exists in the model for the specified period(s). If Policy Status is set to Exclude, the policy record is ignored during the model run for the specified periods.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicy",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The policy that will dictate the production logic for the Facility/Product combination. Make By Demand will trigger production events based on the Production Orders which are triggered by the Inventory Policy for the Facility/Product combination. Make By Schedule will trigger production events based off of Production Orders specified in the Production Orders / Recurring Production Orders tables. Make By Demand And Schedule will trigger production orders based on both the Inventory Policy and the orders specified in the Production Orders / Recurring Production Orders tables. Continuous Production will continuously trigger production orders of the amount specified in the SIM Policy Lot Size field as soon as the production of the previous lot is completed.",
        "Data Type": "[Make By Demand, Make By Schedule, Make By Demand And Schedule, Continuous Production]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit cost of a production flow at the Facility/Product combination. This field can support either a single numeric value, a lookup into a defined step cost, or a custom cost function entered directly into the field. If there are Processes defined, the information in the Processes table will override any information that exists in the Production Policies table",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The UOM that specifies what unit the Unit Cost will be applied over. This can be any UOM of Type = Quantity, Weight, Volume. If there are Processes defined, the information in the Processes table will override any information that exists in the Production Policies table",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "ProductionRate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The production rate for the given Facility/Product combination. It will be defined as Quantity/Time as is specified in the Quantity/Time UOM fields. If there are Processes defined, the information in the Processes table will override any information that exists in the Production Policies table",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "RateQuantityUOM",
        "Required": NaN,
        "RequiredIf": "ProductionRate",
        "Engine": "[NEO]",
        "Explanation": "The UOM that defines the number of units that are able to be produced on this Production Policy. This can be any UOM of Type = Quantity, Weight, Volume. If there are Processes defined, the information in the Processes table will override any information that exists in the Production Policies table",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "RateTimeUOM",
        "Required": NaN,
        "RequiredIf": "ProductionRate",
        "Engine": "[NEO]",
        "Explanation": "The UOM that defines the amount of time that the Production Rate is expressed in. This can be any UOM of Type = Time. If there are Processes defined, the information in the Processes table will override any information that exists in the Production Policies table",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "WorkCenterName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Work Center assigned to the Production Policy; the production time and capacity consumed by the production at the listed Facility / Product will count toward the capacity of the Work Center. If a Process is also specified for this Production Policy, then this Work Center field is ignored and the value from the Processes table will take precedence.\n\nWorkCenter groups are not supported",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "WorkCenters",
        "MasterColumn": "WorkCenterName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BOMName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Bill of Material record that will be associated with any productions that occur at the Facility/Product combination. If a BOM is specified, in order to produce the product for this policy record the production location must also be able to source all required components as entered in the BOM\n\nBOM Groups are not currently supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BillsOfMaterials",
        "MasterColumn": "BOMName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProcessName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Process associated with the production behavior for the specified Facility/Product combination. Processes offer a more detailed step by step production behavior that can specify the work time per unit, which Work Centers or Work Resources must be used, and at which points a component is required in the production flow.\n\nProcess Groups are not currently supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Processes",
        "MasterColumn": "ProcessName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LotSize",
        "Required": NaN,
        "RequiredIf": "SimulationPolicy = Continuous Production",
        "Engine": "[]",
        "Explanation": "For SIM Policy = Continuous Production, the SIM Policy Lot Size will determine the size of each production order that is triggered for the Facility / Product combination.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LotSizeUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The UOM that specifies what unit the SIM Policy Lot Size will be defined in. This can be any UOM of Type = Quantity, Weight, Volume.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "CO2EmissionRate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The rate of CO2 emissions for this production policy for the given period.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": "[]",
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CO2EmissionRateUOM",
        "Required": NaN,
        "RequiredIf": "CO2EmissionRate",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure (Type = Quantity, Volume, Weight, Time) that defines the CO2 Emission Rate.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ProductionQueueDetails": {
    "type": "Input",
    "description": "The ProductionQueueDetails table contains rules and configurations for managing production queues at facilities. It defines review periods, queueing priority logic, associated costs, and scheduling parameters, enabling systematic management of production order sequencing.",
    "columns": [
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The facility that the queue logic is applied for",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriodFirstTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The first Date/Time at which to review the queue for the specified production queue. Production queues will be evaluated using the logic specified in the Priority Logic field. After this Date/Time, the review period length will dictate when production queue reviews occur. If NULL, Review Period First Time will be the start of the simulation.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time between production queue reviews. After Review Period First Time, a production queue review will occur each time Review Period has elapsed. For example, if Review Period First Time is 1/1/2022 12:00:00 AM and Review Period is six hours, we will conduct reviews on 1/1/2022 at 12:00:00 AM, 6:00:00 AM, 12:00:00 PM, and 6:00:00 PM, continuing similarly until the simulation ends. A Review Schedule defined in the Review Schedules table can be entered by Review Schedule Name in this field as well. If NULL, continuous review is used.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "ReviewSchedules",
        "MasterColumn": "ReviewScheduleName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriodUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines Review Period length.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": NaN,
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "QueueingPriorityLogic",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The logic used for the production queue when deciding how to arrange orders in the production queue. If a value of By Date And Location is selected, the QueuePriority fields in the Customers, Facilities, and Suppliers will be leveraged. If the Advanced Queueing Details table is populated, the override priorities for the Origin, Destination, Product combination will be used",
        "Data Type": "[FIFO, ByDueDateAndLocation, ByDayQueuedAndLocation, ProductionWheel]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "FIFO"
      },
      {
        "Column Name": "QueueingPriorityLogicValue",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The value associated with the given queueing priority logic.  For ProductionWheel this will contain the name of the wheel",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": "ProductionWheelDetails",
        "MasterColumn": "ProductionWheelName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the policy exists in the model. If Status is set to Exclude, the policy record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "TimeInQueueCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The cost associated with an item sitting in a queue. The cost expressed in this field will be charged each time that items sit in a queue for the length of time specified in the Time In Queue Cost UOM field.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeInQueueCostUOM",
        "Required": NaN,
        "RequiredIf": "TimeInQueueCost",
        "Engine": "[]",
        "Explanation": "The unit of measure that time is expressed in terms of.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ProductionWheelDetails": {
    "type": "Input",
    "description": "The ProductionWheelDetails table contains specifications for cyclic production schedules. It defines the sequence, duration, and quantity requirements for different products within production wheels, enabling structured rotation of product manufacturing at facilities.",
    "columns": [
      {
        "Column Name": "ProductionWheelName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the production wheel",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": "No",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Product for which the entry in the production wheel is being defined",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the row of the Production Wheel is passed into the engine. If Status is set to Exclude, this record will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "WheelOrder",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The position in the wheel for the given product",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Duration",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The duration of the production wheel element. If the duration is hit while in the middle of processing an order, that order will complete. If the duration is not met and all orders are finished processing, the logic used in the Duration Policy will determine the production activity.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DurationUoM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measurement for the duration.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "DurationPolicy",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The policy to be used when the existing orders will not fill the entire duration.",
        "Data Type": "[Advance, Fill, Idle]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MinProductionQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Minimum value to be produced for the defined production wheel slot",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxProductionQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Maximum value to be produced for the defined production wheel slot",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProductionQuantityUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The UOM that defines the Min / Max Production Quantities. Quantity, Volume and Weight UOM entries are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MinProductionPolicy",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The policy to be used when the existing collection of orders for the product does not meet the Min Production Quantity.",
        "Data Type": "[Advance, Produce Min]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "Products": {
    "type": "Input",
    "description": "The Products table contains information about various products, including their name, unit value, unit price, unit volume, unit weight, and status. It also includes details such as the unit of measure for the unit value, unit price, unit volume, and unit weight. This table is used to track and manage inventory, pricing, and other relevant details for each product.",
    "columns": [
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The name of the Product",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "Status dictates whether or not the Product exists in the model. If Status is set to Exclude, any records for the Product in other tables will be ignored.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "UnitValue",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The value of the Product; this field will be used to calculate inventory holding costs.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "UnitValueUOM",
        "Required": NaN,
        "RequiredIf": "UnitValue",
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit of measure that defines the basis for Unit Value. For example, we could set the Product's Unit Value as $5 per pound or $5 each.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "UnitPrice",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "Unit Price represents the price that the Product will sell for; in other words, this value is the revenue that will be generated by satisfying one unit of demand for the Product.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "UnitPriceUOM",
        "Required": NaN,
        "RequiredIf": "UnitPrice",
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit of measure that defines the basis for Unit Price. For example, we could specify that the Unit Price applies to one case or one pound of the Product.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "UnitVolume",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, HOPPER]",
        "Explanation": "The volume of the Product.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1"
      },
      {
        "Column Name": "UnitVolumeUOM",
        "Required": NaN,
        "RequiredIf": "UnitVolume",
        "Engine": "[NEO, THROG, HOPPER]",
        "Explanation": "The unit of measure (Type = Volume) used to define the Product's volume.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Volume]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Volume]",
        "Expandable": NaN,
        "Default value": "{PrimaryVolumeUOM}"
      },
      {
        "Column Name": "UnitWeight",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, HOPPER]",
        "Explanation": "The weight of the Product.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1"
      },
      {
        "Column Name": "UnitWeightUOM",
        "Required": NaN,
        "RequiredIf": "UnitWeight",
        "Engine": "[NEO, THROG, HOPPER]",
        "Explanation": "The unit of measure (Type = Weight) used to define Unit Weight.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryWeightUOM}"
      },
      {
        "Column Name": "UnitLength",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The length of the Product.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitWidth",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The width of the Product.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitHeight",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The height of the Product.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DimensionUOM",
        "Required": NaN,
        "RequiredIf": "UnitLength, UnitWidth, UnitHeight",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Length) used to define the Product's dimensions.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "ShelfLife",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Shelf Life will determine the length of time that a product will be valid before it expires. When being used in Optimization, Shelf Life will be evaluated against the period lengths to determine which period a product will expire in. For example, if the Shelf Life is 45 Days and a model has monthly periods, the product will expire in Period 2.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ShelfLifeUOM",
        "Required": NaN,
        "RequiredIf": "ShelfLife",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Time) that defines the length of the Product's Shelf Life",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "ProductBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": NaN,
        "Data Type": "[Discrete, Continuous]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Discrete"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ProductsMultiTimePeriod": {
    "type": "Input",
    "description": "The ProductsMultiTimePeriod table contains information about products that may have different values or prices over various time periods. It includes fields such as Status, UnitValue, UnitValueUOM, UnitPrice, UnitPriceUOM, PeriodName, and ProductName. This table allows for the management of changes to product values and prices within specific periods, while still maintaining the base data for each product.",
    "columns": [
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The period name in which a change is being made. Groups of periods are also supported. Changes that are made in the Multi Time Period table will be applied as overrides for the records of the base table for the specified periods only. Additionally, only the fields that contain information needing to be updated are required to be entered, in the absence of data in the Multi Time Period table the data from the standard table will be persisted",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Product",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the multi-time period record exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "UnitValue",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The value of the Product; this field will be used to calculate inventory holding costs.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitValueUOM",
        "Required": NaN,
        "RequiredIf": "UnitValue",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines the basis for Unit Value. For example, we could set the Product's Unit Value as $5 per pound or $5 each.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "UnitPrice",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Unit Price represents the price that the Product will sell for; in other words, this value is the revenue that will be generated by satisfying one unit of demand for the Product.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitPriceUOM",
        "Required": NaN,
        "RequiredIf": "UnitPrice",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines the basis for Unit Price. For example, we could specify that the Unit Price applies to one case or one pound of the Product.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "ProductBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": NaN,
        "Data Type": "[Discrete, Continuous]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "RelationshipConstraints": {
    "type": "Input",
    "description": "The RelationshipConstraints table contains information about the constraints that prevent Entity 1 and Entity 2 from moving together during the Hopper solve in the model. It includes details such as the type of entities, their status, and whether they are excluded from the model run.",
    "columns": [
      {
        "Column Name": "Entity1",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The first entity that exists in the relationship. Entity 1 and Entity 2 will be prevented from moving together during the Hopper solve. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "[TransportationAssets, Products, Shipments, Customers]",
        "MasterColumn": "[TransportationAssets.AssetName, Products.ProductName, Shipments.ShipmentID, Customers.CustomerName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Entity1Type",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The type of object that Entity 1 is, one of Transportation Asset, Product, Shipment or Customer.",
        "Data Type": "[TransportationAsset, Product, Shipment, Customer]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Entity2",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The second entity that exists in the relationship. Entity 1 and Entity 2 will prevented from moving together during the Hopper solve. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "[TransportationAssets, Products, Shipments, Customers]",
        "MasterColumn": "[TransportationAssets.AssetName, Products.ProductName, Shipments.ShipmentID, Customers.CustomerName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Entity2Type",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The type of object that Entity 2 is, one of Transportation Asset, Product, Shipment or Customer.",
        "Data Type": "[TransportationAsset, Product, Shipment, Customer]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "Status dictates whether or not the Line Item exists in the model. If Status is set to Exclude, this record will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ReplenishmentOrderProfiles": {
    "type": "Input",
    "description": "The ReplenishmentOrderProfiles table contains templates for generating recurring replenishment orders between facilities. It defines order patterns including quantities, frequencies, service levels, and timing parameters, facilitating the simulation of regular inventory replenishment activities.",
    "columns": [
      {
        "Column Name": "OrderID",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unique identifier for each Order profile, as orders are generated based on their recurring properties they will be indexed off of the entered order number. All Orders will be placed as single line item orders, however multiple recurring orders can be set at the same Facility",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the Facility placing the Order",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Product that the Order will be placed for",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the Order profile exists in the model. If Status is set to Exclude, this  record will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Quantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The amount of Product being ordered by the Facility. Both doubles, as well as distributions are accepted as entries.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Required": NaN,
        "RequiredIf": "Quantity",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that defines Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "NumberOfOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Based on the information entered in the Start Date, Time Between Orders and End Date fields, the Order Profile will generate orders based at different times throughout the simulation. When an order is generated, the Number Of Orders will be evaluated to determine how many orders are going to be placed at that specific time. Once the Number Of Orders is determined, all of the other information specified in the Product Name, Quantity, Number of Lines will be used to generate the details for each of the orders at that time.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1"
      },
      {
        "Column Name": "NumberOfLines",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If the Product Name is left blank for the Order Profile, recurring orders can be generated with a varying number of line items in each order. An integer value, or a distribution can be entered in this field. In the event that the number of lines in an order is 2 or greater, the Order Profile Product Selection and Order Profile Product Affinity tables will be used to determine which products are to be ordered.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1"
      },
      {
        "Column Name": "ServiceLevel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Service Level will be used to calculate the Due Date for all of the generated recurring orders. Due Date will be set to the Order Date + Service Level.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ServiceLevelUOM",
        "Required": NaN,
        "RequiredIf": "ServiceLevel",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) used to define Service Level.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "StartDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Start Date will defined the date that the first order will drop. Orders will drop exactly at the date/time specified in Start Date, and then each following order's drop date will be determined by the Time Between Orders information.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeBetweenOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Time Between Orders will specify how much time goes by from the previous order until the next order drops. Both doubles, as well as distribution entries are supported.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeBetweenOrdersUOM",
        "Required": NaN,
        "RequiredIf": "TimeBetweenOrders",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) used to define Time Between Orders.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "EndDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The End Date will specify the last possible time that an order can drop. If the Time Between Orders causes the next order drop date to fall after the specified End Date, that last order will not be generated.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ReplenishmentOrders": {
    "type": "Input",
    "description": "The ReplenishmentOrders table contains detailed information about specific replenishment orders between facilities. It tracks order specifics including line items, quantities, dates, sourcing rules, and policies for partial fills and backorders, managing the complete lifecycle of internal replenishment transactions.",
    "columns": [
      {
        "Column Name": "OrderID",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unique identifier for each Order; an Order consists of one or more Line Items.",
        "Data Type": "String - Fixed",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LineItemID",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unique identifier for the single Line Item being defined; Orders with multiple Line Items will require multiple table records.",
        "Data Type": "String - Fixed",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the Facility placing the Order. Facility Groups are supported; the Group behavior will be Enumerate.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Product in the Line Item.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Quantity",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The amount of Product requested by the Facility.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Required": NaN,
        "RequiredIf": "Quantity",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that defines Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "OrderDate",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The date and time at which the Facility places the Order.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DueDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The date and time at which the Order is due at the Facility.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the Line Item exists in the model. If Status is set to Exclude, this  record will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "ServiceMode",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Optionally, a required Transportation Mode can be specified here. If multiple Modes are acceptable, a Mode Group may be used; the Group behavior will be Aggregate. If NULL, any Mode is assumed to be acceptable.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationModes",
        "MasterColumn": "ModeName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SourceName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Optionally, a required Source for the Line Item can be specified here. If multiple Sources are acceptable, a Source (Facility or Supplier) Group may be used; the Group behavior will be Aggregate. If NULL, any Source is assumed to be acceptable.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SingleSourceOrder",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, all Line Items in the Order must be sourced from a single Facility. If False, each Line Item within the Order may be sourced from a different Facility. A value of True in this field overrides Single Source Line Items = False, enforcing that all Line Items in the order come from a single source.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SingleSourceLineItems",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the entire Line Item must be sourced from a single site (Facility or Supplier). If False, the Line Item may be sourced from different sites.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowPartialFillOrders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the Order may be partially filled. Otherwise, it must be filled in full. If backordering is allowed, the remaining quantity may be satisfied in the future with additional shipments; if the Backorder Time Limit is reached on a partially filled order, the remaining quantity will be cancelled. If Partial Fill Orders is False, Partial Fill Line Items will also be forced to False.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowPartialFillLineItems",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the specified Line Item may be partially filled. Otherwise, the Line Item must be filled in full. If backordering is allowed, the remaining quantity of partially filled Line Items may be satisfied in the future with additional shipments; if the Backorder Time Limit is reached on a partially filled Line Item, the remaining quantity will be cancelled.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowBackorders",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, the Facility will accept a backorder in the event that the Order cannot be fulfilled before its Due Date. If False and if the Order is not fulfilled by its Due Date, it will be cancelled on that date.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BackorderTimeLimit",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If Allow Backorders = True, this value is the amount of time after which the backorder will be cancelled by the Facility. A value of NULL will be interpreted as an infinite time limit, while a value of zero is equivalent to setting Allow Backorders = False.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BackorderTimeLimitUOM",
        "Required": NaN,
        "RequiredIf": "BackorderTimeLimit",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) used to define Backorder Time Limit.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ReplenishmentPolicies": {
    "type": "Input",
    "description": "The ReplenishmentPolicies table contains detailed information on the logic and rules governing the replenishment flows for specific combinations of Facility, Product, and Source. It includes the optimization policy, policy values, simulation policy logic, unit costs, lot sizes, sourcing ranges, surplus inventory considerations, and simulation policies for each policy record. The table also includes information on the status of each policy and any notes related to the Facility, Product, and Source involved.",
    "columns": [
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Facility that the policy record applies to. If Procurement Policies are also defined for the Facility, Replenishment Policies will take priority.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Product that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "SourceName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Facility from which the Product will be sourced under the policy record.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "OptimizationPolicy",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The logic that replenishment flows for the Facility, Product, and Source combination(s) must follow. To Optimize selects the lowest cost option. By Ratio (Auto Scale) will enforce a flow split between the specified sources, the defined ratios will apply to flow into the Facility from the listed sources only. By Ratio (No Scale) will enforce a flow split between the specified sources and the defined ratios will be in terms of the total inbound flow into the Facility. Single Source policies force the Facility to receive the Product from one Source. Note that if a group is used in the Facility Name, Product Name, or Source Name field that the groups will be enumerated and the policy logic will be applied over the enumerated entries.",
        "Data Type": "[To Optimize, By Ratio (Auto Scale), By Ratio (No Scale), Single Source]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "To Optimize"
      },
      {
        "Column Name": "OptimizationPolicyValue",
        "Required": NaN,
        "RequiredIf": "OptimizationPolicy = By Ratio (Auto Scale) OR By Ratio (No Scale)",
        "Engine": "[NEO]",
        "Explanation": "By Ratio (Auto Scale): The Policy Value will define the percentage of flow that must be satisfied from the listed source. The percentage will be calculated based on the total inbound flow for the Facility/Product combination from sources with a policy of By Ratio (Auto Scale).\n\nBy Ratio (No Scale): The Policy Value will define the percentage of flow that must be satisfied from the listed source. The percentage will be calculated based on the total inbound flow for the Facility/Product combination across ALL sources.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicy",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The logic that replenishment flows for the Facility, Product, and Source combination(s) must follow. By Preference will pick the sources pending product availability in the specified order of preference. Single Source policies force the Facility to receive the Product from one Source.",
        "Data Type": "[By Preference, Single Source, Allocation]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "By Preference"
      },
      {
        "Column Name": "SimulationPolicyValue",
        "Required": NaN,
        "RequiredIf": "SimulationPolicy = By Preference",
        "Engine": "[THROG]",
        "Explanation": "By Preference: Policy Value defines the order of preference in which a source will be selected pending product availability, with the lower numbers representing a higher selection preference",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicyLogic",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Simulation Policy Logic will specify whether the sourcing behavior specified for the Replenishment Policy is a Pull action (Facility selecting a Source) or a Push action (Source selecting a Facility to send surplus inventory). Surplus Level definitions, and a Surplus Review Period will be set in the Inventory Policies table.",
        "Data Type": "[Push, Pull]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Pull"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "Status dictates whether or not the policy exists in the model. If Status is set to Exclude, the policy record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit cost associated with flow for the specified Source/Facility/Product combination. This field can support a single numeric value, a step cost (either a direct entry or a lookup), or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit of measure used to define flow for the specified Source/Facility/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "MinimumOrderQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The minimum quantity that must move between source and destination in a period for a flow to occur",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MinimumOrderQuantityUOM",
        "Required": NaN,
        "RequiredIf": "MinimumOrderQuantity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines the MOQ for the Source/Facility/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "LotSize",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Orders placed from the Facility to the specified sources must be filled in multiples of the specified lot size.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LotSizeUOM",
        "Required": NaN,
        "RequiredIf": "LotSize",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that defines the Lot Size for the Source/Facility/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "MaxSourcingRange",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The maximum allowable distance between Customer and Source for the Product(s) specified. This field is intended for use in models with group policies to eliminate excessively long lanes from consideration.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxSourcingRangeUOM",
        "Required": NaN,
        "RequiredIf": "MaxSourcingRange",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure (Type = Distance) that defines Max Delivery Range.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "OnlySourceFromSurplus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "If True, when selecting a source for the Facility / Product combination only sources that have available surplus can be selected to fulfill the order.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ReplenishmentPoliciesMultiTimePeriod": {
    "type": "Input",
    "description": "The ReplenishmentPoliciesMultiTimePeriod table is used to store specific policies related to replenishment, such as optimization logic, cost, sourcing range, and period-specific details for facilities, products, and sources. This table allows for the customization of policies for different time periods and overrides certain fields in the base table during those periods only.",
    "columns": [
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The period name in which a change is being made. Groups of periods are also supported. Changes that are made in the Multi Time Period table will be applied as overrides for the records of the base table for the specified periods only. Additionally, only the fields that contain information needing to be updated are required to be entered, in the absence of data in the Multi Time Period table the data from the standard table will be persisted",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Facility that the policy record applies to. If Procurement Policies are also defined for the Facility, Replenishment Policies will take priority.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Product that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "SourceName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Facility from which the Product will be sourced under the policy record.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the multi-time period record exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "PolicyStatus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Policy Status dictates whether or not the policy exists in the model for the specified period(s). If Policy Status is set to Exclude, the policy record is ignored during the model run for the specified periods.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OptimizationPolicy",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The logic that replenishment flows for the Facility, Product, and Source combination(s) must follow. To Optimize selects the lowest cost option. By Ratio (Auto Scale) will enforce a flow split between the specified sources, the defined ratios will apply to flow into the Facility from the listed sources only. By Ratio (No Scale) will enforce a flow split between the specified sources and the defined ratios will be in terms of the total inbound flow into the Facility. Single Source policies force the Facility to receive the Product from one Source. Note that if a group is used in the Period Name, Facility Name, Product Name, or Source Name field that the groups will be enumerated and the policy logic will be applied over the enumerated entries.",
        "Data Type": "[To Optimize, By Ratio (Auto Scale), By Ratio (No Scale), Single Source]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OptimizationPolicyValue",
        "Required": NaN,
        "RequiredIf": "OptimizationPolicy = By Ratio (Auto Scale) OR By Ratio (No Scale)",
        "Engine": "[NEO]",
        "Explanation": "By Ratio (Auto Scale): The Policy Value will define the percentage of flow that must be satisfied from the listed source. The percentage will be calculated based on the total inbound flow for the Facility/Product combination from sources with a policy of By Ratio (Auto Scale).\n\nBy Ratio (No Scale): The Policy Value will define the percentage of flow that must be satisfied from the listed source. The percentage will be calculated based on the total inbound flow for the Facility/Product combination across ALL sources.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicy",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The logic that replenishment flows for the Facility, Product, and Source combination(s) must follow. By Preference will pick the sources pending product availability in the specified order of preference. Single Source policies force the Facility to receive the Product from one Source.",
        "Data Type": "[By Preference, Single Source, Allocation]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicyValue",
        "Required": NaN,
        "RequiredIf": "SimulationPolicy = By Preference",
        "Engine": "[]",
        "Explanation": "By Preference: Policy Value defines the order of preference in which a source will be selected pending product availability, with the lower numbers representing a higher selection preference",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicyLogic",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Simulation Policy Logic will specify whether the sourcing behavior specified for the Replenishment Policy is a Pull action (Facility selecting a Source) or a Push action (Source selecting a Facility to send surplus inventory). Surplus Level definitions, and a Surplus Review Period will be set in the Inventory Policies table.",
        "Data Type": "[Push, Pull]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Pull"
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit cost associated with flow for the specified Source/Facility/Product combination. This field can support a single numeric value, a step cost (either a direct entry or a lookup), or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure used to define flow for the specified Source/Facility/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "MinimumOrderQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The minimum quantity that must move between source and destination in a period for a flow to occur",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MinimumOrderQuantityUOM",
        "Required": NaN,
        "RequiredIf": "MinimumOrderQuantity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines the MOQ for the Source/Facility/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "LotSize",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Orders placed from the Facility to the specified sources must be filled in multiples of the specified lot size.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LotSizeUOM",
        "Required": NaN,
        "RequiredIf": "LotSize",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines the Lot Size for the Source/Facility/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "MaxSourcingRange",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The maximum allowable distance between Customer and Source for the Product(s) specified. This field is intended for use in models with group policies to eliminate excessively long lanes from consideration.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxSourcingRangeUOM",
        "Required": NaN,
        "RequiredIf": "MaxSourcingRange",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure (Type = Distance) that defines Max Delivery Range.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "OnlySourceFromSurplus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, when selecting a source for the Facility / Product combination only sources that have available surplus can be selected to fulfill the order.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ReviewSchedules": {
    "type": "Input",
    "description": "The ReviewSchedules table contains definitions for when system reviews occur throughout the week. It specifies the exact times for daily reviews that can be referenced by other tables in the supply chain model, enabling consistent scheduling of various review activities like inventory checks, queue processing, and route planning.",
    "columns": [
      {
        "Column Name": "ReviewScheduleName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the schedule defining review times each day of the week; this value can be referenced in tables dealing with review periods.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SundayReviewTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time on Sunday that the review occurs.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MondayReviewTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time on Monday that the review occurs.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TuesdayReviewTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time on Tuesday that the review occurs.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "WednesdayReviewTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time on Wednesday that the review occurs.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ThursdayReviewTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time on Thursday that the review occurs.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FridayReviewTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time on Friday that the review occurs.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SaturdayReviewTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time on Saturday that the review occurs.",
        "Data Type": "Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "RiskBandDefinitions": {
    "type": "Input",
    "description": "The RiskBandDefinitions table provides a list of risk bands along with their corresponding lower bound values and risk scores. These risk bands are referenced in the Risk Configuration tables to assign specific risk scores based on the band's lower value. When the DART engine is run, the appropriate risk score will be applied to all instances where the particular risk band is called in the configuration tables.",
    "columns": [
      {
        "Column Name": "BandName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The name of the Risk Band. Risk Bands are referenced by name in all of the Risk Configuration tables. Bands are defined based on a series of levels and associated Risk Scores and when the DART engine is run the corresponding scores will be assigned to all places where the Risk Band is called in the configuration tables.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BandLowerValue",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The lower bound of the step that the Risk Score will be applied over.",
        "Data Type": "double",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "RiskScore",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The Risk Score that will be selected based on the corresponding band's lower value.",
        "Data Type": "double",
        "Primary Key": "Yes",
        "Validation Type": "RiskScore",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "RiskRatingConfigurations": {
    "type": "Input",
    "description": "The RiskRatingConfigurations table includes information on the configuration settings for Risk Ratings, such as the name of the Risk Rating, the Risk Profile it is associated with, and the status that determines whether or not the Risk Rating will be considered in the model run. The table may also include details on weights, bands, and other risk components assigned to each Risk Profile.",
    "columns": [
      {
        "Column Name": "RiskRatingName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The name of the Risk Rating, Risk Ratings will be a combination of a Risk Profile Name, External Data Source Name, and an External Data Date. Risk Ratings that are included will be run, and a default Opti Risk rating will always be run as well.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "RiskProfileName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The name of the Risk Profile. Risk Profiles have weights and bands assigned for all of the various risk components in each of the risk configuration tables.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "Status dictates whether or not the Risk Rating will be run in the model. If Status is set to Exclude, the Risk Rating is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "RiskSummaryConfigurations": {
    "type": "Input",
    "description": "The RiskSummaryConfigurations table contains configurations for calculating the overall Risk Score by determining the weightings for Customer Risk, Facility Risk, Supplier Risk, and Network Risk. These weightings are applied when calculating the overall Risk Score for a specified Risk Profile.",
    "columns": [
      {
        "Column Name": "RiskProfileName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The name of the Risk Profile that the risk configuration is saved for. Risk Profiles are configured to run using specified source data in the Risk Rating Configurations table, and will take the risk weightings and bands associated with the Risk Profile from each of the configuration tables",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskRatingConfigurations",
        "MasterColumn": "RiskProfileName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CustomerRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Customer Risk when calculating the overall Risk Score.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FacilityRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Facility Risk when calculating the overall Risk Score.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SupplierRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Supplier Risk when calculating the overall Risk Score.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "NetworkRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Network Risk when calculating the overall Risk Score.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ScenarioItemAssignments": {
    "type": "Input",
    "description": "ScenarioItemAssignments table is a table that stores assignments of Scenario Items to specific Scenarios. This table contains columns for the ScenarioName, which references the name of the Scenario where the items are assigned, and ItemName, which references the name of the specific Scenario Item being assigned to the Scenario.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The name of the Scenario to assign Scenario Items to; this value should be defined in the Scenarios table.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Scenarios",
        "MasterColumn": "ScenarioName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ItemName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The name of a Scenario Item or Rule to apply to this Scenario.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "ScenarioItems, ScenarioRules",
        "MasterColumn": "[ScenarioItems.ItemName, ScenarioRules.RuleName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ItemType",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "Denotes whether or not the Item is treated as a standard scenario item or a scenario rule.",
        "Data Type": "[Item, Rule]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Item"
      },
      {
        "Column Name": "ItemOrder",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ScenarioItems": {
    "type": "Input",
    "description": "The ScenarioItems table contains information about individual items that can be assigned to scenarios. This includes the name of the item, any actions associated with it, its condition, status, tags, and any additional notes or descriptions. The status field determines whether the item should be included when running a scenario it is assigned to.",
    "columns": [
      {
        "Column Name": "ItemName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The name of the Scenario Item; Scenario Items are assigned to Scenarios via the Scenario Item Assignment table.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TableName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Action",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Condition",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "Status dictates whether or not the Scenario Item should be included when running any Scenario it is assigned to.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Description",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Tags",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CreatedDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LastEditedDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "ScenarioRules": {
    "type": "Input",
    "description": "The ScenarioRules table contains configurations for organizing and executing different supply chain scenarios. It defines the sequence of scenario items, their relationships, and metadata about scenario execution, allowing for structured analysis of different supply chain configurations and strategies.",
    "columns": [
      {
        "Column Name": "RuleName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The name of the Scenario Rule; Scenario Rules are assigned to Scenarios via the Scenario Item Assignments table.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ItemName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The name of the Scenario Item.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "ScenarioItems",
        "MasterColumn": "ItemName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ItemOrder",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The order in which the item will execute within this scenario rule. ",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": 1.0
      },
      {
        "Column Name": "Description",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Tags",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Technology",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": NaN,
        "Data Type": "[NEO, THROG, TRIAD, HOPPER]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CreatedDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LastEditedDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "Scenarios": {
    "type": "Input",
    "description": "The Scenarios table contains information about various scenarios that can be included when selecting model scenarios to run. It includes details such as the name of the scenario, its status, any associated tags, technology used, and any additional notes or descriptions. Scenarios allow users to make changes to core model data and see the corresponding outputs.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "The name of the Scenario; this value is unique to a particular collection of Scenario Items (constructed in the Scenario Items table, assigned to a Scenario in the Scenario Item Assignment table). Scenarios allow a user to easily make changes to core model data and obtain corresponding outputs.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": "Status dictates whether or not the Scenario should be included when selecting model Scenarios to run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Description",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Tags",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Technology",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "[NEO, THROG, TRIAD, HOPPER]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CreatedDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LastEditedDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "SequentialObjectives": {
    "type": "Input",
    "description": "The SequentialObjectives table contains information about the objectives to be solved for in a sequential optimization process. Each objective is assigned a priority level, tolerance value, status (whether it will be considered for optimization), objective type (such as cost or revenue), and user-defined variables or costs. The table outlines the order in which objectives will be solved for and how much each objective can be relaxed to find a solution for the next priority level.",
    "columns": [
      {
        "Column Name": "ObjectiveType",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The objective that optimization will solve for. Objectives will correspond to the cost and revenue columns from the Optimization Network Summary table, but specific User Defined Variables and User Defined Costs will also be supported. If the Objective Type = UserDefinedVariable or UserDefinedCost, the specific variable or cost can be specified in the UserDefinedObjectiveName column. Sequential Solves will solve for the objectives marked as Priority = 1 first and use this solution as a base for any subsequent solves for lower Priority values. The solution from Priority 1 can then be relaxed within the specified tolerance for each listed Priority 1 objective to find a solution targeting the Priority 2 objectives. This process will be repeated until the lowest priority objective has been solved for.",
        "Data Type": "[TotalSupplyChainCost, TotalRevenue, TotalProfit, TotalTransportationCost, TotalShipmentCost, TotalInTransitHoldingCost, TotalDutyCost, TotalProductionCost, TotalPrebuildHoldingCost, TotalTurnEstimatedHoldingCost, TotalStorageCost, TotalSourcingCost, TotalFixedOperatingCost, TotalFixedStartupCost, TotalFixedClosingCost, TotalInboundHandlingCost, TotalOutboundHandlingCost, TotalProcessCost, TotalCO2Cost, TotalCO2Emissions, TotalFuelSurchargeCost, TotalUnservedDemandPenaltyCost, TotalUserDefinedCost, UserDefinedCost, UserDefinedVariable, UserDefinedConstraint, TotalWeightedFlowDistance, TotalWeightedFlowTime, GeographicRisk, ConcentrationRisk, SourceCountRisk, TransportTimeRisk, ScenarioArcsDeviation-CustomerFulfillment, ScenarioArcsDeviation-Procurement, ScenarioArcsDeviation, FlowConstraintsDeviation, ProductionConstraintsDeviation, InventoryConstraintsDeviation, FacilityThroughputCapacityDeviation, WorkCenterThroughputCapacityDeviation, TotalFacilityThroughputQuantity, TotalFacilityThroughputVolume, TotalFacilityThroughputWeight, TotalWorkCenterThroughputQuantity, TotalWorkCenterThroughputVolume, TotalWorkCenterThroughputWeight, TotalWorkCenterThroughputTime]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UserDefinedObjectiveName",
        "Required": NaN,
        "RequiredIf": "ObjectiveType = UserDefinedCost OR UserDefinedVariable OR UserDefinedConstraint OR ScenarioArcsDeviation OR ScenarioArcsDeviation-CustomerFulfillment OR ScenarioArcsDeviation-Procurement",
        "Engine": "[NEO]",
        "Explanation": "If the Objective Type is set as User Defined Variable, User Defined Cost or User Defined Constraint, the specific User Defined Cost, Variable or Constraint can be referenced here. If nothing is specified, All Costs/Variables/Constraints will be considered. If the Objective Type is set as any of the Scenario Arc deviation options, enter the Scenario Name from which flow deviations are being measured.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UserDefinedCosts, UserDefinedVariables, UserDefinedConstraints, Scenarios",
        "MasterColumn": "[UserDefinedCosts.CostName, UserDefinedVariables.VariableName, UserDefinedConstraints.ConstraintName, Scenarios.ScenarioName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "ALL"
      },
      {
        "Column Name": "Priority",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The numeric value indicating the Objective priority.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1"
      },
      {
        "Column Name": "Tolerance",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Tolerance value of each objective will specify how much that Objective can be relaxed to solve for the Objective(s) in the next Priority. A value of 10 would mean that the solution could be relaxed by 10 percent.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status will dictate whether or not the Objective will be considered for the Sequential Solve.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "Shipments": {
    "type": "Input",
    "description": "The Shipments table contains detailed information about each individual shipment, including the quantity of products being shipped, pickup and delivery times, costs, source and destination locations, as well as the status and unique identifiers for the shipment and line items. Each shipment may consist of multiple line items, each with its own specific details recorded in the table.",
    "columns": [
      {
        "Column Name": "ShipmentID",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "A unique identifier for the Shipment; a Shipment consists of one or more Line Items.",
        "Data Type": "String - Fixed",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LineItemID",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "A unique identifier for the Line Item being defined; Shipments with multiple Line Items will require multiple table records.",
        "Data Type": "String - Fixed",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SourceName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The Facility or Supplier that the shipment originates from.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities, Suppliers",
        "MasterColumn": "[Facilities.FacilityName, Suppliers.SupplierName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DestinationName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The Facility or Customer that the shipment will be delivered to.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers, Facilities",
        "MasterColumn": "[Customers.CustomerName, Facilities.FacilityName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The Product in the Line Item.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Quantity",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The amount of the Product being shipped.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Required": NaN,
        "RequiredIf": "Quantity",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that defines Quantity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "OrderDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The date and time at which the Shipment is requested.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DueDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The date and time at which the Shipment must be delivered.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "EarliestPickupDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The date and time of the earliest possible shipment pickup.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LatestPickupDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The date and time of the latest possible shipment pickup.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "EarliestDeliveryDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The date and time of the earliest possible shipment pickup.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LatestDeliveryDate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The date and time of the latest possible shipment pickup.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "Status dictates whether or not the Line Item exists in the model. If Status is set to Exclude, this record will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "ServiceMode",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Optionally, a required Transportation Mode can be specified here. If multiple Modes are acceptable, a Mode Group may be used; the Group behavior will be Aggregate. If NULL, any Mode is assumed to be acceptable.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationModes",
        "MasterColumn": "ModeName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AllowPartialFillShipment",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, the specified Line Item may be partially filled. Otherwise, the Line Item must be filled in full. The remaining quantity of partially filled Line Items may be satisfied in the future with additional shipments. If Partial Fill Shipment is False, Partial Fill Line Items will also be forced to False.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "True"
      },
      {
        "Column Name": "AllowPartialFillLineItems",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True, individual Line Items can be partially filled. If Allow Partial Fill Shipment = False and Allow Partial Fill Line Item = True, the Line Item Partial Fill behavior will override the Shipment Partial Fill behavior.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "True"
      },
      {
        "Column Name": "FixedPickupTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The fixed time required at the pickup location of the shipment. This will be additive to the FixedPickupTime specified in the Transportation Assets table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedPickupTimeUOM",
        "Required": NaN,
        "RequiredIf": "FixedPickupTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines Fixed Pickup Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "FixedDeliveryTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The fixed time required at the delivery location of the shipment. This will be additive to the FixedDeliveryTime specified in the Transportation Assets table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedDeliveryTimeUOM",
        "Required": NaN,
        "RequiredIf": "FixedDeliveryTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines Fixed Delivery Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "UnitPickupTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The time required per unit to be loaded onto an Asset at the pickup location. This will be additive to any UnitPickupTime that is specified in the Transportation Assets table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitUOM",
        "Required": NaN,
        "RequiredIf": "UnitPickupTime OR UnitDeliveryTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that defines the basis on which UnitPickupTime and UnitDeliveryTime will be applied for the Shipment. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "UnitPickupTimeUOM",
        "Required": NaN,
        "RequiredIf": "UnitPickupTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines Unit Pickup Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "UnitDeliveryTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The time required per unit to be delivered at the destination location. This will be additive to any UnitDeliveryTime that is specified in the Transportation Assets table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitDeliveryTimeUOM",
        "Required": NaN,
        "RequiredIf": "UnitDeliveryTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines Unit Delivery Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "DirectCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The cost to send the shipment directly to the destination.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TemplateRouteName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "If the Shipment is assigned to a Template Route, the Template Route Name is specified here.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TemplateRoutes",
        "MasterColumn": "TemplateRouteName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TemplateRouteStopSequence",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The Stop sequence of the shipment on the defined Template Route.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DecompositionName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "Shipments with the same Decomposition Name will be run together as a subproblem in the Hopper solve.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "StepCosts": {
    "type": "Input",
    "description": "The StepCosts table contains information on the behavior, cost value, and unit of measure for Step Costs related to throughput levels. It also includes a status field to indicate if the record should be excluded, as well as a name for easy reference in other input tables. The table helps to define and manage costs associated with different throughput levels in a systematic manner.",
    "columns": [
      {
        "Column Name": "StepCostName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, HOPPER]",
        "Explanation": "The name given to the Step Cost. This name may be called in other input tables where Step Cost lookups can be used.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "StepCostBehavior",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, HOPPER]",
        "Explanation": "The behavior of the Step Cost. Most fields support All Item, Incremental and Stepwise as well as the combination of Stepwise and All Item. The only exceptions are: Fixed Startup, Fixed Operating, and Fixed Closing Costs fields will only support a Step Cost Behavior of Stepwise; the corresponding Cost value will be returned as a one-time cost. Incremental behavior will apply Costs to throughput levels individually. All Item behavior will apply the relevant Cost to the total throughput.",
        "Data Type": "[Stepwise, Incremental, All Item]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "All Item"
      },
      {
        "Column Name": "ThroughputLevel",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, HOPPER]",
        "Explanation": "The minimum throughput level at which the relevant Cost is to be applied. All step cost definitions should start with a throughput level of zero; otherwise, the lowest throughput interval will be extended to start at zero.",
        "Data Type": "double",
        "Primary Key": "Yes",
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ThroughputLevelUOM",
        "Required": NaN,
        "RequiredIf": "ThroughputLevel",
        "Engine": "[NEO, HOPPER]",
        "Explanation": "The unit of measure that defines Throughput Level. Quantity, Volume, Weight and Time units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Time]",
        "Expandable": NaN,
        "Default value": "EA"
      },
      {
        "Column Name": "Cost",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, HOPPER]",
        "Explanation": "The cost value to incur for the specified Throughput Level.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, HOPPER]",
        "Explanation": "Status dictates whether or not the table record exists. If Status is set to Exclude, this record will not be considered when constructing Step Costs.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "SupplierCapabilities": {
    "type": "Input",
    "description": "The SupplierCapabilities table contains information about the maximum amount of a product that can be procured from a particular supplier, the unit of measure for the maximum supply amount, the status of the policy in the model, and additional notes. It also includes the name of the supplier, as well as the specific product available at that supplier. This table provides insights into the capabilities and availability of products from different suppliers.",
    "columns": [
      {
        "Column Name": "SupplierName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Supplier at which the listed product will be available at",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Suppliers",
        "MasterColumn": "SupplierName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Product that will be available at the listed Supplier",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the policy exists in the model. If Status is set to Exclude, the policy record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The unit cost of the listed Supplier creating the Product. This field can support either a single numeric value or a defined step cost",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[]",
        "Explanation": "The UOM that specifies what unit the Unit Cost will be applied over. This can be any UOM of Type = Quantity, Weight, Volume.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "SupplyCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The maximum amount for the listed product, across all destinations, that can be procured from the Supplier.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SupplyCapacityUOM",
        "Required": NaN,
        "RequiredIf": "SupplyCapacity",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Max Supply Amount. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "CO2EmissionRate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The rate of CO2 emissions for this supplier capability.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": "[]",
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "CO2EmissionRateUOM",
        "Required": NaN,
        "RequiredIf": "CO2EmissionRate",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure (Type = Quantity, Volume, Weight) that defines the CO2 Emission Rate.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "SupplierCapabilitiesMultiTimePeriod": {
    "type": "Input",
    "description": "The SupplierCapabilitiesMultiTimePeriod table includes information on the maximum amount of a specific product that can be procured from a supplier during different periods. It also includes details on the unit of measure for the maximum supply amount, the status of the record in the model, the policy status, and the supplier, product, and period names. The table allows for overrides of records from the base table for specified periods only.",
    "columns": [
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The period name in which a change is being made. Groups of periods are also supported. Changes that are made in the Multi Time Period table will be applied as overrides for the records of the base table for the specified periods only. Additionally, only the fields that contain information needing to be updated are required to be entered, in the absence of data in the Multi Time Period table the data from the standard table will be persisted",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "SupplierName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Supplier at which the listed product will be available at",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Suppliers",
        "MasterColumn": "SupplierName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Product that will be available at the listed Supplier",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the multi-time period record exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "PolicyStatus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Policy Status dictates whether or not the policy exists in the model for the specified period(s). If Policy Status is set to Exclude, the policy record is ignored during the model run for the specified periods.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The unit cost of the listed Supplier creating the Product. This field can support either a single numeric value or a defined step cost",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[]",
        "Explanation": "The UOM that specifies what unit the Unit Cost will be applied over. This can be any UOM of Type = Quantity, Weight, Volume.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "SupplyCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The maximum amount for the listed product, across all destinations, that can be procured from the Supplier.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SupplyCapacityUOM",
        "Required": NaN,
        "RequiredIf": "SupplyCapacity",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Max Supply Amount. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "CO2EmissionRate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The rate of CO2 emissions for this supplier capability for the given period.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": "[]",
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CO2EmissionRateUOM",
        "Required": NaN,
        "RequiredIf": "CO2EmissionRate",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure (Type = Quantity, Volume, Weight) that defines the CO2 Emission Rate.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "SupplierRiskConfigurations": {
    "type": "Input",
    "description": "The Supplier Risk Configurations table contains the weights and configurations for various types of risks (Geographic, User Defined, Utilization, Concentration) when calculating the overall Supplier Risk Score. It also includes the Risk Profile name to specify which risk profile these configurations are saved for, allowing for customization based on specific source data and risk rating configurations. Additionally, it includes Concentration Risk Band information to evaluate the Concentration Risk at the Supplier.",
    "columns": [
      {
        "Column Name": "RiskProfileName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The name of the Risk Profile that the risk configuration is saved for. Risk Profiles are configured to run using specified source data in the Risk Rating Configurations table, and will take the risk weightings and bands associated with the Risk Profile from each of the configuration tables",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskRatingConfigurations",
        "MasterColumn": "RiskProfileName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "GeographicRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Geographic Risk when calculating the Supplier Risk Score. Detailed Geographic Risks configurations on geographic risk components are entered in the Geographic Risk Configurations table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UserDefinedRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the User Defined Risk when calculating the Supplier Risk Score.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UtilizationRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Utilization Risk when calculating the Supplier Risk Score. Unlike Facilities, Suppliers will only be impacted by a single capacity factor and therefore there is no need for more detailed Utilization Risk configurations.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConcentrationRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The weight applied to the Concentration Risk when calculating the Supplier Risk Score.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConcentrationRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": "The Risk Band that is used to evaluate the Concentration Risk at the Supplier. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "BandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "Suppliers": {
    "type": "Input",
    "description": "The Suppliers table contains detailed information about each supplier, including their address, capacity unit of measure, queue priority, geographic risk score, user-defined risk score, status, city, region, postal code, country, latitude, longitude, supplier capacity, and any additional notes. This information is used to evaluate and assess the risk and availability of suppliers within the model.",
    "columns": [
      {
        "Column Name": "SupplierName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": "The name of the Supplier",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": "Status dictates whether the Supplier exists in the model. If Status is set to Exclude, any records for the Supplier in other tables will be ignored.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Address",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": "The street address of the Supplier.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "City",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": "The city of the Supplier.",
        "Data Type": "String - Fixed",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Region",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": "The state/region of the Supplier.",
        "Data Type": "String - Fixed",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "PostalCode",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": "The ZIP/postal Code of the Supplier.",
        "Data Type": "String - Fixed",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Country",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": "The country of the Supplier.",
        "Data Type": "String - Fixed",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Latitude",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": "The latitude coordinate of the Supplier.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "LatitudeValue",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "Longitude",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": "The longitude coordinate of the Supplier.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "LongitudeValue",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "SupplierCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, TRIAD]",
        "Explanation": "The maximum amount, across all products, that can be procured from the Supplier during the model solve. For TRIAD models, all inputs expressed here will be treated strictly as Quantity as the MaxSupplyAmountUOM field is not considered for TRIAD runs.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SupplierCapacityUOM",
        "Required": NaN,
        "RequiredIf": "SupplierCapacity",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Max Supply Amount. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "QueuePriority",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "For any Queues that are evaluated with a Queueing Priority Logic, there can be a By Location component to the priority logic used. If By Location is used, The Queue Priority fields in the Customers, Facilities and Suppliers table will be used to determine how the queues will be ordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "GeographicRiskScore",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": "When geocoding a location, or following the most recent DART run, the Geographic Risk will be populated using the Primary Risk Rating defined in Model Settings. For more detailed information on Geographic Risk, reference the Geographic Risk Metrics output table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UserDefinedRiskScore",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": "An optional input that can be leveraged by DART when calculating Supplier Risk. If left empty for some records, the User Defined Risk will not be considered for those specific Suppliers. The weighting for this component will be defined in the Supplier Risk Configurations table, and any outputs will be reported alongside other geographic risk scores in the Geographic Risk Metrics table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, TRIAD]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "SuppliersMultiTimePeriod": {
    "type": "Input",
    "description": "The SuppliersMultiTimePeriod table contains information about Suppliers that may vary over different time periods, such as the maximum capacity that can be procured from each Supplier and their current status in the model. It allows for changes to be made for specific periods without affecting the standard table data, with the option to exclude certain Suppliers or records for certain time periods. This table also includes the unit of measure for the maximum supply amount.",
    "columns": [
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The period name in which a change is being made. Groups of periods are also supported. Changes that are made in the Multi Time Period table will be applied as overrides for the records of the base table for the specified periods only. Additionally, only the fields that contain information needing to be updated are required to be entered, in the absence of data in the Multi Time Period table the data from the standard table will be persisted",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "SupplierName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Supplier",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Suppliers",
        "MasterColumn": "SupplierName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the multi-time period record exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "SupplierStatus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Supplier Status dictates whether the Supplier exists in the model for the specified period(s). If Status is set to Exclude, any records for the Supplier in other tables will be ignored.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SupplierCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The maximum amount, across all products, that can be procured from the Supplier during the model solve.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SupplierCapacityUOM",
        "Required": NaN,
        "RequiredIf": "SupplierCapacity",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Max Supply Amount. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "QueuePriority",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "For any Queues that are evaluated with a Queueing Priority Logic, there can be a By Location component to the priority logic used. If By Location is used, The Queue Priority fields in the Customers, Facilities and Suppliers table will be used to determine how the queues will be ordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "TableFilters": {
    "type": "Input",
    "description": "The TableFilters table contains rules for filtering data across various supply chain tables. It defines filtering logic for different types of data views, including map and engine-specific filters, enabling dynamic data selection and grouping across the supply chain model.",
    "columns": [
      {
        "Column Name": "TableName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The input table that the filter is targeting.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FilterName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The name assigned to the filter. If this filter is applied against Customers, Facilities, Suppliers, Products, Periods, BOMs, WorkCenters, WorkResources, Modes or Processes then it can be used as an input where entries from the target table would have been supported. This will function the same as a group when used as an input record, however the members captured by the filter logic will be evaluated each time the model is run.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FilterLogic",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The logic applied against the listed Table Name for the filter.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MapFilterLogic",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The map logic applied against the listed Table Name for the filter.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "EngineFilterLogic",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The engine logic applied against the listed Table Name for the filter.",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "TemplateRoutes": {
    "type": "Input",
    "description": "The TemplateRoutes table contains predefined transportation route configurations. It specifies transportation assets, rules for additional shipment insertions, and status information, enabling the creation of standardized routing templates for regular transportation patterns.",
    "columns": [
      {
        "Column Name": "TemplateRouteName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The name of the given template route. This Template Route Name will appear in the Transportation Route Summary output table.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AssetName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The Transportation Asset that is used for the specified template route.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationAssets",
        "MasterColumn": "AssetName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AdditionalShipmentInsertionType",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "If a Template Route can accept additional shipments, the rule for where those shipments can be placed in the drop sequence is specified as one of the following: Insert Anywhere, Insert Before, or Insert After. The default value will be No Insertion, meaning no additional shipments can be added to the Template Route.",
        "Data Type": "[No Insertion, Insert Anywhere, Insert Before, Insert After]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "No Insertion"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "Status dictates whether or not the Line Item exists in the model. If Status is set to Exclude, this record will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "TransitMatrix": {
    "type": "Input",
    "description": "The TransitMatrix table contains data on transportation arcs, including the distance and time of travel between specified origins and destinations for a given asset. It also indicates whether the distance and time are symmetric, and the status of the line item in the model. The table includes information on the names of origins, destinations, and optional transportation assets.",
    "columns": [
      {
        "Column Name": "OriginName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER, NEO]",
        "Explanation": "The origin of the transportation arc.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities, Suppliers, Customers, Sources",
        "MasterColumn": "[Facilities.FacilityName, Customers.CustomerName, Suppliers.SupplierName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "DestinationName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER, NEO]",
        "Explanation": "The destination of the transportation arc.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities, Customers, Destinations",
        "MasterColumn": "[Facilities.FacilityName, Customers.CustomerName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "AssetName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "Optionally, a Transportation Asset can be defined for any given Origin / Destination pairing. Different distances and times can be specified for individual Transportation Assets between the same Origin / Destination pairing. If nothing is entered, the Distance / Time will be applied over all Transportation Assets.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationAssets",
        "MasterColumn": "AssetName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "TransportDistance",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER, NEO]",
        "Explanation": "The distance of the transportation arc for the given Origin / Destination / Asset combination.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TransportDistanceUOM",
        "Required": NaN,
        "RequiredIf": "TransportDistance",
        "Engine": "[HOPPER, NEO]",
        "Explanation": "The unit of measure (Type = Distance) that defines Transport Distance.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "TransportTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER, NEO]",
        "Explanation": "The travel time of the transportation arc for the given Origin / Destination / Asset combination.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TransportTimeUOM",
        "Required": NaN,
        "RequiredIf": "TransportTime",
        "Engine": "[HOPPER, NEO]",
        "Explanation": "The unit of measure (Type = Time) that defines Transport Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "AdditionalCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "An additional cost incurred if this segment is used in a route, the cost will be included in the distance cost in outputs.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "IsSymmetric",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER, NEO]",
        "Explanation": "If True, the same distance and time will be applied for movements between the Origin and Destination in both directions.",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "True"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER, NEO]",
        "Explanation": "Status dictates whether or not the Line Item exists in the model. If Status is set to Exclude, this record will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER, NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "TransportationAssets": {
    "type": "Input",
    "description": "The Transportation Assets table contains detailed information about various assets used for transportation, including costs, capacities, speeds, and fixed times required for pickup and delivery. Each asset has a unique name and can be assigned to routes based on factors such as distance, time, and stops. The table also includes information on the base location of each asset and its status within the model.",
    "columns": [
      {
        "Column Name": "AssetName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The name of the Transportation Asset. This value can be referenced in other tables involving Transportation Assets.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AvailableUnits",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The units of this Asset that are available at the specified Base Location. If left blank, this is assumed to be an infinite amount of available assets",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DomicileLocation",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The Facility at which the Asset is based. Units of this Asset will be located at the Base Location at the beginning of the model run.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "OperatingSchedule",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The schedule (defined in the Business Hours table) dictating when the Transportation Asset will be available. The vehicle must start and finish its route within one continuous business hours window. If no schedule is specified, the asset can be used all day.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BusinessHours",
        "MasterColumn": "ScheduleName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": "Status dictates whether or not the Asset exists in the model. If Status is set to Exclude, the Asset is ignored in all tables. The Asset will be dropped from policies that reference it.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "TransportationRateName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The name of the Transportation Rate. This value can be referenced in other tables involving Transportation Rates.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationRates",
        "MasterColumn": "TransportationRateName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TransportationRateType",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The type of the rate defined in the TransportationRates table. For LastDestination and FurthestDestination, Hopper will look up the correct rate using the RouteDestinationName column in the TransportationRates table. LastDestination will use the customer visited last in the route while FurthestDestination will use the furthest customer from the DC in the route.",
        "Data Type": "[LocationIndependent, LastDestination, FurthestDestination]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "LocationIndependent"
      },
      {
        "Column Name": "FixedCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The one-time fixed cost incurred per unit of the Asset used in the model run.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "QuantityCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The capacity (quantity) of the Asset. The most restrictive capacity given in this record (among quantity, volume, and weight) will be applied to the Asset.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityCapacityUOM",
        "Required": NaN,
        "RequiredIf": "QuantityCapacity",
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The unit of measure (Type = Quantity) that defines Quantity Capacity.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "QuantityFillLevel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The fill level of the Asset (quantity). Quantity Fill Level is the minimum quantity of items required for the Asset to depart.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityFillLevelUOM",
        "Required": NaN,
        "RequiredIf": "QuantityFillLevel",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Quantity) that defines Quantity Fill Level.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "VolumeCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The capacity (volume) of the Asset. The most restrictive capacity given in this record (among quantity, volume, and weight) will be applied to the Asset.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "VolumeCapacityUOM",
        "Required": NaN,
        "RequiredIf": "VolumeCapacity",
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The unit of measure (Type = Volume) that defines Volume Capacity.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Volume]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Volume]",
        "Expandable": NaN,
        "Default value": "{PrimaryVolumeUOM}"
      },
      {
        "Column Name": "VolumeFIllLevel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The fill level of the Asset (volume). Volume Fill Level is the minimum volume of items required for the Asset to depart.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "VolumeFillLevelUOM",
        "Required": NaN,
        "RequiredIf": "VolumeFillLevel",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Volume) that defines Volume Fill Level.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Volume]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Volume]",
        "Expandable": NaN,
        "Default value": "{PrimaryVolumeUOM}"
      },
      {
        "Column Name": "WeightCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The capacity (weight) of the Asset. The most restrictive capacity given in this record (among quantity, volume, and weight) will be applied to the Asset.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "WeightCapacityUOM",
        "Required": NaN,
        "RequiredIf": "WeightCapacity",
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The unit of measure (Type = Weight) that defines Weight Capacity.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryWeightUOM}"
      },
      {
        "Column Name": "WeightFillLevel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The fill level of the Asset (weight). Weight Fill Level is the minimum volume of items required for the Asset to depart.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "WeightFillLevelUOM",
        "Required": NaN,
        "RequiredIf": "WeightFillLevel",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Weight) that defines Weight Fill Level.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryWeightUOM}"
      },
      {
        "Column Name": "MaxDistancePerRoute",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The max distance of each route that this Asset can be assigned to.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxDistancePerRouteUOM",
        "Required": NaN,
        "RequiredIf": "MaxDistancePerRoute",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Distance) that defines Max Distance Per Route.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "MaxTimePerRoute",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The max time of each route that this Asset can be assigned to.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxTimePerRouteUOM",
        "Required": NaN,
        "RequiredIf": "MaxTimePerRoute",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines Max Time Per Route.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "MaxWaitTimePerRoute",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The max wait time within each route that this Asset can be assigned to.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxWaitTimePerRouteUOM",
        "Required": NaN,
        "RequiredIf": "MaxWaitTimePerRoute",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines Max Wait Time Per Route.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "MaxStopsPerRoute",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The max number of stops that can be on a route that this Asset is assigned to.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MinRoutesPerTour",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The minimum number of routes required in a tour (asset schedule) over the model horizon.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxRoutesPerTour",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The maximum number of routes allowed in a tour (asset schedule) over the model horizon.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxTimePerTour",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The maximum length of a tour (asset schedule) over the model horizon. This is calculated as the time between the start of the first route and the end of the last route for the asset.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxTimePerTourUOM",
        "Required": NaN,
        "RequiredIf": "MaxTimePerTour",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines the Max Time Per Tour.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "Speed",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The speed that the Asset will travel at.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SpeedUOM",
        "Required": NaN,
        "RequiredIf": "Speed",
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The unit of measure that defines the Asset Speed.",
        "Data Type": "[MPH, KPH]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": "[]",
        "Expandable": NaN,
        "Default value": "{PrimarySpeedUOM}"
      },
      {
        "Column Name": "FixedPickupTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The fixed time required at the pickup locations for this Asset. This will be additive to the FixedPickupTime specified in the Shipments table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedPickupTimeUOM",
        "Required": NaN,
        "RequiredIf": "FixedPickupTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines Fixed Pickup Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "FixedDeliveryTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The fixed time required at the delivery locations for this Asset. This will be additive to the FixedDeliveryTime specified in the Shipments table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedDeliveryTimeUOM",
        "Required": NaN,
        "RequiredIf": "FixedDeliveryTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines Fixed Delivery Time",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "UnitPickupTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The time required per unit to be loaded onto this Asset at the pickup locations. This will be additive to any UnitPickupTime that is specified in the Shipments table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitPickupTimeUOM",
        "Required": NaN,
        "RequiredIf": "UnitPickupTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines Unit Pickup Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "UnitDeliveryTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The time required per unit to be delivered at destination locations by this Asset. This will be additive to any UnitDeliveryTime that is specified in the Shipments table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitUOM",
        "Required": NaN,
        "RequiredIf": "UnitPickupTime OR UnitDeliveryTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that defines the basis on which UnitPickupTime and UnitDeliveryTime will be applied for the Shipment. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "UnitDeliveryTimeUOM",
        "Required": NaN,
        "RequiredIf": "UnitDeliveryTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines Unit Delivery Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "IsRoundTrip",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If True the vehicle will always return to its domicile at the end of the route. If False, the route will end at the last delivery location",
        "Data Type": "[True, False]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "True"
      },
      {
        "Column Name": "MaxDriveTimeWithinShift",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The maximum drive time that can occur within a shift. A rest period happens between two shifts.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxDriveTimeWithinShiftUOM",
        "Required": NaN,
        "RequiredIf": "MaxDriveTimeWithinShift",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines the max drive time within shift.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "MaxDutyTimeWithinShift",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The maximum duty time that can occur within a shift. Duty time includes any activity that is not a rest between two shifts. So this field controls the length of each shift",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxDutyTimeWithinShiftUOM",
        "Required": NaN,
        "RequiredIf": "MaxDutyTimeWithinShift",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines the max duty time within shift.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "RestTimeBetweenShifts",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The minimum rest time that needs to occur between two shifts.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "RestTimeBetweenShiftsUOM",
        "Required": NaN,
        "RequiredIf": "RestTimeBetweenShifts",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines the rest time between shifts.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "MaxDriveTimeBeforeShortBreak",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The maximum cumulative drive time that is allowed within a route since the last short break or rest. A short break needs to happen when this limit is reached.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxDriveTimeBeforeShortBreakUOM",
        "Required": NaN,
        "RequiredIf": "MaxDriveTimeBeforeShortBreak",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines the max drive time before short break.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "ShortBreakTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The minimum break time that needs to occur when MaxDriveTimeBeforeShortBreak is reached.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ShortBreakTimeUOM",
        "Required": NaN,
        "RequiredIf": "ShortBreakTime",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines the short break.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "MaxOutOfRouteDistance",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The max out of route distance for each route that this Asset can be assigned to.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MaxOutOfRouteDistanceUOM",
        "Required": NaN,
        "RequiredIf": "MaxOutOfRouteDistance",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Distance) that defines Max Out of Route Distance.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "MaxOutOfRouteDistancePercentage",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The max out of route distance Percent for each route that this Asset can be assigned to. This constraint enforces a maximum out of route distance based on a percentage of the total route distance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "Percentage",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AssetWeight",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The weight of the transportation asset when empty. This weight is added to the weight of products being shipped by this asset and will be used for CO2 emission calculations.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": "[Weight]",
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "AssetWeightUOM",
        "Required": NaN,
        "RequiredIf": "AssetWeight",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure of Type = Weight that the asset weight is defined in terms of.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryWeightUOM}"
      },
      {
        "Column Name": "CO2EmissionRate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The rate of CO2 emissions for this transportation asset.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": "[]",
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "CO2EmissionRateUOM",
        "Required": NaN,
        "RequiredIf": "CO2EmissionRate",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Distance, Quantity-Distance, Volume-Distance, Weight-Distance) that defines the CO2 Emission Rate. If a UOM of Type = Distance is used, the total distance of the route will be used to calculate CO2 emissions. If weight-distance is used, the product of the total route distance and the total delivered shipment weight will be used.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance, Quantity-Distance, Volume-Distance, Weight-Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance, Quantity-Distance, Volume-Distance, Weight-Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "TransportationAssetsMultiTimePeriod": {
    "type": "Input",
    "description": "The TransportationAssetsMultiTimePeriod table contains time-specific changes to transportation asset configurations. It defines period-specific modifications to asset availability, capacity, costs, and environmental impact parameters, allowing for temporal variations in transportation resources.",
    "columns": [
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The period name in which a change is being made. Groups of periods are also supported. Changes that are made in the Multi Time Period table will be applied as overrides for the records of the base table for the specified periods only. Additionally, only the fields that contain information needing to be updated are required to be entered, in the absence of data in the Multi Time Period table the data from the standard table will be persisted",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": NaN,
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "AssetName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The name of the Transportation Asset. This value can be referenced in other tables involving Transportation Assets.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": "AssetName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Status dictates whether or not the multi-time period record exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "AssetStatus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Asset Status dictates whether or not the policy exists in the model for the specified period(s). If Asset Status is set to Exclude, the policy record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AvailableUnits",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The units of this Asset that are available at the specified Base Location.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DomicileLocation",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Facility at which the Asset is based. Units of this Asset will be located at the Base Location at the beginning of the model run.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The one-time fixed cost incurred per unit of the Asset used in the model run.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The unit cost associated with flow transported using the specified Asset. This field can support a single numeric value, a step cost lookup (defined in the Step Costs table), or a custom cost function. If a cost is entered on a record using this Asset in the Transportation Policies table, that cost will overwrite the one entered here.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts, TransportationBandCosting",
        "MasterColumn": "[StepCosts.StepCostName, TransportationBandCosting.RateName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Unit Cost. Quantity, Volume, Weight, Distance, Time, Quantity-Distance, Quantity-Time, Volume-Distance, Volume-Time, Weight-Distance, and Weight-Time units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Time, Distance, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Time, Distance, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "QuantityCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The capacity (quantity) of the Asset. The most restrictive capacity given in this record (among quantity, volume, and weight) will be applied to the Asset.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityCapacityUOM",
        "Required": NaN,
        "RequiredIf": "QuantityCapacity",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Quantity) that defines Quantity Capacity.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "QuantityFillLevel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The fill level of the Asset (quantity). Quantity Fill Level is the minimum quantity of items required for the Asset to depart.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityFillLevelUOM",
        "Required": NaN,
        "RequiredIf": "QuantityFillLevel",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Quantity) that defines Quantity Fill Level.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "VolumeCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The capacity (volume) of the Asset. The most restrictive capacity given in this record (among quantity, volume, and weight) will be applied to the Asset.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "VolumeCapacityUOM",
        "Required": NaN,
        "RequiredIf": "VolumeCapacity",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Volume) that defines Volume Capacity.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Volume]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Volume]",
        "Expandable": NaN,
        "Default value": "{PrimaryVolumeUOM}"
      },
      {
        "Column Name": "VolumeFIllLevel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The fill level of the Asset (volume). Volume Fill Level is the minimum volume of items required for the Asset to depart.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "VolumeFillLevelUOM",
        "Required": NaN,
        "RequiredIf": "VolumeFillLevel",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Volume) that defines Volume Fill Level.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Volume]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Volume]",
        "Expandable": NaN,
        "Default value": "{PrimaryVolumeUOM}"
      },
      {
        "Column Name": "WeightCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The capacity (weight) of the Asset. The most restrictive capacity given in this record (among quantity, volume, and weight) will be applied to the Asset.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "WeightCapacityUOM",
        "Required": NaN,
        "RequiredIf": "WeightCapacity",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Weight) that defines Weight Capacity.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryWeightUOM}"
      },
      {
        "Column Name": "WeightFillLevel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The fill level of the Asset (weight). Weight Fill Level is the minimum volume of items required for the Asset to depart.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "WeightFillLevelUOM",
        "Required": NaN,
        "RequiredIf": "WeightFillLevel",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Weight) that defines Weight Fill Level.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryWeightUOM}"
      },
      {
        "Column Name": "AssetWeight",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The weight of the transportation asset when empty. This weight is added to the weight of products being shipped by this asset and will be used for CO2 emission calculations.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": "[Weight]",
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AssetWeightUOM",
        "Required": NaN,
        "RequiredIf": "AssetWeight",
        "Engine": "[]",
        "Explanation": "The unit of measure of Type = Weight that the asset weight is defined in terms of.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryWeightUOM}"
      },
      {
        "Column Name": "CO2EmissionRate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The rate of CO2 emissions for this transportation asset for the given period.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": "[]",
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CO2EmissionRateUOM",
        "Required": NaN,
        "RequiredIf": "CO2EmissionRate",
        "Engine": NaN,
        "Explanation": "The unit of measure (Type = Distance, Quantity-Distance, Volume-Distance, Weight-Distance) that defines the CO2 Emission Rate. If a UOM of Type = Distance is used, the total distance of the route will be used to calculate CO2 emissions. If weight-distance is used, the product of the total route distance and the total delivered shipment weight will be used.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance, Quantity-Distance, Volume-Distance, Weight-Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance, Quantity-Distance, Volume-Distance, Weight-Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "TransportationBandCosting": {
    "type": "Input",
    "description": "The TransportationBandCosting table contains detailed cost structures for transportation based on distance bands and shipment sizes. It defines rate calculations using origin-destination pairs, distance ranges, and shipment characteristics, enabling sophisticated transportation cost modeling.",
    "columns": [
      {
        "Column Name": "RateName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Transportation Rate. This value can be referenced in other tables involving Transportation Rates.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OriginProperty",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The property of the Source (Supplier or Facility) that the Rate cost structure has been created for. For example, a Postal Code to Postal Code rate system could be defined; both the Source and Destination Properties would be set to Postal Code and the Source/Destination values would include all allowable Postal Code pairings.",
        "Data Type": "[Name, Address, City, PostalCode, Region, Country, Organization]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": "Facilities, Suppliers, Sources",
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Name"
      },
      {
        "Column Name": "OriginValue",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The value to look up in the Source table (either Facilities or Suppliers) Source Property column.",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": "Facilities, Suppliers, Sources",
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "DestinationProperty",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The property of the Destination (Customer or Facility) that the Rate cost structure has been created for. For example, a Postal Code to Postal Code rate system could be defined; both the Source and Destination Properties would be set to Postal Code and the Source/Destination values would include all allowable Postal Code pairings.",
        "Data Type": "[Name, Address, City, PostalCode, Region, Country, Organization]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": "Customers, Facilities, Destinations",
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Name"
      },
      {
        "Column Name": "DestinationValue",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The value to look up in the Destination table (either Customers or Facilities) Destination Property column.",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": "Customers, Facilities, Destinations",
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "DistanceBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Distance-dependent piecewise Rates can be modeled using this field; the appropriate Distance Band interval and corresponding Cost will be selected based on the Distance specified in Transportation Policies.",
        "Data Type": "double",
        "Primary Key": "Yes",
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "DistanceBandUOM",
        "Required": NaN,
        "RequiredIf": "DistanceBand",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure (Type = Distance) used to define Distance Band.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "ShipmentSize",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "If populated, the shipment size of the transportation policy record where this rate is assigned will be evaluated against the shipment sizes listed in this table for the other matching keys. This will act as a range lookup, similar to how distance bands are evaluated.",
        "Data Type": "double",
        "Primary Key": "Yes",
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ShipmentSizeUOM",
        "Required": NaN,
        "RequiredIf": "ShipmentSize",
        "Engine": "[]",
        "Explanation": "The unit of measure that the shipment size is defined in terms of.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Cost",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost that is to be applied when the Rate is referenced in the Transportation Policies table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": "StepCosts",
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CostUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Cost. If the Unit Cost UOM field in the Transportation Policies table is populated for records that the listed Transportation Rate is assigned, the value in the Transportation Policies table will be used. If not, the Cost UOM specified in this table will be used along with the cost. UOM Types of Quantity, Volume, Weight, Distance, Time, Quantity-Distance, Quantity-Time, Volume-Distance, Volume-Time, Weight-Distance, and Weight-Time are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Time, Distance, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Time, Distance, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the Rate exists in the model. If Status is set to Exclude, the Rate will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "TransportationDrivers": {
    "type": "Input",
    "description": "The TransportationDrivers table contains information about different classes of drivers available for transportation operations. It defines driver availability, base locations, and allowed vehicle types, enabling the management of driver resources within the transportation network.",
    "columns": [
      {
        "Column Name": "DriverClass",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the Driver Class.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AvailableUnits",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The units of this Driver class that are available at the specified Origin Location. If left blank, this is assumed to be an infinite amount of available drivers.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DomicileLocation",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Facility at which the driver is based.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "ALL"
      },
      {
        "Column Name": "AllowedAssets",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Assets that this driver class is allowed to operate. This can be a single Asset or a group of Assets, if a group is entered then all Assets in the group can be operated by the driver class.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationAssets",
        "MasterColumn": "AssetName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "ALL"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "TransportationLaneModeQueueDetails": {
    "type": "Input",
    "description": "The TransportationLaneModeQueueDetails table contains queue management rules for specific transportation lanes and modes. It defines review periods, priority logic, and associated costs for managing shipment queues on specific origin-destination-product-mode combinations.",
    "columns": [
      {
        "Column Name": "OriginName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The origin Facility or Supplier of the lane that the queue details apply to",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities, Suppliers, Sources",
        "MasterColumn": "[Facilities.FacilityName, Suppliers.SupplierName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "DestinationName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The destination Customer or Facility of the lane that the queue details apply to",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers, Facilities, Destinations",
        "MasterColumn": "[Customers.CustomerName, Facilities.FacilityName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Product of the lane that the queue details apply to",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ModeName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Transportation Mode that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationModes",
        "MasterColumn": "ModeName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriodFirstTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The first Date/Time at which to review the queue for the specified Transportation Lane Mode combination. Lane Mode queues will be evaluated using the logic specified in the Priority Logic field. After this Date/Time, the review period length will dictate when transportation lane queue reviews occur. If NULL, Review Period First Time will be the start of the simulation.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The time between lane mode queue reviews. After Review Period First Time, a lane mode queue review will occur each time Review Period has elapsed. For example, if Review Period First Time is 1/1/2022 12:00:00 AM and Review Period is six hours, we will conduct reviews on 1/1/2022 at 12:00:00 AM, 6:00:00 AM, 12:00:00 PM, and 6:00:00 PM, continuing similarly until the simulation ends. A Review Schedule defined in the Review Schedules table can be entered by Review Schedule Name in this field as well. If NULL, continuous review is used.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "ReviewSchedules",
        "MasterColumn": "ReviewScheduleName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriodUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Time) that defines Review Period length.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": NaN,
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "QueueingPriorityLogic",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The logic used for the Transportation Lane Mode combination when deciding how to arrange orders in the shipment queue. If a value of By Date And Location is selected, the QueuePriority fields in the Customers, Facilities, and Suppliers will be leveraged. If the Advanced Queueing Details table is populated, the override priorities for the Origin, Destination, Product combination will be used",
        "Data Type": "[FIFO, ByDueDateAndLocation, ByDayQueuedAndLocation]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "FIFO"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Status dictates whether or not the policy exists in the model. If Status is set to Exclude, the policy record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "TimeInQueueCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The cost associated with an item sitting in a queue. The cost expressed in this field will be charged each time that items sit in a queue for the length of time specified in the Time In Queue Cost UOM field.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeInQueueCostUOM",
        "Required": NaN,
        "RequiredIf": "TimeInQueueCost",
        "Engine": "[]",
        "Explanation": "The unit of measure that time is expressed in terms of.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "TransportationLaneQueueDetails": {
    "type": "Input",
    "description": "The TransportationLaneQueueDetails table contains queue management rules for transportation lanes independent of mode. It defines review periods, priority logic, and queue costs for managing shipment flows between specific origin-destination-product combinations.",
    "columns": [
      {
        "Column Name": "OriginName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The origin Facility or Supplier of the lane that the queue details apply to",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities, Suppliers, Sources",
        "MasterColumn": "[Facilities.FacilityName, Suppliers.SupplierName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "DestinationName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The destination Customer or Facility of the lane that the queue details apply to",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers, Facilities, Destinations",
        "MasterColumn": "[Customers.CustomerName, Facilities.FacilityName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Product of the lane that the queue details apply to",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriodFirstTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The first Date/Time at which to review the queue for the specified Transportation Lane. Lane queues will be evaluated using the logic specified in the Priority Logic field. After this Date/Time, the review period length will dictate when transportation lane queue reviews occur. If NULL, Review Period First Time will be the start of the simulation.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time between lane queue reviews. After Review Period First Time, a lane queue review will occur each time Review Period has elapsed. For example, if Review Period First Time is 1/1/2022 12:00:00 AM and Review Period is six hours, we will conduct reviews on 1/1/2022 at 12:00:00 AM, 6:00:00 AM, 12:00:00 PM, and 6:00:00 PM, continuing similarly until the simulation ends. A Review Schedule defined in the Review Schedules table can be entered by Review Schedule Name in this field as well. If NULL, continuous review is used.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "ReviewSchedules",
        "MasterColumn": "ReviewScheduleName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriodUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines Review Period length.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": NaN,
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "QueueingPriorityLogic",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The logic used for the Transportation Lane when deciding how to arrange orders in the order queue. If a value of By Date And Location is selected, the QueuePriority fields in the Customers, Facilities, and Suppliers will be leveraged. If the Advanced Queueing Details table is populated, the override priorities for the Origin, Destination, Product combination will be used",
        "Data Type": "[FIFO, ByDueDateAndLocation, ByDayQueuedAndLocation]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "FIFO"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the policy exists in the model. If Status is set to Exclude, the policy record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "TimeInQueueCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The cost associated with an item sitting in a queue. The cost expressed in this field will be charged each time that items sit in a queue for the length of time specified in the Time In Queue Cost UOM field.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeInQueueCostUOM",
        "Required": NaN,
        "RequiredIf": "TimeInQueueCost",
        "Engine": "[]",
        "Explanation": "The unit of measure that time is expressed in terms of.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "TransportationModes": {
    "type": "Input",
    "description": "The TransportationModes table contains information about different transportation modes that can be used for transporting goods. It includes details such as the mode's cost, capacity, fill level requirements, and average shipment size. The table also specifies whether the mode is active or excluded from use in the model. Modes can be referenced in other tables related to transportation logistics.",
    "columns": [
      {
        "Column Name": "ModeName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The name of the Transportation Mode. This value can be referenced in other tables involving Transportation Modes.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BehaviorRule",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The rule that governs the behavior for any flows that use this Mode. This is a SIM-specific field.",
        "Data Type": "[FTL, LTL, Expedite]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "FTL"
      },
      {
        "Column Name": "AssetName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The name of the Transportation Asset assigned to this Mode. Capacity, Fill Level, and Cost fields in this table will be overwritten by those of the specified Asset (if one is given).",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationAssets",
        "MasterColumn": "AssetName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "Status dictates whether or not the Mode exists in the model. If Status is set to Exclude, the Mode is ignored in all tables.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost associated with each unit of flow transported using this Mode. This field can support a single numeric value, a step cost lookup (defined in the Step Costs table), transportation rate, or a custom cost function. If a cost is entered on a record using this Mode in the Transportation Policies table, that cost will override the one entered here.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts, TransportationBandCosting",
        "MasterColumn": "[StepCosts.StepCostName, TransportationBandCosting.RateName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Unit Cost. Quantity, Volume, Weight, Distance, Time, Quantity-Distance, Quantity-Time, Volume-Distance, Volume-Time, Weight-Distance, and Weight-Time units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Time, Distance, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Time, Distance, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "FixedCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost associated with a shipment made under the specified Source/Destination/Product/Mode combination. The Average Shipment Size will be used to estimate the number of shipments that occurred; the Fixed Cost will be applied to the estimated number of shipments according to the Fixed Cost Rule.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts, TransportationBandCosting",
        "MasterColumn": "[StepCosts.StepCostName, TransportationBandCosting.RateName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "FixedCostRule",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The rule by which Fixed Cost is applied to the estimated number of shipments. The cost can be prorated in the event that the estimated number of shipments is not an integer. If the selected rule is Treat as Full, the estimated number of shipments will be rounded up and the fixed cost will be applied accordingly.",
        "Data Type": "[Prorate, Treat As Full]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Prorate"
      },
      {
        "Column Name": "AverageShipmentSize",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The average shipment size associated with this Source/Destination/Product/Mode combination. This figure will be used to estimate the fixed cost of shipments and will also be used in combination with any Time or Distance Unit Costs. If NULL, a default value of one unit will be assumed.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1"
      },
      {
        "Column Name": "AverageShipmentSizeUOM",
        "Required": NaN,
        "RequiredIf": "AverageShipmentSize",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Average Shipment Size. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "FuelSurcharge",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Fuel surcharge applied to this mode.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "FuelSurchargeBasis",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Basis for the fuel surcharge applied to this mode. If percentage is selected, surcharge per unit = UnitCost*(1+ FuelSurcharge). If Per Unit is selected then surcharge per unit = FuelSurcharge",
        "Data Type": "[Percentage, Per Unit]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Percentage"
      },
      {
        "Column Name": "QuantityCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The capacity (quantity) of the Mode. The most restrictive capacity given in this record (among quantity, volume, and weight) will be applied to the Mode.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityCapacityUOM",
        "Required": NaN,
        "RequiredIf": "QuantityCapacity",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Quantity) that defines Quantity Capacity.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "QuantityFillLevel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The fill level of the Mode (quantity). Quantity Fill Level is the minimum quantity of items required for the Mode to depart.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityFillLevelUOM",
        "Required": NaN,
        "RequiredIf": "QuantityFillLevel",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Quantity) that defines Quantity Fill Level.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "VolumeCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The capacity (volume) of the Mode. The most restrictive capacity given in this record (among quantity, volume, and weight) will be applied to the Mode.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "VolumeCapacityUOM",
        "Required": NaN,
        "RequiredIf": "VolumeCapacity",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Volume) that defines Volume Capacity.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Volume]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Volume]",
        "Expandable": NaN,
        "Default value": "{PrimaryVolumeUOM}"
      },
      {
        "Column Name": "VolumeFillLevel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The fill level of the Mode (volume). Volume Fill Level is the minimum volume of items required for the Mode to depart.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "VolumeFillLevelUOM",
        "Required": NaN,
        "RequiredIf": "VolumeFillLevel",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Volume) that defines Volume Fill Level.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Volume]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Volume]",
        "Expandable": NaN,
        "Default value": "{PrimaryVolumeUOM}"
      },
      {
        "Column Name": "WeightCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The capacity (weight) of the Mode. The most restrictive capacity given in this record (among quantity, volume, and weight) will be applied to the Mode.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "WeightCapacityUOM",
        "Required": NaN,
        "RequiredIf": "WeightCapacity",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Weight) that defines Weight Capacity.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryWeightUOM}"
      },
      {
        "Column Name": "WeightFillLevel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The fill level of the Mode (weight). Weight Fill Level is the minimum volume of items required for the Mode to depart.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "WeightFillLevelUOM",
        "Required": NaN,
        "RequiredIf": "WeightFillLevel",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Weight) that defines Weight Fill Level.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryWeightUOM}"
      },
      {
        "Column Name": "TransportTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The time required to travel from the Source to the Destination for the specific Product/Mode combination. This is meant to be a function that is attached to the mode and should be evaluated at the transportation policy tables",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TransportTimeUOM",
        "Required": NaN,
        "RequiredIf": "TransportTime",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Time) that defines Transport Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "ModeSpeed",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The speed of the Mode.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ModeSpeedUOM",
        "Required": NaN,
        "RequiredIf": "ModeSpeed",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Speed) that defines Mode Speed.",
        "Data Type": "[MPH, KPH]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": "[]",
        "Expandable": NaN,
        "Default value": "{PrimarySpeedUOM}"
      },
      {
        "Column Name": "CO2EmissionRate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The rate of CO2 emissions for this transportation mode.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": "[]",
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "CO2EmissionRateUOM",
        "Required": NaN,
        "RequiredIf": "CO2EmissionRate",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure (Type = Distance, Weight-Distance) that defines the CO2 Emission Rate. If a UOM of Type = Distance is used, then the CO2 generated will be based off of the number of shipments - this would be calculated as the (Flow / Shipment Size) * Distance * CO2 Emission Rate.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance, Weight-Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance, Weight-Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "TransportationModesMultiTimePeriod": {
    "type": "Input",
    "description": "The TransportationModesMultiTimePeriod table contains information about transportation modes that may vary over different time periods. It allows for changes to be made to the standard transportation mode records for specific periods, such as setting exclusions or adjusting costs. Only the necessary fields with updates are required to be entered in this table, and any missing data will default to the standard table. This table supports overrides for transportation mode records for the specified periods only.",
    "columns": [
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The period name in which a change is being made. Groups of periods are also supported. Changes that are made in the Multi Time Period table will be applied as overrides for the records of the base table for the specified periods only. Additionally, only the fields that contain information needing to be updated are required to be entered, in the absence of data in the Multi Time Period table the data from the standard table will be persisted",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ModeName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Transportation Mode. This value can be referenced in other tables involving Transportation Modes.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationModes",
        "MasterColumn": "ModeName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the multi-time period record exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "ModeStatus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Mode Status dictates whether or not the policy exists in the model for the specified period(s). If Mode Status is set to Exclude, the policy record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "BehaviorRule",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The rule that governs the behavior for any flows that use this Mode. This is a SIM-specific field.",
        "Data Type": "[FTL, LTL, Expedite]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AssetName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The name of the Transportation Asset assigned to this Mode. Capacity, Fill Level, and Cost fields in this table will be overwritten by those of the specified Asset (if one is given).",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationAssets",
        "MasterColumn": "AssetName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost associated with each unit of flow transported using this Mode. This field can support a single numeric value, a step cost lookup (defined in the Step Costs table), transportation rate, or a custom cost function. If a cost is entered on a record using this Mode in the Transportation Policies table, that cost will override the one entered here.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts, TransportationBandCosting",
        "MasterColumn": "[StepCosts.StepCostName, TransportationBandCosting.RateName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Unit Cost. Quantity, Volume, Weight, Distance, Time, Quantity-Distance, Quantity-Time, Volume-Distance, Volume-Time, Weight-Distance, and Weight-Time units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Time, Distance, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Time, Distance, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "FixedCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost associated with a shipment made under the specified Source/Destination/Product/Mode combination. The Average Shipment Size will be used to estimate the number of shipments that occurred; the Fixed Cost will be applied to the estimated number of shipments according to the Fixed Cost Rule.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts, TransportationBandCosting",
        "MasterColumn": "[StepCosts.StepCostName, TransportationBandCosting.RateName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedCostRule",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The rule by which Fixed Cost is applied to the estimated number of shipments. The cost can be prorated in the event that the estimated number of shipments is not an integer. If the selected rule is Treat as Full, the estimated number of shipments will be rounded up and the fixed cost will be applied accordingly.",
        "Data Type": "[Prorate, Treat As Full]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AverageShipmentSize",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The average shipment size associated with this Source/Destination/Product/Mode combination. This figure will be used to estimate the fixed cost of shipments and will also be used in combination with any Time or Distance Unit Costs. If NULL, a default value of one unit will be assumed.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AverageShipmentSizeUOM",
        "Required": NaN,
        "RequiredIf": "AverageShipmentSize",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Average Shipment Size. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "FuelSurcharge",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Fuel surcharge applied to this mode for the given period.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "FuelSurchargeBasis",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Basis for the fuel surcharge applied to this mode. If percentage is selected, surcharge per unit = UnitCost*(1+ FuelSurcharge). If Per Unit is selected then surcharge per unit = FuelSurcharge",
        "Data Type": "[Percentage, Per Unit]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Percentage"
      },
      {
        "Column Name": "QuantityCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The capacity (quantity) of the Mode. The most restrictive capacity given in this record (among quantity, volume, and weight) will be applied to the Mode.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityCapacityUOM",
        "Required": NaN,
        "RequiredIf": "QuantityCapacity",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Quantity) that defines Quantity Capacity.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "QuantityFillLevel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The fill level of the Mode (quantity). Quantity Fill Level is the minimum quantity of items required for the Mode to depart.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "QuantityFillLevelUOM",
        "Required": NaN,
        "RequiredIf": "QuantityFillLevel",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Quantity) that defines Quantity Fill Level.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "VolumeCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The capacity (volume) of the Mode. The most restrictive capacity given in this record (among quantity, volume, and weight) will be applied to the Mode.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "VolumeCapacityUOM",
        "Required": NaN,
        "RequiredIf": "VolumeCapacity",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Volume) that defines Volume Capacity.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Volume]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Volume]",
        "Expandable": NaN,
        "Default value": "{PrimaryVolumeUOM}"
      },
      {
        "Column Name": "VolumeFillLevel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The fill level of the Mode (volume). Volume Fill Level is the minimum volume of items required for the Mode to depart.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "VolumeFillLevelUOM",
        "Required": NaN,
        "RequiredIf": "VolumeFillLevel",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Volume) that defines Volume Fill Level.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Volume]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Volume]",
        "Expandable": NaN,
        "Default value": "{PrimaryVolumeUOM}"
      },
      {
        "Column Name": "WeightCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The capacity (weight) of the Mode. The most restrictive capacity given in this record (among quantity, volume, and weight) will be applied to the Mode.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "WeightCapacityUOM",
        "Required": NaN,
        "RequiredIf": "WeightCapacity",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Weight) that defines Weight Capacity.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryWeightUOM}"
      },
      {
        "Column Name": "WeightFillLevel",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The fill level of the Mode (weight). Weight Fill Level is the minimum volume of items required for the Mode to depart.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "WeightFillLevelUOM",
        "Required": NaN,
        "RequiredIf": "WeightFillLevel",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Weight) that defines Weight Fill Level.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryWeightUOM}"
      },
      {
        "Column Name": "CO2EmissionRate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The rate of CO2 emissions for this transportation mode for the given period.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": "[]",
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CO2EmissionRateUOM",
        "Required": NaN,
        "RequiredIf": "CO2EmissionRate",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure (Type = Distance, Weight-Distance) that defines the CO2 Emission Rate. If a UOM of Type = Distance is used, then the CO2 generated will be based off of the number of shipments - this would be calculated as the (Flow / Shipment Size) * Distance * CO2 Emission Rate.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance, Weight-Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance, Weight-Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "TransportationPolicies": {
    "type": "Input",
    "description": "The TransportationPolicies table contains data related to the logic, values, and rules governing transportation flows for specific Origin, Destination, Product, and Mode combinations. It includes information on optimization policies, fixed cost rules, average shipment sizes, duty rates, lane capacities, load and unload processes, inventory carrying cost percentages, simulation policies, status, unit costs, fixed costs, transport distances, transport times, and other relevant factors that impact transportation decisions within a supply chain or logistics network.  Transportation policies are commonly referred to as Lanes within the supply chain modeling context.",
    "columns": [
      {
        "Column Name": "OriginName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The source Facility or Supplier that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities, Suppliers, Sources",
        "MasterColumn": "[Facilities.FacilityName, Suppliers.SupplierName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "DestinationName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Customer or destination Facility that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers, Facilities, Destinations",
        "MasterColumn": "[Customers.CustomerName, Facilities.FacilityName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Product that the policy record applies to. If NULL, the policy will be applied to all products in the model.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "ModeName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Transportation Mode that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationModes",
        "MasterColumn": "ModeName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "OptimizationPolicy",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The logic that transportation flows for the Origin, Destination, and Product combination(s) must follow when selecting a Mode. To Optimize selects the lowest cost option. By Ratio (Auto Scale) will enforce a flow split between the specified Modes, the defined ratios will apply to flow into the Facility from the listed Modes only. By Ratio (No Scale) will enforce a flow split between the specified Modes and the defined ratios will be in terms of the total flow between the Origin/Destination pair for the specified product. Note that the Product Name Group Behavior field will be used when applying the policy logic - if a group is entered in the Product Name field and a Group Behavior of Aggregate is selected, the policy logic will apply over the group of products collectively.",
        "Data Type": "[To Optimize, By Ratio (Auto Scale), By Ratio (No Scale)]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "To Optimize"
      },
      {
        "Column Name": "OptimizationPolicyValue",
        "Required": NaN,
        "RequiredIf": "OptimizationPolicy = By Ratio (Auto Scale) OR By Ratio (No Scale)",
        "Engine": "[NEO]",
        "Explanation": "By Ratio (Auto Scale): The Policy Value will define the percentage of flow that must be satisfied by the listed Mode. The percentage will be calculated based on the total flow between the Origin/Destination pair for the specified product. If the Policy Values do not add up to 100, the ratios will be automatically scaled and enforced.\n\nBy Ratio (No Scale): The Policy Value will define the percentage of flow that must be satisfied by the listed Mode. The percentage will be calculated based on the total flow between the Origin/Destination pair for the specified product. If the Policy Values add up to less than 100, the remaining flow between the Origin/Destination pair for the specified product can be satisfied using any other available Modes.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicy",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The logic applied for Mode Selection for specified Source/Destination/Product combinations. By Preference will select Modes, pending availability, in the order of preference specified in the SIM Policy Value field. By Due Date will select the highest priority mode that is available which can reach the destination by the due date of the shipment moving on the lane. On Quantity, On Volume, and On Weight will send shipments on the mode once the value specified in SIM Policy Value is met for the number of items being sent on that shipment.",
        "Data Type": "[By Preference, By Due Date, On Quantity, On Volume, On Weight]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "By Preference"
      },
      {
        "Column Name": "SimulationPolicyValue",
        "Required": NaN,
        "RequiredIf": "SimulationPolicy = By Preference OR On Quantity OR On Volume OR On Weight",
        "Engine": "[THROG]",
        "Explanation": "The values used to define policies. For By Preference and By Due Date, the lower the value the higher the preference. For On Quantity, On Volume, and On Weight the value will reference the shipment amount at which a shipment is sent. These will be expressed in units of EA, CFT, and LB respectively.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "Status dictates whether or not the policy exists in the model. If Status is set to Exclude, the policy record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The cost associated with one unit of flow for the Facilities/Product/Mode combination. This field can support a single numeric value, a step cost lookup (defined in the Step Costs table), transportation rate, or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts, TransportationBandCosting",
        "MasterColumn": "[StepCosts.StepCostName, TransportationBandCosting.RateName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit of measure that defines Unit Cost. UOM Types of Quantity, Volume, Weight, Distance, Time, Quantity-Distance, Quantity-Time, Volume-Distance, Volume-Time, Weight-Distance, and Weight-Time are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Time, Distance, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Time, Distance, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "FixedCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The cost associated with a shipment made under the specified Origin/Destination/Product/Mode combination. The Average Shipment Size will be used to estimate the number of shipments that occurred; the Fixed Cost will be applied to the estimated number of shipments according to the Fixed Cost Rule. If a step cost is used, the steps will be evaluated in terms of the number of shipments that are sent over the Origin/Destination/Product/Mode combination.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts, TransportationBandCosting",
        "MasterColumn": "[StepCosts.StepCostName, TransportationBandCosting.RateName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "FixedCostRule",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The rule by which Fixed Cost is applied to the estimated number of shipments. The cost can be prorated in the event that the estimated number of shipments is not an integer. If the selected rule is Treat as Full, the estimated number of shipments will be rounded up and the fixed cost will be applied accordingly.",
        "Data Type": "[Prorate, Treat As Full]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Prorate"
      },
      {
        "Column Name": "AverageShipmentSize",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The average shipment size associated with this Origin/Destination/Product/Mode combination. This figure will be used to estimate the fixed cost of shipments and will also be used in combination with any Time or Distance Unit Costs. If NULL, a default value of one unit will be assumed.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1"
      },
      {
        "Column Name": "AverageShipmentSizeUOM",
        "Required": NaN,
        "RequiredIf": "AverageShipmentSize",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Average Shipment Size. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "ProductNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "When determining the number of shipments to apply the Fixed Cost over, Product Name Group Behavior can describe how records for grouped products should be considered. If Enumerate is selected, Fixed Costs will be applied over each product in the group individually. If Aggregate is selected, the total flow of all products in the group will be used to determine how many shipments were sent. The same logic will apply for calculating what level of Step Costs to apply for a Unit Cost",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Enumerate"
      },
      {
        "Column Name": "DutyRate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Duty Rate will be applied as a percentage of the product's value that is moving along this Origin / Destination / Mode combination. For a Duty Rate of 10%, enter a value of 10 into the Duty Rate field",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "Percentage",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "FuelSurcharge",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Fuel surcharge applied to this policy.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "FuelSurchargeBasis",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Basis for the fuel surcharge applied to this policy. If percentage is selected, surcharge is calculated as FlowCost * (1 / FuelSurcharge). For example, to apply a 5% surcharge you would enter a value of FuelSurcharge = 5, FuelSurchargeBasis = Percentage. \n\nIf Per Unit is selected then surcharge is calculated as FlowQuantity * FuelSurcharge.",
        "Data Type": "[Percentage, Per Unit]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Percentage"
      },
      {
        "Column Name": "LaneCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The capacity that applies over the Origin, Destination, Product combination. Capacities can be expressed in terms of flow quantity, volume, weight, or in terms of the number of shipments that are sent along the lane. This capacity will be measured over the time period specified in the Lane Capacity Period field.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LaneCapacityUOM",
        "Required": NaN,
        "RequiredIf": "LaneCapacity",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that defines the Lane Capacity. UOM Types of Quantity, Volume, Weight, and Shipment are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Shipment]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Shipment]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "LaneCapacityPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time period over which the Lane Capacity is evaluated. If a Lane Capacity was set at 50 shipments per week, Lane Capacity = 50, Lane Capacity UOM = SHIPMENT, Lane Capacity Period = 1, Lane Capacity Period UOM = WK.  The first period will be evaluated at the Simulation Start Time, and capacity will be evaluated over the specified period length. Capacity is evaluated over individual capacity periods, a rolling capacity is not considered.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LaneCapacityPeriodUOM",
        "Required": NaN,
        "RequiredIf": "LaneCapacityPeriod",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines the Lane Capacity Period.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "LaneModeCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The capacity that applies over the Origin, Destination, Product, Mode combination. Capacities can be expressed in terms of flow quantity, volume, weight, or in terms of the number of shipments that are sent along the lane/mode combination. This capacity will be measured over the time period specified in the Lane Capacity Period field.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LaneModeCapacityUOM",
        "Required": NaN,
        "RequiredIf": "LaneModeCapacity",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that defines the Lane Mode Capacity. UOM Types of Quantity, Volume, Weight, and Shipment are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Shipment]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Shipment]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "LaneModeCapacityPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time period over which the Lane Mode Capacity is evaluated. If a Lane Mode Capacity was set at 50 shipments per week, Lane Mode Capacity = 50, Lane Mode Capacity UOM = SHIPMENT, Lane Mode Capacity Period = 1, Lane Mode Capacity Period UOM = WK. The first period will be evaluated at the Simulation Start Time, and capacity will be evaluated over the specified period length. Capacity is evaluated over individual capacity periods, a rolling capacity is not considered.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LaneModeCapacityPeriodUOM",
        "Required": NaN,
        "RequiredIf": "LaneModeCapacityPeriod",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines the Lane Mode Capacity Period.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "LoadProcessName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Processes table record that can be used to add detail to the initialization of the transportation policy at the Source under the specified Origin/Destination/Product/Mode combination. This field allows us to associate processing times, costs, and resource consumption with the beginning of the transportation process.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Processes",
        "MasterColumn": "ProcessName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnloadProcessName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Processes table record that can be used to add detail to the conclusion of the transportation policy at the Destination under the specified Origin/Destination/Product/Mode combination. This field allows us to associate processing times, costs, and resource consumption with the end of the transportation process.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Processes",
        "MasterColumn": "ProcessName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "InventoryOwnership",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "This field will determine whether the in-transit inventory costs will be assigned to the origin or the destination for products flowing on this transportation lane.",
        "Data Type": "[Origin, Destination]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "InventoryCarryingCostPercentage",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The percentage of the product value that the in-transit inventory cost will consider. The in-transit inventory cost will be calculated as an annual cost, with the cost calculation being Product Value * Cost Percentage * (Transport Time in DAY / 365)",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "Percentage",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "{InventoryCarryingCostPercentage}"
      },
      {
        "Column Name": "TransportDistance",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The distance of the transportation lane associated with the Origin/Destination/Product/Mode combination.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TransportDistanceUOM",
        "Required": NaN,
        "RequiredIf": "TransportDistance",
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit of measure (Type = Distance) that defines Transport Distance.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "TransportTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The time required to travel from Origin to Destination under the Product/Mode combination.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TransportTimeUOM",
        "Required": NaN,
        "RequiredIf": "TransportTime",
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines Transport Time.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "CO2EmissionRate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The rate of CO2 emissions for this transportation policy.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": "[]",
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "CO2EmissionRateUOM",
        "Required": NaN,
        "RequiredIf": "CO2EmissionRate",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure (Type = Quantity, Volume, Weight, Distance, Time, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time) that defines the CO2 Emission Rate. If a UOM of Type = Distance is used, then the CO2 generated will be based off of the number of shipments - this would be calculated as the (Flow / Shipment Size) * Distance * CO2 Emission Rate.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Distance, Time, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Distance, Time, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "RoutePlannerName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationRoutePlanners",
        "MasterColumn": "RoutePlannerName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "TransportationPoliciesMultiTimePeriod": {
    "type": "Input",
    "description": "The TransportationPoliciesMultiTimePeriod table stores transportation policies that are applied over multiple time periods. These policies dictate the logic for selecting transportation modes, unit costs, fixed costs, duty rates, inventory carrying costs, and other parameters for specific origin-destination-product-mode combinations. The table allows for overrides of base table records for specified periods and supports groupings of periods. Only fields that require updates need to be entered, with missing data defaulting to the base table values.",
    "columns": [
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The period name in which a change is being made. Groups of periods are also supported. Changes that are made in the Multi Time Period table will be applied as overrides for the records of the base table for the specified periods only. Additionally, only the fields that contain information needing to be updated are required to be entered, in the absence of data in the Multi Time Period table the data from the standard table will be persisted",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "OriginName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The source Facility or Supplier that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities, Suppliers, Sources",
        "MasterColumn": "[Facilities.FacilityName, Suppliers.SupplierName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "DestinationName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Customer or destination Facility that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers, Facilities, Destinations",
        "MasterColumn": "[Customers.CustomerName, Facilities.FacilityName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Product that the policy record applies to. If NULL, the policy will be applied to all products in the model.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ModeName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Transportation Mode that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationModes",
        "MasterColumn": "ModeName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the multi-time period record exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "PolicyStatus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Policy Status dictates whether or not the policy exists in the model for the specified period(s). If Policy Status is set to Exclude, the policy record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OptimizationPolicy",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The logic that transportation flows for the Origin, Destination, and Product combination(s) must follow when selecting a Mode. To Optimize selects the lowest cost option. By Ratio (Auto Scale) will enforce a flow split between the specified Modes, the defined ratios will apply to flow into the Facility from the listed Modes only. By Ratio (No Scale) will enforce a flow split between the specified Modes and the defined ratios will be in terms of the total flow between the Origin/Destination pair for the specified product. Note that the Product Name Group Behavior field will be used when applying the policy logic - if a group is entered in the Product Name field and a Group Behavior of Aggregate is selected, the policy logic will apply over the group of products collectively.",
        "Data Type": "[To Optimize, By Ratio (Auto Scale), By Ratio (No Scale), Single Source]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OptimizationPolicyValue",
        "Required": NaN,
        "RequiredIf": "OptimizationPolicy = By Ratio (Auto Scale) OR By Ratio (No Scale)",
        "Engine": "[NEO]",
        "Explanation": "By Ratio (Auto Scale): The Policy Value will define the percentage of flow that must be satisfied by the listed Mode. The percentage will be calculated based on the total flow between the Origin/Destination pair for the specified product. If the Policy Values do not add up to 100, the ratios will be automatically scaled and enforced.\n\nBy Ratio (No Scale): The Policy Value will define the percentage of flow that must be satisfied by the listed Mode. The percentage will be calculated based on the total flow between the Origin/Destination pair for the specified product. If the Policy Values add up to less than 100, the remaining flow between the Origin/Destination pair for the specified product can be satisfied using any other available Modes.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicy",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The logic applied for Mode Selection for specified Source/Destination/Product combinations. By Preference will select Modes, pending availability, in the order of preference specified in the SIM Policy Value field. By Due Date will select the highest priority mode that is available which can reach the destination by the due date of the shipment moving on the lane. On Quantity, On Volume, and On Weight will send shipments on the mode once the value specified in SIM Policy Value is met for the number of items being sent on that shipment.",
        "Data Type": "[By Preference, By Due Date, On Quantity, On Volume, On Weight]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "SimulationPolicyValue",
        "Required": NaN,
        "RequiredIf": "SimulationPolicy = By Preference OR On Quantity OR On Volume OR On Weight",
        "Engine": "[]",
        "Explanation": "The values used to define policies. For By Preference and By Due Date, the lower the value the higher the preference. For On Quantity, On Volume, and On Weight the value will reference the shipment amount at which a shipment is sent. These will be expressed in units of EA, CFT, and LB respectively.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost associated with one unit of flow for the Facilities/Product/Mode combination. This field can support a single numeric value, a step cost lookup (defined in the Step Costs table), transportation rate, or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts, TransportationBandCosting",
        "MasterColumn": "[StepCosts.StepCostName, TransportationBandCosting.RateName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Unit Cost. UOM Types of Quantity, Volume, Weight, Distance, Time, Quantity-Distance, Quantity-Time, Volume-Distance, Volume-Time, Weight-Distance, and Weight-Time are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Time, Distance, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Time, Distance, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "FixedCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost associated with a shipment made under the specified Origin/Destination/Product/Mode combination. The Average Shipment Size will be used to estimate the number of shipments that occurred; the Fixed Cost will be applied to the estimated number of shipments according to the Fixed Cost Rule. If a step cost is used, the steps will be evaluated in terms of the number of shipments that are sent over the Origin/Destination/Product/Mode combination.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts, TransportationBandCosting",
        "MasterColumn": "[StepCosts.StepCostName, TransportationBandCosting.RateName]",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedCostRule",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The rule by which Fixed Cost is applied to the estimated number of shipments. The cost can be prorated in the event that the estimated number of shipments is not an integer. If the selected rule is Treat as Full, the estimated number of shipments will be rounded up and the fixed cost will be applied accordingly.",
        "Data Type": "[Prorate, Treat As Full]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AverageShipmentSize",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The average shipment size associated with this Origin/Destination/Product/Mode combination. This figure will be used to estimate the fixed cost of shipments and will also be used in combination with any Time or Distance Unit Costs. If NULL, a default value of one unit will be assumed.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AverageShipmentSizeUOM",
        "Required": NaN,
        "RequiredIf": "AverageShipmentSize",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Average Shipment Size. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "ProductNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "When determining the number of shipments to apply the Fixed Cost over, Product Name Group Behavior can describe how records for grouped products should be considered. If Enumerate is selected, Fixed Costs will be applied over each product in the group individually. If Aggregate is selected, the total flow of all products in the group will be used to determine how many shipments were sent. The same logic will apply for calculating what level of Step Costs to apply for a Unit Cost",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DutyRate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Duty Rate will be applied as a percentage of the product's value that is moving along this Origin / Destination / Mode combination. For a Duty Rate of 10%, enter a value of 10 into the Duty Rate field",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "Percentage",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FuelSurcharge",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Fuel surcharge applied to this policy for the given period.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FuelSurchargeBasis",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Basis for the fuel surcharge applied to this policy. If percentage is selected, surcharge per unit = UnitCost*(1+ FuelSurcharge). If Per Unit is selected then surcharge per unit = FuelSurcharge",
        "Data Type": "[Percentage, Per Unit]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Percentage"
      },
      {
        "Column Name": "LaneCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The capacity that applies over the Origin, Destination, Product combination. Capacities can be expressed in terms of flow quantity, volume, weight, or in terms of the number of shipments that are sent along the lane. This capacity will be measured over the time period specified in the Lane Capacity Period field.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LaneCapacityUOM",
        "Required": NaN,
        "RequiredIf": "LaneCapacity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines the Lane Capacity. UOM Types of Quantity, Volume, Weight, and Shipment are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Shipment]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Shipment]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "LaneCapacityPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The time period over which the Lane Capacity is evaluated. If a Lane Capacity was set at 50 shipments per week, Lane Capacity = 50, Lane Capacity UOM = SHIPMENT, Lane Capacity Period = 1, Lane Capacity Period UOM = WK",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LaneCapacityPeriodUOM",
        "Required": NaN,
        "RequiredIf": "LaneCapacityPeriod",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Time) that defines the Lane Capacity Period.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "LaneModeCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The capacity that applies over the Origin, Destination, Product, Mode combination. Capacities can be expressed in terms of flow quantity, volume, weight, or in terms of the number of shipments that are sent along the lane/mode combination. This capacity will be measured over the time period specified in the Lane Capacity Period field.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LaneModeCapacityUOM",
        "Required": NaN,
        "RequiredIf": "LaneModeCapacity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines the Lane Mode Capacity. UOM Types of Quantity, Volume, Weight, and Shipment are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Shipment]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Shipment]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "LaneModeCapacityPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The time period over which the Lane Mode Capacity is evaluated. If a Lane Mode Capacity was set at 50 shipments per week, Lane Mode Capacity = 50, Lane Mode Capacity UOM = SHIPMENT, Lane Mode Capacity Period = 1, Lane Mode Capacity Period UOM = WK",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "LaneModeCapacityPeriodUOM",
        "Required": NaN,
        "RequiredIf": "LaneModeCapacityPeriod",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Time) that defines the Lane Mode Capacity Period.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "InventoryOwnership",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "This field will determine whether the in-transit inventory costs will be assigned to the origin or the destination for products flowing on this transportation lane.",
        "Data Type": "[Origin, Destination]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "InventoryCarryingCostPercentage",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The percentage of the product value that the in-transit inventory cost will consider. The in-transit inventory cost will be calculated as an annual cost, with the cost calculation being Product Value * Cost Percentage * (Transport Time in DAY / 365)",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "Percentage",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "{InventoryCarryingCostPercentage}"
      },
      {
        "Column Name": "LoadProcessName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Processes table record that can be used to add detail to the initialization of the transportation policy at the Source under the specified Origin/Destination/Product/Mode combination. This field allows us to associate processing times, costs, and resource consumption with the beginning of the transportation process.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Processes",
        "MasterColumn": "ProcessName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnloadProcessName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Processes table record that can be used to add detail to the conclusion of the transportation policy at the Destination under the specified Origin/Destination/Product/Mode combination. This field allows us to associate processing times, costs, and resource consumption with the end of the transportation process.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Processes",
        "MasterColumn": "ProcessName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CO2EmissionRate",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The rate of CO2 emissions for this transportation policy for the given period.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": "[]",
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CO2EmissionRateUOM",
        "Required": NaN,
        "RequiredIf": "CO2EmissionRate",
        "Engine": NaN,
        "Explanation": "The unit of measure (Type = Quantity, Volume, Weight, Distance, Time, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time) that defines the CO2 Emission Rate. If a UOM of Type = Distance is used, then the CO2 generated will be based off of the number of shipments - this would be calculated as the (Flow / Shipment Size) * Distance * CO2 Emission Rate.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Distance, Time, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Distance, Time, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "RoutePlannerName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationRoutePlanners",
        "MasterColumn": "RoutePlannerName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "TransportationRates": {
    "type": "Input",
    "description": "The TransportationRates table contains information about transportation rates, including the cost to be applied, unit of measure for cost, status of the rate (such as whether it should be included in calculations), and other details like rate name, origin and destination properties, distance bands, and distance band unit of measure. This table is used to define and manage transportation costs for different properties and destinations in the transportation model.",
    "columns": [
      {
        "Column Name": "TransportationRateName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The name of the Transportation Rate. This value can be referenced in other tables involving Transportation Rates.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "RouteDestinationName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The location of the destination of the route (last delivery). Will dictate which rate record will be used to calculate the cost of that route. Should be empty for rate type LocationIndependent",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers",
        "MasterColumn": "CustomerName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "ALL"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": "Status dictates whether or not the Asset exists in the model. If Status is set to Exclude, the Asset is ignored in all tables. The Asset will be dropped from policies that reference it.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "FixedCostPerRoute",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The fixed cost incurred for each route operated by the Asset.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "DistanceCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The cost per distance travelled for the Asset.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "DistanceCostUOM",
        "Required": NaN,
        "RequiredIf": "DistanceCost",
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The unit of measure (Type = Distance) that defines how the distance costs will be applied.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "RepositionDistanceCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The cost per distance travelled for the Asset when empty.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "RepositionDistanceCostUOM",
        "Required": NaN,
        "RequiredIf": "RepositionDistanceCost",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Distance) that defines how the distance costs will be applied.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "OutOfRouteDistanceCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The cost per out of route distance calculated as the total route distance minus the round trip distance to the furthest customer on the route. This is additive to the PerDistanceCost and PerRepositionDistanceCost",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "OutOfRouteDistanceCostUOM",
        "Required": NaN,
        "RequiredIf": "OutOfRouteDistanceCost",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Distance) that defines how the distance costs will be applied.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Distance]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Distance]",
        "Expandable": NaN,
        "Default value": "{PrimaryDistanceUOM}"
      },
      {
        "Column Name": "TimeCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The cost per unit of time that the Asset is in use.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "TimeCostUOM",
        "Required": NaN,
        "RequiredIf": "TimeCost",
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines how the time costs will be applied.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "WaitTimeCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The cost per unit of time that the Asset is waiting.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "WaitTimeCostUOM",
        "Required": NaN,
        "RequiredIf": "WaitTimeCost",
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines how the time costs will be applied.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "RestTimeCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The cost per unit of time during a rest between shifts.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "RestTimeCostUOM",
        "Required": NaN,
        "RequiredIf": "RestTimeCost",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines how the time costs will be applied.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "BreakTimeCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The cost per unit of time during a break after the maximum drive time before short break is reached.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "BreakTimeCostUOM",
        "Required": NaN,
        "RequiredIf": "BreakTimeCost",
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure (Type = Time) that defines how the time costs will be applied.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "StopCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The cost incurred by the Asset at each stop.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The unit cost associated with flow transported using the specified Asset. This field can support a single numeric value, a step cost lookup (defined in the Step Costs table), or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[HOPPER, THROG]",
        "Explanation": "The unit of measure that defines the basis on which UnitCost will be applied for the Asset. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[HOPPER, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "TransportationRoutePlanners": {
    "type": "Input",
    "description": "The TransportationRoutePlanners table contains configurations for automated route planning systems. It defines planning methods, review schedules, and operational parameters for optimizing transportation routes across the supply chain network.",
    "columns": [
      {
        "Column Name": "RoutePlannerName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Name of the Route Planner",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "RoutePlanningMethod",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "[Fixed, Hopper, NextMv, MavenMachines]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Hopper"
      },
      {
        "Column Name": "ReviewPeriodFirstTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The first Date/Time at which the Route Planner reviews available shipments.  After this Date/Time, the review period length will dictate when the Route Planner reviews. If NULL, Review Period First Time will be the start of the simulation.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time between Route Planner reviews. After Review Period First Time, a Route Planner review will occur each time Review Period has elapsed. For example, if Review Period First Time is 1/1/2022 12:00:00 AM and Review Period is six hours, we will conduct reviews on 1/1/2022 at 12:00:00 AM, 6:00:00 AM, 12:00:00 PM, and 6:00:00 PM, continuing similarly until the simulation ends. A Review Schedule defined in the Review Schedules table can be entered by Review Schedule Name in this field as well. A Review Schedule defined in the Review Schedules table can be entered by Review Schedule Name in this field as well. If NULL, continuous review is used.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "ReviewSchedules",
        "MasterColumn": "ReviewScheduleName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriodUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines Review Period length.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": NaN,
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the Route Planner exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "UnitsOfMeasure": {
    "type": "Input",
    "description": "The UnitsOfMeasure table contains information on the different units of measure (UOM) that can be used in various tables within the model. It includes the name of the UOM, the measurement type, the ratio to the primary unit of that type, and any notes or symbols associated with the UOM. This table ensures that data input in different units can be converted to a common unit for accurate interpretation by the solvers.",
    "columns": [
      {
        "Column Name": "UnitOfMeasureName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, HOPPER]",
        "Explanation": "The name of the Unit of Measure (UOM). Models should be given a set of default UOMs upon creation. Units of Measure will allow for input data in various tables to be expressed in a variety of units, all of which will be able to be converted to a common unit so that the solvers will be able to interpret them. If units of measure aren't specified in input tables, defaults that have been set in the Model Settings table as Primary UOM will be used for the appropriate measurement type.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Type",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, HOPPER]",
        "Explanation": "The measurement type defining the UOM. UOM Type dictates where the UOM can be referenced in other tables. For example, we will not be able to use UOMs of Type = Weight in table fields requiring Volume UOMs.",
        "Data Type": "[Quantity, Volume, Weight, Distance, Time, Area, DaysOfSupply, Shipment, ProcessLot]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Symbol",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, HOPPER]",
        "Explanation": "The symbol by which the UOM may be referenced in other tables.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Ratio",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG, HOPPER]",
        "Explanation": "Defines the ratio of the UOM to the specified Type's Primary Unit. For example, the default Primary Unit for Type = Quantity will be Each (EA). As the Primary Quantity Unit, EA will have a ratio of 1; if we define Dozen as another Quantity UOM, we should assign it a ratio of 12 (12 EA per Dozen). In the event that Primary Units are adjusted through the Model Settings table, the ratios will also be adjusted accordingly. If you have defined your own unit of measure, be sure to enter the ratio in alignment with the Primary Unit of the appropriate type that is specified in the Model Settings.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "PositiveNumeric",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": 1.0
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, HOPPER]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "UserDefinedConstraints": {
    "type": "Input",
    "description": "The UserDefinedConstraints table contains information about constraints that have been imposed on user-defined variables in a model. This includes details such as the type of constraint, the constraint value, the status of the constraint, and additional notes such as the name assigned to the constraint. This table allows users to specify and manage constraints for variables in their modeling process.",
    "columns": [
      {
        "Column Name": "ConstraintName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name assigned to the Constraint. This value is purely descriptive; it can increase visibility into the constraints that are implemented into the model in the event that the Variable referenced includes an Enumerated Group. This Constraint Name will be automatically indexed to match the indexed (as a result of Enumeration) instances of the relevant Variable Name.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "VariableName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the User-Defined Variable to be constrained.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UserDefinedVariables",
        "MasterColumn": "VariableName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConstraintType",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The type of constraint imposed on the specified Variable.\n\nMin: the Variable must be greater than or equal to the Constraint Value.\nMax: the Variable must be less than or equal to the Constraint Value.\nFixed: the Variable must be equal to the Constraint Value.\nFixed With Tolerance: The Variable must be equal to the Constraint Value * (1 +/- Relative Constraint Tolerance). Relative Constraint Tolerance is specified in the Model Run Options.\nConditional Min: if the Variable is nonzero, it must be greater than or equal to the Constraint Value.",
        "Data Type": "[Min, Max, Fixed, Fixed With Tolerance, Conditional Min]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConstraintValue",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The numeric value that the specified Variable will be evaluated against.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the Constraint exists. If Status is set to Exclude, this Constraint will be ignored in the model solve.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "UserDefinedCosts": {
    "type": "Input",
    "description": "The table UserDefinedCosts contains information on costs associated with specific user-defined variables. It includes the cost name, variable name, unit cost, and status of each cost. The unit cost is multiplied by the value of the variable, and costs with status set to Exclude will be ignored in the model solve.",
    "columns": [
      {
        "Column Name": "CostName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name assigned to the Cost. This Cost Name will be automatically indexed to match the indexed (as a result of Enumeration) instances of the relevant Variable Name.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "VariableName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the User-Defined Variable for whose value we wish to incur a cost.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UserDefinedVariables",
        "MasterColumn": "VariableName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost associated with each unit of the specified Variable. This cost will be multiplied by the value of the Variable; thus, the unit basis for this cost depends on the units that describe the Variable.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the Cost exists. If Status is set to Exclude, this Cost will be ignored in the model solve.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "UserDefinedForecasts": {
    "type": "Input",
    "description": "The UserDefinedForecasts table contains configuration settings for custom demand forecasts used in inventory calculations. It defines aggregation strategies and disaggregation levels for forecast data, enabling flexible time-based forecasting approaches for Days of Supply (DOS) calculations.",
    "columns": [
      {
        "Column Name": "ForecastName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "User Defined Forecasts will be used for DOS calculations in the Inventory Policies table for any Facility / Product records that have the DOS Forecast Type set to User-Defined.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the Forecast will exist in the model run. If Status is set to Exclude, the Forecast is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "AggregationStrategy",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Aggregation Strategy will define the level that the Forecast data has been entered in. Forecasts of Daily, Weekly, Monthly or Yearly aggregations will be supported.",
        "Data Type": "[Day, Week, Month, Year]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Day"
      },
      {
        "Column Name": "DisaggregationLevel",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Disaggregation Level will determine how the Forecast data will be spread back out into individual order points. Each of the forecasted buckets will be uniformly distributed across the number of days specified in the Disaggregation Level.",
        "Data Type": "[5 Day Week, 7 Day Week]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "5 Day Week"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "UserDefinedForecastsData": {
    "type": "Input",
    "description": "The UserDefinedForecastsData table contains the actual forecast quantities and dates for user-defined forecasts. It stores specific forecast values with their associated units of measure, providing the detailed data points referenced by the UserDefinedForecasts configuration.",
    "columns": [
      {
        "Column Name": "ForecastName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "User Defined Forecasts will be used for DOS calculations in the Inventory Policies table for any Facility / Product records that have the DOS Forecast Type set to User-Defined.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UserDefinedForecasts",
        "MasterColumn": "ForecastName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Date",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "Date/Time",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ForecastedQuantity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ForecastedQuantityUOM",
        "Required": NaN,
        "RequiredIf": "ForecastedQuantity",
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "UserDefinedVariables": {
    "type": "Input",
    "description": "The UserDefinedVariables table allows users to define custom variables that capture behaviors not directly supported by other constraint tables. These user-defined variables are functions of terms made of native model variables and can be constrained in the UserDefinedConstraints table and incur costs defined in the UserDefinedCosts table. Each custom variable is assigned a name and consists of unique terms that are summed to determine the final variable value.",
    "columns": [
      {
        "Column Name": "VariableName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name assigned to the Variable. Users may define variables in this table to capture behaviors which are not directly supported by other constraint tables. User-Defined Variables are  functions of Terms made of native model variables. User-Defined Variables allow a user to create a detailed expression which is then constrained in the User-Defined Constraints table and/or incurs a cost defined in the User-Defined Costs table.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TermName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unique name assigned to the Variable Term being defined. The Terms associated with a Variable Name will be summed to give the final Variable value.",
        "Data Type": "String - Fixed",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the Term exists. If Status is set to Exclude, this Term will not be included in the Variable.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Coefficient",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The coefficient by which to scale the Term. The default value is one.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "1"
      },
      {
        "Column Name": "Type",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Type of behavior the user wishes to capture via the Term. Terms will be related to each other via their coefficients. If the TermName is referencing a variable which has already been defined (TermName = VariableName) select a type of Variable.",
        "Data Type": "[Flow, Production, Inventory, FlowCount, ProductionCount, InventoryCount, FacilityCount, WorkCenterCount, Variable, Constant]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UOM",
        "Required": NaN,
        "RequiredIf": "Type = Flow OR Production OR Inventory",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Type if Flow, Production, or Inventory is selected. Quantity, Volume, Weight, Shipment, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time (if Type = Flow) or Days of Supply (if Type = Inventory) units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, DaysOfSupply, Shipment, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, DaysOfSupply, Shipment, Quantity-Distance, Volume-Distance, Weight-Distance, Quantity-Time, Volume-Time, Weight-Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "FacilityName",
        "Required": NaN,
        "RequiredIf": "Type = Production OR Inventory OR ProductionCount OR InventoryCount OR FacilityCount OR WorkCenterCount",
        "Engine": "[NEO]",
        "Explanation": "The relevant Facility or Facilities if Type is Production, Production Count, Inventory, Inventory Count, or Facility Count. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "FacilityNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Facility Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this Variable will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group. If you are using multiple terms for a variable, a group behavior entry of enumerate is only supported for one term. Having multiple terms with enumerations is not currently supported.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "OriginName",
        "Required": NaN,
        "RequiredIf": "Type = Flow OR FlowCount",
        "Engine": "[NEO]",
        "Explanation": "The Origin(s) (Facilities and/or Suppliers) of flow if Type is Flow or Flow Count. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities, Suppliers, Sources",
        "MasterColumn": "[Facilities.FacilityName, Suppliers.SupplierName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "OriginNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Origin Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this Variable will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group. If you are using multiple terms for a variable, a group behavior entry of enumerate is only supported for one term. Having multiple terms with enumerations is not currently supported.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "DestinationName",
        "Required": NaN,
        "RequiredIf": "Type = Flow OR FlowCount",
        "Engine": "[NEO]",
        "Explanation": "The Destination(s) (Facilities and/or Customers) of flow if Type is Flow or Flow Count.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Customers, Facilities, Destinations",
        "MasterColumn": "[Customers.CustomerName, Facilities.FacilityName]",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "DestinationNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Destination Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this Variable will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group. If you are using multiple terms for a variable, a group behavior entry of enumerate is only supported for one term. Having multiple terms with enumerations is not currently supported.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ProductName",
        "Required": NaN,
        "RequiredIf": "Type = Flow OR Production OR Inventory OR FlowCount OR ProductionCount OR InventoryCount",
        "Engine": "[NEO]",
        "Explanation": "The relevant Product(s) if Type is Flow, Flow Count, Production, Production Count, Inventory, or Inventory Count. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "ProductNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Product Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this Variable will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group. If you are using multiple terms for a variable, a group behavior entry of enumerate is only supported for one term. Having multiple terms with enumerations is not currently supported.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ModeName",
        "Required": NaN,
        "RequiredIf": "Type = Flow OR FlowCount",
        "Engine": "[NEO]",
        "Explanation": "The relevant Transportation Mode(s) if Type is Flow or Flow Count. Groups are supported. If left empty, all flows will be considered regardless of if a Mode is used. To specifically constrain against flows that do not use a Mode, enter a value of 'None'",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "TransportationModes",
        "MasterColumn": "ModeName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "ModeNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Mode Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this Variable will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group. If you are using multiple terms for a variable, a group behavior entry of enumerate is only supported for one term. Having multiple terms with enumerations is not currently supported.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "WorkCenterName",
        "Required": NaN,
        "RequiredIf": "Type = WorkCenterCount",
        "Engine": "[NEO]",
        "Explanation": "The relevant Work Center if Type = Work Center Count. Groups are supported. If left empty, all productions will be considered regardless of if a Work Center is used. To specifically constrain against productions that do not use a Work Center, enter a value of 'None'",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "WorkCenters",
        "MasterColumn": "WorkCenterName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "WorkCenterNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Work Center Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this Variable will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group. If you are using multiple terms for a variable, a group behavior entry of enumerate is only supported for one term. Having multiple terms with enumerations is not currently supported.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "BOMName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The relevant Bill(s) of Material if Type is Production or Production Count. Groups are supported. If left empty, all productions will be considered regardless of if a BOM is used. To specifically constrain against productions that do not use a BOM, enter a value of 'None'",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BillsOfMaterials",
        "MasterColumn": "BOMName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "BOMNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If BOM Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this Variable will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group. If you are using multiple terms for a variable, a group behavior entry of enumerate is only supported for one term. Having multiple terms with enumerations is not currently supported.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ProcessName",
        "Required": NaN,
        "RequiredIf": "Type = Production OR ProductionCount",
        "Engine": "[NEO]",
        "Explanation": "The relevant Process if Type is Production or Production Count. Groups are supported. If left empty, all productions will be considered regardless of if a Process is used. To specifically constrain against productions that do not use a Process, enter a value of 'None'",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Processes",
        "MasterColumn": "ProcessName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "ProcessNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Process Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this Variable will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group. If you are using multiple terms for a variable, a group behavior entry of enumerate is only supported for one term. Having multiple terms with enumerations is not currently supported.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The relevant Period(s) for any Term Type.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "PeriodNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Period Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this Variable will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group. If you are using multiple terms for a variable, a group behavior entry of enumerate is only supported for one term. Having multiple terms with enumerations is not currently supported.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ConsideredInventory",
        "Required": NaN,
        "RequiredIf": "Type = Inventory",
        "Engine": "[NEO]",
        "Explanation": "The type of inventory that is to be considered when capturing the behavior of the variable.",
        "Data Type": "[Prebuild Only, Turn Estimated Only, Prebuild and Turn Estimated]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Prebuild Only"
      },
      {
        "Column Name": "CountingRule",
        "Required": NaN,
        "RequiredIf": "Type = FlowCount OR InventoryCount OR ProductionCount OR FacilityCount OR WorkCenterCount",
        "Engine": "[NEO]",
        "Explanation": "Facilities: Count the number of unique facilities for Inventory Count, Production Count, Facility Count\nOrigins: Count the number of unique Origins for Flow Count\nDestinations: Count the number of unique Destinations for Flow Count\nProducts: Count the number of unique products for Flow Count, Production Count, Inventory Count\nModes: Count the number of unique modes for Flow Count\nWorkCenters: Count the number of unique Work Centers for Work Center Count\nBOMs: Count the number of unique BOMs for Production Count\nProcesses: Count the number of unique Processes for Production Count\nWorkCenters: Count the number of unique work centers for WorkCenter Count\nPeriods: Count the number of unique periods for Flow Count, Inventory Count, Production Count, Facility Count, Work Center Count\nOrigins-Destinations: Count the number of unique Origin-Destination combinations on which flow occurs for the specified Mode/Product/Period combination.",
        "Data Type": "[Facilities, Origins, Destinations, Products, Modes, WorkCenters, BOMs, Processes, Periods, Origins-Destinations]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "UtilizationRiskConfigurations": {
    "type": "Input",
    "description": "The UtilizationRiskConfigurations table contains information on the weights and risk bands associated with different types of utilization risks (such as Throughput, Storage, and Work Center) for Facilities and Suppliers. These configurations are used to calculate the Utilization Risk Score for each Facility or Supplier based on their specific utilization risk factors. The table links these risk configurations to a specific Risk Profile, which determines how the risk calculations are run using specified source data.",
    "columns": [
      {
        "Column Name": "RiskProfileName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD]",
        "Explanation": "The name of the Risk Profile that the risk configuration is saved for. Risk Profiles are configured to run using specified source data in the Risk Rating Configurations table, and will take the risk weightings and bands associated with the Risk Profile from each of the configuration tables.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskRatingConfigurations",
        "MasterColumn": "RiskProfileName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ThroughputUtilizationRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD]",
        "Explanation": "The weight applied to the Throughput Utilization Risk when calculating the Utilization Risk Score for Facilities and Suppliers.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ThroughputUtilizationRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD]",
        "Explanation": "The Risk Band that is used to evaluate the Throughput Utilization Risk at Facilities and Suppliers. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "BandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "StorageUtilizationRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO]",
        "Explanation": "The weight applied to the Storage Utilization Risk when calculating the Utilization Risk Score for Facilities.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "StorageUtilizationRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO]",
        "Explanation": "The Risk Band that is used to evaluate the Storage Utilization Risk for Facilities. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "BandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "WorkCenterUtilizationRiskWeight",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO]",
        "Explanation": "The weight applied to the Work Center Utilization Risk when calculating the Utilization Risk Score for Facilities.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "WorkCenterUtilizationRiskBand",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[DART, NEO]",
        "Explanation": "The Risk Band that is used to evaluate the Work Center Utilization Risk for Facilities. Risk Bands are defined in the Risk Band Definitions table.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "RiskBandDefinitions",
        "MasterColumn": "BandName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[DART, NEO, TRIAD]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "WarehousingPolicies": {
    "type": "Input",
    "description": "The WarehousingPolicies table contains policy records that define various costs and processes related to handling, stocking, and destocking products at a facility. The table includes fields such as InboundHandlingCost, StockingUnitCost, DestockingUnitCost, OutboundHandlingCost, and related fields for defining the unit costs and processes associated with these activities. The table also includes fields for specifying the behavior of product groups, the status of the policy, the facility and product names to which the policy applies, and additional details such as unit of measure and processing names.",
    "columns": [
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Facility that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Product that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Step Costs are used for Inbound or Outbound Handling Costs, the Product Name Group Behavior field can be used to specify whether or not entries for Product Groups should be evaluated individually or collectively when determining which level of the Step Cost to apply. If Enumerate is selected, all members of the Product Group will be evaluated against the Step Cost individually. If Aggregate is selected, the total inbound/outbound flow over ALL of the Product Group members will be considered when determining which level of the Step Cost to apply.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Enumerate"
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "Status dictates whether or not the policy exists in the model. If Status is set to Exclude, the policy record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "InboundHandlingCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit cost associated with the handling of a Product as it enters a Facility. This field can support a single numeric value, a step cost lookup (defined in the Step Costs table), or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "InboundHandlingCostUOM",
        "Required": NaN,
        "RequiredIf": "InboundHandlingCost",
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit of measure that defines Inbound Handling Cost. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "StockingUnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit cost associated with entering one unit of the Product into inventory at the specified Facility. This field can support a single numeric value, a step cost lookup (defined in the Step Costs table), or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "StockingUnitCostUOM",
        "Required": NaN,
        "RequiredIf": "StockingUnitCost",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that defines Stocking Unit Cost. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "StockingProcessName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Processes table record that can be used to add detail to the stocking logic for the specified Facility/Product combination. This allows us to associate processing times, work center assignments, and work resource assignments with the inventory stocking procedure for the Facility/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Processes",
        "MasterColumn": "ProcessName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DestockingUnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The cost associated with removing a unit of the Product from the Facility's inventory. This field can support a single numeric value, a step cost lookup (defined in the Step Costs table), or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "DestockingUnitCostUOM",
        "Required": NaN,
        "RequiredIf": "DestockingUnitCost",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that defines the Destocking Unit Cost. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "DestockingProcessName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Processes table record that can be used to add detail to the destocking logic for the specified Facility/Product combination. This allows us to associate processing times, Work Center assignments, and Work Resource assignments with the inventory picking procedure for the Facility/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Processes",
        "MasterColumn": "ProcessName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OutboundHandlingCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit cost associated with the handling of a Product as it exits a Facility. This field can support a single numeric value, a step cost lookup (defined in the Step Costs table), or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "OutboundHandlingCostUOM",
        "Required": NaN,
        "RequiredIf": "DestockingUnitCost",
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit of measure that defines Outbound Handling Cost. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "WarehousingPoliciesMultiTimePeriod": {
    "type": "Input",
    "description": "The WarehousingPoliciesMultiTimePeriod table is used to store and manage time-specific policy records related to handling costs for products entering and exiting a facility. This table allows for the customization of handling costs based on specific periods, product groups, and facility locations. Specific fields in this table include information on individual product handling costs, policy statuses, and the evaluation behavior of product name groups when determining step costs.",
    "columns": [
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The period name in which a change is being made. Groups of periods are also supported. Changes that are made in the Multi Time Period table will be applied as overrides for the records of the base table for the specified periods only. Additionally, only the fields that contain information needing to be updated are required to be entered, in the absence of data in the Multi Time Period table the data from the standard table will be persisted",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Facility that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Product that the policy record applies to.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Products",
        "MasterColumn": "ProductName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ProductNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Step Costs are used for Inbound or Outbound Handling Costs, the Product Name Group Behavior field can be used to specify whether or not entries for Product Groups should be evaluated individually or collectively when determining which level of the Step Cost to apply. If Enumerate is selected, all members of the Product Group will be evaluated against the Step Cost individually. If Aggregate is selected, the total inbound/outbound flow over ALL of the Product Group members will be considered when determining which level of the Step Cost to apply.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the multi-time period record exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "PolicyStatus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Policy Status dictates whether or not the policy exists in the model for the specified period(s). If Policy Status is set to Exclude, the policy record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "InboundHandlingCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit cost associated with the handling of a Product as it enters a Facility. This field can support a single numeric value, a step cost lookup (defined in the Step Costs table), or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "InboundHandlingCostUOM",
        "Required": NaN,
        "RequiredIf": "InboundHandlingCost",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Inbound Handling Cost. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "StockingUnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The unit cost associated with storing one unit of the Product at the specified Facility. This field can support a single numeric value, a step cost lookup (defined in the Step Costs table), or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "StockingUnitCostUOM",
        "Required": NaN,
        "RequiredIf": "StockingUnitCost",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Stocking Unit Cost. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "StockingProcessName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Processes table record that can be used to add detail to the stocking logic for the specified Facility/Product combination. This allows us to associate processing times, work center assignments, and work resource assignments with the inbound handling procedure for the Facility/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Processes",
        "MasterColumn": "ProcessName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DestockingUnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The cost associated with removing a unit of the Product from the Facility's inventory. This field can support a single numeric value, a step cost lookup (defined in the Step Costs table), or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "DestockingUnitCostUOM",
        "Required": NaN,
        "RequiredIf": "DestockingUnitCost",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines the Destocking Unit Cost. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "DestockingProcessName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Processes table record that can be used to add detail to the destocking logic for the specified Facility/Product combination. This allows us to associate processing times, Work Center assignments, and Work Resource assignments with the outbound handling procedure for the Facility/Product combination.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Processes",
        "MasterColumn": "ProcessName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OutboundHandlingCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit cost associated with the handling of a Product as it exits a Facility. This field can support a single numeric value, a step cost lookup (defined in the Step Costs table), or a custom cost function.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental, Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OutboundHandlingCostUOM",
        "Required": NaN,
        "RequiredIf": "OutboundHandlingCost",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Outbound Handling Cost. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "WorkCenterCountConstraints": {
    "type": "Input",
    "description": "The table WorkCenterCountConstraints contains constraints related to the counting of open Work Centers in a facility. It includes information such as the status of the constraint, the Work Center(s) being counted, the Facility(s) where the Work Centers are located, the Period(s) in which the Work Centers are open, the type of constraint applied, the constraint value, and the counting rule used. Additionally, it specifies behavior for grouped Work Centers, Facilities, and Periods, and how the constraint should be applied in those cases.",
    "columns": [
      {
        "Column Name": "WorkCenterName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Work Center(s) for which we are counting openings. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "WorkCenters",
        "MasterColumn": "WorkCenterName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "WorkCenterNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Work Center Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Facility or Facilities at which we are counting openings. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "FacilityNameGroupBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Facility Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Period(s) in which we are counting open Work Centers. Groups are supported.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": "ALL"
      },
      {
        "Column Name": "PeriodGroupNameBehavior",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Period Name is a Group, use this field to specify the Group's behavior. If Enumerate is selected, an instance of this constraint will be created for each member of the Group. If Aggregate is selected, the flow in the constraint will be summed over the members of the Group.",
        "Data Type": "[Enumerate, Aggregate]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Aggregate"
      },
      {
        "Column Name": "ConstraintType",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The type of constraint imposed on the count for the specified Work Center/Period combination. \n\nMin: the count must be greater than or equal to the Constraint Value.\nMax: the count must be less than or equal to the Constraint Value.\nFixed: the count must be equal to the Constraint Value.\nFixed With Tolerance: The count must be equal to the Constraint Value * (1 +/- Relative Constraint Tolerance). Relative Constraint Tolerance is specified in the Model Run Options.\nConditional Min: if the count is nonzero, it must be greater than or equal to the Constraint Value.",
        "Data Type": "[Min, Max, Fixed, Fixed With Tolerance, Conditional Min]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ConstraintValue",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The numeric value that the specified count will be evaluated against.",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the constraint exists in the model. If Status is set to Exclude, this constraint (or constraints in the case of Enumerated Groups) will be ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "CountingRule",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "WorkCenters: Count the number of unique Work Centers open during the specified Period(s).\nFacilities: Count the number of unique Facilities at which the specified Work Center can be opened.\nPeriods: Count the number of unique Periods in which the specified Work Center(s) are open.",
        "Data Type": "[WorkCenters, Facilities, Periods]",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "WorkCenterQueueDetails": {
    "type": "Input",
    "description": "The WorkCenterQueueDetails table contains rules and configurations for managing work center production queues. It defines review periods, queueing priority logic, and associated costs for managing production lots at specific facility work centers.",
    "columns": [
      {
        "Column Name": "WorkCenterName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Work Center that the queue logic is applied for",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": NaN,
        "MasterColumn": "WorkCenterName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Facility at which the Work Center is located.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriodFirstTime",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The first Date/Time at which to review the queue for the specified Work Center. Work Center queues will be evaluated using the logic specified in the Priority Logic field. After this Date/Time, the review period length will dictate when Work Center queue reviews occur. If NULL, Review Period First Time will be the start of the simulation.",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time between Work Center queue reviews. After Review Period First Time, a Work Center queue review will occur each time Review Period has elapsed. For example, if Review Period First Time is 1/1/2022 12:00:00 AM and Review Period is six hours, we will conduct reviews on 1/1/2022 at 12:00:00 AM, 6:00:00 AM, 12:00:00 PM, and 6:00:00 PM, continuing similarly until the simulation ends. A Review Schedule defined in the Review Schedules table can be entered by Review Schedule Name in this field as well. If NULL, continuous review is used.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "ReviewSchedules",
        "MasterColumn": "ReviewScheduleName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ReviewPeriodUOM",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines Review Period length.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": NaN,
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "QueueingPriorityLogic",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The logic used for the Work Center when deciding how to arrange process lots in the work center queue. If a value of By Date And Location is selected, the QueuePriority fields in the Customers, Facilities, and Suppliers will be leveraged. If the Advanced Queueing Details table is populated, the override priorities for the Origin, Destination, Product combination will be used",
        "Data Type": "[FIFO, ByDueDateAndLocation, ByDayQueuedAndLocation, ProductionWheel]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "FIFO"
      },
      {
        "Column Name": "QueueingPriorityLogicValue",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The value associated with the given queueing priority logic.  For ProductionWheel this will contain the name of the wheel",
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "ProductionWheelDetails",
        "MasterColumn": "ProductionWheelName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the policy exists in the model. If Status is set to Exclude, the policy record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "TimeInQueueCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The cost associated with an item sitting in a queue. The cost expressed in this field will be charged each time that items sit in a queue for the length of time specified in the Time In Queue Cost UOM field.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "TimeInQueueCostUOM",
        "Required": NaN,
        "RequiredIf": "TimeInQueueCost",
        "Engine": "[]",
        "Explanation": "The unit of measure that time is expressed in terms of.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "WorkCenters": {
    "type": "Input",
    "description": "The WorkCenters table contains information about the work centers within a specified facility, including their status, initial state, throughput capacity, fixed operating costs, startup and closing costs, queue capacities, changeover times, operating schedule, and calendar. Each work center has a unique name and is associated with a specific facility or facility group.",
    "columns": [
      {
        "Column Name": "WorkCenterName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The name of the Work Center. This value can be referenced in other tables involving Work Centers.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "The Facility at which the Work Center will be located. If a Facility Group is used, identical Work Centers will be associated with each Facility in the Group.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "Status dictates whether or not the Work Center will be included in the scenario run. If the Status is set to Exclude, all elements of the Work Center will be ignored and any mentions of the Work Center in other input tables will be ignored as well",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "WorkCenterStatus",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": "Work Center Status dictates whether or not the Work Center is to be actively included in the model. If the Work Center Status is set to Consider, the Work Center may either be opened (Initial State = Potential) or closed (Initial State = Existing) depending on what is optimal. If the Work Center Status is set to be  excluded from the model, any associated closing costs will still be applied and any records for this Work Center in other tables will be ignored.",
        "Data Type": "[Open, Closed, Consider]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Open"
      },
      {
        "Column Name": "InitialState",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Initial State = Existing, the Work Center currently exists in the specified Facility. If Initial State = Potential, the Work Center will be considered for inclusion in the network during the model run.",
        "Data Type": "[Existing, Potential]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Existing"
      },
      {
        "Column Name": "MinimumThroughput",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The minimum throughput of the Work Center. This minimum throughput applies to all periods in the model horizon; period-specific throughput minimums can be defined in the Work Centers Multi Time Period table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "MinimumThroughputUOM",
        "Required": NaN,
        "RequiredIf": "MinimumThroughput",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Minimum Throughput. Quantity, Volume, Weight and Time units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Time, ProcessLot]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Time, ProcessLot]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "ThroughputCapacity",
        "Required": NaN,
        "RequiredIf": "0",
        "Engine": "[NEO, THROG]",
        "Explanation": "The capacity of the Work Center (throughput). This Capacity is applied over each period in the horizon. Period-specific capacities can be defined in the Work Centers Multi Time Period table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ThroughputCapacityUOM",
        "Required": NaN,
        "RequiredIf": "ThroughputCapacity",
        "Engine": "[NEO, THROG]",
        "Explanation": "The unit of measure that defines Throughput Capacity. Quantity, Volume, Weight and Time units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Time, ProcessLot]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Time, ProcessLot]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "ThroughputCapacityPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "For Simulation runs, this field will specify the length of time over which the throughput capacity will be applied. For example, the Throughput Capacity might be set to 500 EA with Capacity Period = 1 and Capacity Period UOM = DAY - this would mean that the Work Center could process no more than 500 units in any day. The first period will be evaluated at the Simulation Start Time, and throughput capacity will be evaluated over the specified period length. Capacity is evaluated over individual capacity periods, a rolling capacity is not considered.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ThroughputCapacityPeriodUOM",
        "Required": NaN,
        "RequiredIf": "ThroughputCapacityPeriod",
        "Engine": "[THROG]",
        "Explanation": "The unit of measure (Type = Time) that defines Throughput Capacity Period.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "FixedOperatingCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The fixed cost associated with operating the Work Center. This field can support a single numeric value or a step cost (entered directly or a lookup of a record in the Step Costs table). If a step cost is used, the Work Center's throughput for each period will be used to determine Fixed Operating Cost.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "FixedStartupCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Status = Consider and Initial State = Potential, the Fixed Startup Cost will be incurred if the Work Center is opened during the model solve. This field can support a single numeric value or a step cost (entered directly or a lookup of a record in the Step Costs table). If a step cost is used, this cost will be determined based on the largest throughput recorded in any of the periods for which the Work Center will be operating once opened.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "FixedClosingCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Status = Consider and Initial State = Existing, the Fixed Closing Cost will be incurred if the Work Center is closed during the model solve. This field can support a single numeric value or a step cost (entered directly or a lookup of a record in the Step Costs table). If a step function is used, this cost will be determined based on the largest throughput recorded in any of the periods for which the Work Center was operating.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "InboundQueueCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The maximum allowable size of the Inbound Queue of the Work Center. If NULL, the capacity of the Inbound Queue is assumed to be infinite. If zero, no Inbound Queue is allowed.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "InboundQueueCapacityUOM",
        "Required": NaN,
        "RequiredIf": "InboundQueueCapacity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Inbound Queue Capacity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, ProcessLot]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, ProcessLot]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "OutboundQueueCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The maximum allowable size of the Outbound Queue of the Work Center. If NULL, the capacity of the Outbound Queue is assumed to be infinite. If zero, no Outbound Queue is allowed.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OutboundQueueCapacityUOM",
        "Required": NaN,
        "RequiredIf": "OutboundQueueCapacity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Outbound Queue Capacity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, ProcessLot]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, ProcessLot]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "ChangeoverName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name for the set of Changeover times that will apply at this Work Center. Changeover times and costs are specified in the Changeover Times table and will be entered as Current Product / Next Product combinations.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "ChangeoverTimes",
        "MasterColumn": "ChangeoverName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OperatingSchedule",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The schedule (defined in the Business Hours table) dictating when the Work Center will be operational. If no schedule is specified, the Work Center is assumed to operate 24 hours per day.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BusinessHours",
        "MasterColumn": "ScheduleName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OperatingCalendar",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The calendar (defined in the Business Calendar table) dictating which days of the year the Work Center will shut down. If no calendar is specified, the Work Center is assumed to be operational every day.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BusinessCalendars",
        "MasterColumn": "CalendarName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedCO2Emissions",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The fixed amount of CO2 Emissions at this Work Center. This can be thought of as the amount of CO2 that needs to be offset for the facility to exist in the network. Variable CO2 Emissions can be defined for specific production or transportation activities in the Production Policy and Transportation Policy tables.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO, THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "WorkCentersMultiTimePeriod": {
    "type": "Input",
    "description": "The WorkCentersMultiTimePeriod table contains information specific to individual Work Centers over multiple time periods. This table allows for the customization of capacities, operating costs, startup costs, and closing costs for each Work Center based on different periods or groups of periods. Additionally, any changes made in this table will override the values in the standard Work Centers table for the specified periods only.",
    "columns": [
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The period name in which a change is being made. Groups of periods are also supported. Changes that are made in the Multi Time Period table will be applied as overrides for the records of the base table for the specified periods only. Additionally, only the fields that contain information needing to be updated are required to be entered, in the absence of data in the Multi Time Period table the data from the standard table will be persisted",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "WorkCenterName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Work Center. This value can be referenced in other tables involving Work Centers.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "WorkCenters",
        "MasterColumn": "WorkCenterName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "FacilityName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Facility at which the Work Center will be located. If a Facility Group is used, identical Work Centers will be associated with each Facility in the Group.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Status dictates whether or not the multi-time period record exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "WorkCenterStatus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "Work Center Status dictates whether or not the Work Center is to be actively included in the model. If the Work Center Status is set to Consider, the Work Center may either be opened (Initial State = Potential) or closed (Initial State = Existing) depending on what is optimal. If the Work Center Status is set to be  excluded from the model, any associated closing costs will still be applied and any records for this Work Center in other tables will be ignored.",
        "Data Type": "[Open, Closed, Consider]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MinimumThroughput",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The minimum throughput of the Work Center for the given period.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "MinimumThroughputUOM",
        "Required": NaN,
        "RequiredIf": "MinimumThroughput",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Minimum Throughput. Quantity, Volume, Weight and Time units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Time, ProcessLot]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Time, ProcessLot]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "ThroughputCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The capacity of the Work Center (throughput). This Capacity applies to the entire model horizon; period-specific capacities can be defined in the Work Centers Multi Time Period table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ThroughputCapacityUOM",
        "Required": NaN,
        "RequiredIf": "ThroughputCapacity",
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that defines Throughput Capacity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Time, ProcessLot]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Time, ProcessLot]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "ThroughputCapacityPeriod",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "For Simulation runs, this field will specify the length of time over which the throughput capacity will be applied. For example, the Throughput Capacity might be set to 500 EA with Capacity Period = 1 and Capacity Period UOM = DAY - this would mean that the Work Center could process no more than 500 units in any day. The first period will be evaluated at the Simulation Start Time, and throughput capacity will be evaluated over the specified period length. Capacity is evaluated over individual capacity periods, a rolling capacity is not considered.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "ThroughputCapacityPeriodUOM",
        "Required": NaN,
        "RequiredIf": "ThroughputCapacityPeriod",
        "Engine": "[]",
        "Explanation": "The unit of measure (Type = Time) that defines Throughput Capacity Period.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryTimeUOM}"
      },
      {
        "Column Name": "FixedOperatingCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "The fixed cost associated with operating the Work Center. This field can support a single numeric value or a step cost (entered directly or a lookup of a record in the Step Costs table). If a step cost is used, the Work Center's throughput for each period will be used to determine Fixed Operating Cost.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedStartupCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Status = Consider and Initial State = Potential, the Fixed Startup Cost will be incurred if the Work Center is opened during the model solve. This field can support a single numeric value or a step cost (entered directly or a lookup of a record in the Step Costs table). If a step cost is used, this cost will be determined based on the largest throughput recorded in any of the periods for which the Work Center will be operating once opened.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedClosingCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": "If Status = Consider and Initial State = Existing, the Fixed Closing Cost will be incurred if the Work Center is closed during the model solve. This field can support a single numeric value or a step cost (entered directly or a lookup of a record in the Step Costs table). If a step function is used, this cost will be determined based on the largest throughput recorded in any of the periods for which the Work Center was operating.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "InboundQueueCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The maximum allowable size of the Inbound Queue of the Work Center. If NULL, the capacity of the Inbound Queue is assumed to be infinite. If zero, no Inbound Queue is allowed.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "InboundQueueCapacityUOM",
        "Required": NaN,
        "RequiredIf": "InboundQueueCapacity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Inbound Queue Capacity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, ProcessLot]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, ProcessLot]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "OutboundQueueCapacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The maximum allowable size of the Outbound Queue of the Work Center. If NULL, the capacity of the Outbound Queue is assumed to be infinite. If zero, no Outbound Queue is allowed.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OutboundQueueCapacityUOM",
        "Required": NaN,
        "RequiredIf": "OutboundQueueCapacity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Outbound Queue Capacity. Quantity, Volume, and Weight units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, ProcessLot]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, ProcessLot]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "ChangeoverName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The name for the set of Changeover times that will apply at this Work Center. Changeover times and costs are specified in the Changeover Times table and will be entered as Current Product / Next Product combinations.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "ChangeoverTimes",
        "MasterColumn": "ChangeoverName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OperatingSchedule",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The schedule (defined in the Business Hours table) dictating when the Work Center will be operational. If no schedule is specified, the Work Center is assumed to operate 24 hours per day.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BusinessCalendars",
        "MasterColumn": "ScheduleName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OperatingCalendar",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The calendar (defined in the Business Calendar table) dictating which days of the year the Work Center will shut down. If no calendar is specified, the Work Center is assumed to be operational every day.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BusinessHours",
        "MasterColumn": "CalendarName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FixedCO2Emissions",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The fixed amount of CO2 Emissions at this Work Center for the given period. This can be thought of as the amount of CO2 that needs to be offset for the facility to exist in the network. Variable CO2 Emissions can be defined for specific production or transportation activities in the Production Policy and Transportation Policy tables.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "WorkResources": {
    "type": "Input",
    "description": "The WorkResources table contains information about production resources available at facilities. It defines resource availability, capacities, costs, operating schedules, and calendars, enabling detailed modeling of production capabilities and constraints.",
    "columns": [
      {
        "Column Name": "WorkResourceName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the Work Resource.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "FacilityName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Facility at which the Work Resource will be located. If a Facility Group is used, identical Work Resources will be associated with each Facility in the Group.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "AvailableUnits",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "The units of the Work Resource available at the specified Facility. If left blank, an infinite amount of resources will be assumed",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": "Status dictates whether or not the Work Resource is included in the model. If Status is set to Consider, the Work Resource may either be included (Type = Potential) or excluded (Type = Existing) depending on what is optimal. If the Work Resource is excluded from the model, it will be dropped from Routing records that reference it.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "Capacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The capacity of the Work Center (throughput or time). This Capacity applies to the entire model horizon; period-specific capacities can be defined in the Work Centers Multi Time Period table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CapacityUOM",
        "Required": NaN,
        "RequiredIf": "Capacity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Throughput Capacity. Quantity, Volume, Weight, and Time units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": NaN,
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The cost associated with completing one unit of work using the Work Resource.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Unit Cost. Quantity, Volume, Weight, and Time units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Time]",
        "Master Table": NaN,
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "FixedOperatingCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The fixed cost associated with operating the Work Resource. This field can support a single numeric value or a step cost (entered directly or a lookup of a record in the Step Costs table). If a step cost is used, the Work Resource's throughput for the entire model horizon will be used to determine Fixed Operating Cost. Period-specific costs can be defined in the Work Centers Multi Time Period table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "0"
      },
      {
        "Column Name": "OperatingSchedule",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The schedule (defined in the Business Hours table) dictating when the Work Resource will be operational. If no schedule is specified, the Work Center is assumed to operate 24 hours per day.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BusinessHours",
        "MasterColumn": "ScheduleName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OperatingCalendar",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The calendar (defined in the Business Calendar table) dictating which days of the year the Work Resource will shut down. If no calendar is specified, the Work Resource is assumed to be operational every day.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BusinessCalendars",
        "MasterColumn": "CalendarName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "WorkResourcesMultiTimePeriod": {
    "type": "Input",
    "description": "The WorkResourcesMultiTimePeriod table contains time-specific modifications to work resource configurations. It defines period-specific changes to resource availability, capacity, costs, and operational schedules, allowing for temporal variations in production capabilities.",
    "columns": [
      {
        "Column Name": "PeriodName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The period name in which a change is being made. Groups of periods are also supported. Changes that are made in the Multi Time Period table will be applied as overrides for the records of the base table for the specified periods only. Additionally, only the fields that contain information needing to be updated are required to be entered, in the absence of data in the Multi Time Period table the data from the standard table will be persisted",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Periods",
        "MasterColumn": "PeriodName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "WorkResourceName",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The name of the Work Resource.",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "WorkResources",
        "MasterColumn": "WorkResourceName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "FacilityName",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The Facility at which the Work Resource will be located. If a Facility Group is used, identical Work Resources will be associated with each Facility in the Group.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "Facilities",
        "MasterColumn": "FacilityName",
        "AllowableUOMTypes": NaN,
        "Expandable": "Yes",
        "Default value": NaN
      },
      {
        "Column Name": "Status",
        "Required": "Yes",
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Status dictates whether or not the multi-time period record exists in the model. If Status is set to Exclude, the record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": "Include"
      },
      {
        "Column Name": "WorkResourceStatus",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "Work Resource Status dictates whether or not the policy exists in the model for the specified period(s). If Work Resource Status is set to Exclude, the policy record is ignored during the model run.",
        "Data Type": "[Include, Exclude]",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "AvailableUnits",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The units of the Work Resource available at the specified Facility.",
        "Data Type": "int",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Capacity",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The capacity of the Work Center (throughput or time). This Capacity applies to the entire model horizon; period-specific capacities can be defined in the Work Centers Multi Time Period table.",
        "Data Type": "double",
        "Primary Key": NaN,
        "Validation Type": "NonNegative",
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "CapacityUOM",
        "Required": NaN,
        "RequiredIf": "Capacity",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Throughput Capacity. Quantity, Volume, Weight, and Time units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "UnitCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The cost associated with completing one unit of work using the Work Resource.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [All Item, Incremental]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "UnitCostUOM",
        "Required": NaN,
        "RequiredIf": "UnitCost",
        "Engine": "[]",
        "Explanation": "The unit of measure that defines Unit Cost. Quantity, Volume, Weight, and Time units of measure are supported.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE UnitsOfMeasure.Type = [Quantity, Volume, Weight, Time]",
        "Master Table": "UnitsOfMeasure",
        "MasterColumn": "Symbol",
        "AllowableUOMTypes": "[Quantity, Volume, Weight, Time]",
        "Expandable": NaN,
        "Default value": "{PrimaryQuantityUOM}"
      },
      {
        "Column Name": "FixedOperatingCost",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The fixed cost associated with operating the Work Resource. This field can support a single numeric value or a step cost (entered directly or a lookup of a record in the Step Costs table). If a step cost is used, the Work Resource's throughput for the entire model horizon will be used to determine Fixed Operating Cost. Period-specific costs can be defined in the Work Centers Multi Time Period table.",
        "Data Type": "Cost Time Expression",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable WHERE StepCosts.StepCostBehavior = [Stepwise]",
        "Master Table": "StepCosts",
        "MasterColumn": "StepCostName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OperatingSchedule",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The schedule (defined in the Business Hours table) dictating when the Work Resource will be operational. If no schedule is specified, the Work Center is assumed to operate 24 hours per day.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BusinessHours",
        "MasterColumn": "ScheduleName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "OperatingCalendar",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": "The calendar (defined in the Business Calendar table) dictating which days of the year the Work Resource will shut down. If no calendar is specified, the Work Resource is assumed to be operational every day.",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Validation Type": "ExistsInMasterTable",
        "Master Table": "BusinessCalendars",
        "MasterColumn": "CalendarName",
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      },
      {
        "Column Name": "Notes",
        "Required": NaN,
        "RequiredIf": NaN,
        "Engine": "[]",
        "Explanation": NaN,
        "Data Type": "String",
        "Primary Key": NaN,
        "Validation Type": NaN,
        "Master Table": NaN,
        "MasterColumn": NaN,
        "AllowableUOMTypes": NaN,
        "Expandable": NaN,
        "Default value": NaN
      }
    ]
  },
  "OptimizationBillsOfMaterialSummary": {
    "type": "Output",
    "description": "The table OptimizationBillsOfMaterialSummary contains summarized information related to Bills of Material (BOM) optimization. It includes details such as the quantity, volume, and weight of products consumed or produced through the BOM, along with the corresponding unit of measures. Additionally, the table provides information on the location of the facility where the BOM was consumed, the name of the scenario and time period the results are saved for, the name of the BOM, facility, and product involved, as well as the type of product (Component, Byproduct, or End Product). This table is likely used to track and analyze the efficiency and effectiveness of BOM usage for optimization purposes.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "PeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The time period that the results are reported for."
      },
      {
        "Column Name": "BOMName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the Bill Of Material."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the Facility where the Bill Of Material was used in production."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The product that is being consumed or created through this Bill of Material."
      },
      {
        "Column Name": "ProductType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "One of either Component, Byproduct or End Product. This field defines what purpose the specified product served in this Bill of Material."
      },
      {
        "Column Name": "BOMQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The quantity of the product that was either consumed or produced through this Bill of Material."
      },
      {
        "Column Name": "BOMQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the quantity is expressed in terms of."
      },
      {
        "Column Name": "BOMVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The volume of the product that was either consumed or produced through this Bill of Material."
      },
      {
        "Column Name": "BOMVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the volume is expressed in terms of."
      },
      {
        "Column Name": "BOMWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The weight of the product that was either consumed or produced through this Bill of Material."
      },
      {
        "Column Name": "BOMWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the weight is expressed in terms of."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The latitude of the Facility where the BOM has been consumed."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The longitude of the Facility where the BOM has been consumed."
      }
    ]
  },
  "OptimizationCO2EmissionsSummary": {
    "type": "Output",
    "description": "The OptimizationCO2EmissionsSummary table contains aggregated results of CO2 emissions across the supply chain network. It tracks emissions and associated costs from various sources including fixed facilities, transportation, production, and supply activities for each scenario and time period.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "PeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The time period that the results are reported for."
      },
      {
        "Column Name": "TotalCO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total CO2 emissions across the network for this period."
      },
      {
        "Column Name": "TotalCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to CO2 Emissions across the network for this period."
      },
      {
        "Column Name": "TotalFixedCO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total fixed CO2 emissions across the network for this period. This is specified as the total of Fixed CO2 Emissions at all Facilities and Work Centers."
      },
      {
        "Column Name": "FixedCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost attributed to Fixed CO2 Emissions across the network for this period."
      },
      {
        "Column Name": "TotalTransportationCO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total CO2 emissions attributed to transport across the network for this period. This is taken as the total CO2 Emissions from the Optimization Flow Summary table."
      },
      {
        "Column Name": "TotalTransportationCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to CO2 emissions of transport across the network for this period."
      },
      {
        "Column Name": "TotalProductionCO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total CO2 emissions attributed to production across the network for this period. This is taken as the total CO2 Emissions from the Optimization Production Summary table."
      },
      {
        "Column Name": "TotalProductionCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to CO2 emissions of production at this Work Center."
      },
      {
        "Column Name": "TotalSupplyCO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total CO2 emissions attributed to supply across the network for this period. This is taken as the total CO2 Emissions from the Optimization Supply Summary table."
      },
      {
        "Column Name": "TotalSupplyCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to CO2 emissions of supply across the network for this period."
      }
    ]
  },
  "OptimizationConstraintSummary": {
    "type": "Output",
    "description": "The OptimizationConstraintSummary table provides a summary of constraints used in an optimization model. It includes details such as the names of different elements (Period, Facility, Origin, Destination, Product, Mode, Process, Work Center, BOM), the type and value of constraints, the resulting activity, slack percentage, constraint violation, suggested constraint value, scenario name, and the assigned name of the constraint by the optimization solver. This table helps users track and analyze how constraints are affecting the optimization results.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ConstraintName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name assigned to the constraint by the optimization solver. Depending on the type of constraint, only applicable fields will be populated with the constraint details that apply."
      },
      {
        "Column Name": "PeriodName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Period."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Facility."
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Origin location."
      },
      {
        "Column Name": "DestinationName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Destination location."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Product."
      },
      {
        "Column Name": "ModeName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Mode."
      },
      {
        "Column Name": "ProcessName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Process."
      },
      {
        "Column Name": "WorkCenterName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Work Center."
      },
      {
        "Column Name": "BOMName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the BOM."
      },
      {
        "Column Name": "ConstraintType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The type of Constraint, one of Min, Max, Fixed, or Conditional Min"
      },
      {
        "Column Name": "ConstraintValue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The requirement of the Constraint. This is the populated Constraint value field of the corresponding constraint table."
      },
      {
        "Column Name": "ConstraintActivity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The resulting activity of the constraint will be reported here."
      },
      {
        "Column Name": "SlackPercentage",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Slack Percentage will show how close the constraints were to being binding. For a Constraint Type of Max, the percentage will be reported as Constraint Activity / Constraint Value."
      },
      {
        "Column Name": "ConstraintViolation",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "If a model is infeasible and constraints must be relaxed, the Constraint Violation field will show how much the constraint had to be relaxed for a feasible solution to be obtained."
      },
      {
        "Column Name": "SuggestedConstraintValue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "If a model is infeasible and constraints must be relaxed, the Suggest Constraint Value will show what the constraint value must be adjusted to for a feasible solution to be obtained."
      }
    ]
  },
  "OptimizationCostToServeParentInformationReport": {
    "type": "Output",
    "description": "The table contains information on the cost to serve for different parent nodes in an optimization scenario. It includes details on the quantity, ratio, and names of the parent and current nodes involved, as well as the scenario the results are saved for.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ParentActivityType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": NaN
      },
      {
        "Column Name": "ParentSiteName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": NaN
      },
      {
        "Column Name": "ParentProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": NaN
      },
      {
        "Column Name": "ParentPeriodName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN
      },
      {
        "Column Name": "CurrentActivityType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": NaN
      },
      {
        "Column Name": "CurrentSiteName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": NaN
      },
      {
        "Column Name": "CurrentProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": NaN
      },
      {
        "Column Name": "CurrentPeriodName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN
      },
      {
        "Column Name": "ParentNodeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN
      },
      {
        "Column Name": "Quantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN
      },
      {
        "Column Name": "Ratio",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN
      },
      {
        "Column Name": "SegmentCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": NaN
      }
    ]
  },
  "OptimizationCostToServePathSegmentDetails": {
    "type": "Output",
    "description": "The OptimizationCostToServePathSegmentDetails table contains detailed cost breakdowns for individual segments within supply chain paths. It tracks comprehensive cost components including transportation, handling, storage, and operational costs for each segment of product movement through the network.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "PathId",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "A unique identifier for each path."
      },
      {
        "Column Name": "PathStartPeriodName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The name of the start period for the path."
      },
      {
        "Column Name": "PathEndPeriodName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The name of the end period for the path."
      },
      {
        "Column Name": "PathProductName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The name of the product associated with the path."
      },
      {
        "Column Name": "PathOrigin",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The origin point of the path."
      },
      {
        "Column Name": "PathOriginType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The type or category of the origin point (e.g. supplier, facility)."
      },
      {
        "Column Name": "PathDestination",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The destination point of the path."
      },
      {
        "Column Name": "PathDestinationType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The type of the destination point (e.g. customer location)."
      },
      {
        "Column Name": "SegmentSequence",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The sequence number of the segment within the path."
      },
      {
        "Column Name": "SegmentOrigin",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The origin point of the segment."
      },
      {
        "Column Name": "SegmentDestination",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The destination point of the segment."
      },
      {
        "Column Name": "SegmentType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The type or category of the segment (e.g., flow, production, inventory)."
      },
      {
        "Column Name": "SegmentProductName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The name of the product associated with the segment."
      },
      {
        "Column Name": "SegmentStartPeriodName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The name of the start period for the segment."
      },
      {
        "Column Name": "SegmentEndPeriodName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The name of the end period for the segment."
      },
      {
        "Column Name": "SegmentQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The quantity associated with the segment."
      },
      {
        "Column Name": "DemandQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The demand quantity for the product associated with the segment."
      },
      {
        "Column Name": "BomName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The name of the Bill of Materials (BOM) associated with the segment."
      },
      {
        "Column Name": "ProcessName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The name of the process associated with the segment."
      },
      {
        "Column Name": "ModeName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The name of the mode associated with the segment."
      },
      {
        "Column Name": "SegmentCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The cost associated with the segment."
      },
      {
        "Column Name": "SegmentRevenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The revenue associated with the segment."
      },
      {
        "Column Name": "SegmentTransportationCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The transportation cost associated with the segment."
      },
      {
        "Column Name": "SegmentShipmentCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The shipment cost associated with the segment."
      },
      {
        "Column Name": "SegmentFuelSurchargeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The fuel surcharge cost associated with the segment."
      },
      {
        "Column Name": "SegmentDutyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The duty cost associated with the segment."
      },
      {
        "Column Name": "SegmentInTransitHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The in-transit holding cost associated with the segment."
      },
      {
        "Column Name": "SegmentSourcingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The sourcing cost associated with the segment."
      },
      {
        "Column Name": "SegmentProductionCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The production cost associated with the segment."
      },
      {
        "Column Name": "SegmentProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The process cost associated with the segment."
      },
      {
        "Column Name": "SegmentSupplyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The Supply Cost associated with the segment"
      },
      {
        "Column Name": "SegmentInboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The inbound handling cost associated with the segment."
      },
      {
        "Column Name": "SegmentOutboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The outbound handling cost associated with the segment."
      },
      {
        "Column Name": "SegmentPrebuildHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The prebuild holding cost associated with the segment."
      },
      {
        "Column Name": "SegmentTurnEstimatedHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The estimated holding cost associated with the segment."
      },
      {
        "Column Name": "SegmentStorageCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The storage cost associated with the segment."
      },
      {
        "Column Name": "SegmentFacilityFixedOperatingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The facility fixed operating cost associated with the segment."
      },
      {
        "Column Name": "SegmentFacilityFixedStartupCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The facility fixed startup cost associated with the segment."
      },
      {
        "Column Name": "SegmentFacilityFixedClosingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The facility fixed closing cost associated with the segment."
      },
      {
        "Column Name": "SegmentWorkCenterFixedOperatingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The work center fixed operating cost associated with the segment."
      },
      {
        "Column Name": "SegmentWorkCenterFixedStartupCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The work center fixed startup cost associated with the segment."
      },
      {
        "Column Name": "SegmentWorkCenterFixedClosingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The work center fixed closing cost associated with the segment."
      },
      {
        "Column Name": "SegmentUserDefinedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The user-defined cost associated with the segment."
      },
      {
        "Column Name": "SegmentCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The cost associated with CO2 emissions for the segment."
      }
    ]
  },
  "OptimizationCostToServePathSummary": {
    "type": "Output",
    "description": "The OptimizationCostToServePathSummary table contains aggregated cost information for complete supply chain paths. It summarizes total costs, revenues, and various cost components for entire paths from origin to destination, providing high-level cost-to-serve analytics.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "PathId",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[]",
        "Explanation": "The unique identifier for the path."
      },
      {
        "Column Name": "PathOrigin",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The origin of the path."
      },
      {
        "Column Name": "PathDestination",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The destination of the path."
      },
      {
        "Column Name": "PathDemandQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The demand quantity for the path."
      },
      {
        "Column Name": "PathProductName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The product name associated with the path."
      },
      {
        "Column Name": "PathCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The total cost of the path."
      },
      {
        "Column Name": "PathRevenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The total revenue for the path."
      },
      {
        "Column Name": "PathTransportationCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The transportation cost associated with the path."
      },
      {
        "Column Name": "PathShipmentCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The shipment cost associated with the path."
      },
      {
        "Column Name": "PathFuelSurchargeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The fuel surcharge cost associated with the path."
      },
      {
        "Column Name": "PathDutyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The duty cost associated with the path."
      },
      {
        "Column Name": "PathInTransitHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The in-transit holding cost associated with the path."
      },
      {
        "Column Name": "PathSourcingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The sourcing cost associated with the path."
      },
      {
        "Column Name": "PathProductionCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The production cost associated with the path."
      },
      {
        "Column Name": "PathProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The process cost associated with the path."
      },
      {
        "Column Name": "PathSupplyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The Supply Cost associated with the path."
      },
      {
        "Column Name": "PathInboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The inbound handling cost associated with the path."
      },
      {
        "Column Name": "PathOutboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The outbound handling cost associated with the path."
      },
      {
        "Column Name": "PathPrebuildHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The prebuild holding cost associated with the path."
      },
      {
        "Column Name": "PathTurnEstimatedHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The estimated holding cost associated with the path."
      },
      {
        "Column Name": "PathStorageCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The storage cost associated with the path."
      },
      {
        "Column Name": "PathFacilityFixedOperatingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The fixed operating cost of the facility associated with the path."
      },
      {
        "Column Name": "PathFacilityFixedStartupCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The fixed startup cost of the facility associated with the path."
      },
      {
        "Column Name": "PathFacilityFixedClosingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The fixed closing cost of the facility associated with the path."
      },
      {
        "Column Name": "PathWorkCenterFixedOperatingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The fixed operating cost of the work center associated with the path."
      },
      {
        "Column Name": "PathWorkCenterFixedStartupCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The fixed startup cost of the work center associated with the path."
      },
      {
        "Column Name": "PathWorkCenterFixedClosingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The fixed closing cost of the work center associated with the path."
      },
      {
        "Column Name": "PathUserDefinedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The user-defined cost associated with the path."
      },
      {
        "Column Name": "PathCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The cost associated with CO2 emissions for the path."
      }
    ]
  },
  "OptimizationCostToServeSummary": {
    "type": "Output",
    "description": "The OptimizationCostToServeSummary table provides a summarized view of the cost to serve information for different products and customer locations or facilities. It includes data such as total cost, total revenue, quantity served, cost per unit, revenue per unit, and various breakdowns of costs associated with serving a specific product to a specific site. Additionally, it includes information on the scenario, time period, site type, product name, and geographical location of the customer. The table aims to optimize the cost to serve operations by providing detailed insights into the various cost components and efficiencies related to product distribution.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "PeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The time period that the results are reported for."
      },
      {
        "Column Name": "SiteName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The Customer that Cost To Serve information is being reported for. In the cases where ending inventory exists at a Facility at the end of the model horizon, Facilities can also be reported."
      },
      {
        "Column Name": "SiteType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The type of site, either Customer or Facility, of the listed Site Name. Facilities can be listed in the Cost To Serve table if there is ending inventory at the Facility for the last period of the model."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The Product that Cost To Serve information is being reported for."
      },
      {
        "Column Name": "Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost to serve the reported quantity of the listed product to the listed site."
      },
      {
        "Column Name": "Revenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total revenue generated by serving the reported quantity of the listed product to the listed customer location."
      },
      {
        "Column Name": "Quantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The quantity of product that was served to the listed Site / Product combination."
      },
      {
        "Column Name": "PerUnitCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost per unit to serve the listed product / site combination."
      },
      {
        "Column Name": "PerUnitRevenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The revenue per unit generated for the listed product / site combination."
      },
      {
        "Column Name": "PerUnitTransportationCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit Transportation Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitShipmentCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit Shipment Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitFuelSurchargeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit Fuel Surcharge Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitDutyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit Duty Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitInTransitHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit In Transit Holding Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitSourcingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit Sourcing Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitProductionCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit Production Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit Process Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitSupplyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The per unit Supply Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitInboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit Inbound Handling Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitOutboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit Outbound Handling Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitPrebuildHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit Prebuild Holding Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitTurnEstimatedHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit Turn Estimated Holding Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitStorageCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit Storage Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitFacilityFixedOperatingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit Facility Fixed Operating Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitFacilityFixedStartupCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit Facility Fixed Startup Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitFacilityFixedClosingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit Facility Fixed Closing Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitWorkCenterFixedOperatingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit Work Center Fixed Operating Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitWorkCenterFixedStartupCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit Work Center Fixed Startup Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitWorkCenterFixedClosingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit Work Center Fixed Closing Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitUserDefinedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit User Defined Cost associated with serving the product / site combination."
      },
      {
        "Column Name": "PerUnitCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit cost associated with CO2 Emissions to serve the product / site combination."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The latitude of the Customer."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The longitude of the Customer."
      }
    ]
  },
  "OptimizationCustomerRiskMetrics": {
    "type": "Output",
    "description": "The OptimizationCustomerRiskMetrics table provides a detailed overview of the risk metrics associated with each Customer in the model. This includes the Customer's risk score, concentration risk, source count risk, geographic risk, and user-defined risk. The table also includes the latitude and longitude of each Customer, as well as the scenario name and risk rating name for which the risk metrics are reported.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "CustomerName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the Customer."
      },
      {
        "Column Name": "CustomerRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk score associated with this Customer. This is based on a weighted average of the Concentration Risk, Source Count Risk, Geographic Risk and the User Defined Risk of the Customer across the entire model horizon.  The Customer Risk Score is used to calculate the overall Risk Score in the Optimization Risk Metrics Summary table."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated the with the demand concentration at the Customer location. This is reported as a weighted average over all Periods based off of the Concentration Risk in the Optimization Customer Summary table."
      },
      {
        "Column Name": "SourceCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the number of sources that the Customer uses across all products. This is reported as a weighted average over all Periods based off of the Source Count Risk in the Optimization Customer Summary table."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the geographic location of the Customer. This is a weighted average of several geographic components that are reported in greater detail in the Optimization Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Customers table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The latitude of the Customer."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The longitude of the Customer."
      }
    ]
  },
  "OptimizationCustomerSummary": {
    "type": "Output",
    "description": "The OptimizationCustomerSummary table provides a summary of key information related to customer demand, revenue, risk scores, and geographic location for each customer included in the optimization scenario. This table includes data such as total demand quantity, volume, and weight, as well as served and unserved demand quantities. It also includes information on total revenue generated by each customer, their risk score, and their geographic location specified by latitude and longitude coordinates. Additionally, the table includes details such as the scenario name and period name for which the results are reported.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "PeriodName",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The time period that the results are reported for."
      },
      {
        "Column Name": "CustomerName",
        "Data Type": "Name",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the Customer."
      },
      {
        "Column Name": "TotalOriginalDemandQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total of the input demand quantity for the Customer across all products. This is specified in the Customer Demand input table and will be the sum of all demand records that are included at the Customer."
      },
      {
        "Column Name": "TotalServedDemandQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The total of the served demand quantity for the Customer across all products. This is calculated based on the sum of all served demand quantity for the Customer reported in the Optimization Demand Summary table."
      },
      {
        "Column Name": "TotalUnservedDemandQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total of the unserved demand quantity for the Customer across all products. This is calculated based on the sum of all unserved demand quantity for the Customer reported in the Optimization Demand Summary table."
      },
      {
        "Column Name": "DemandQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that quantity is expressed in terms of."
      },
      {
        "Column Name": "TotalOriginalDemandVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total of the input demand volume for the Customer across all products. This is specified in the Customer Demand input table and will be the sum of all demand records that are included at the Customer."
      },
      {
        "Column Name": "TotalServedDemandVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total of the served demand volume for the Customer across all products. This is calculated based on the sum of all served demand volume for the Customer reported in the Optimization Demand Summary table."
      },
      {
        "Column Name": "TotalUnservedDemandVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total of the unserved demand volume for the Customer across all products. This is calculated based on the sum of all unserved demand volume for the Customer reported in the Optimization Demand Summary table."
      },
      {
        "Column Name": "DemandVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that volume is expressed in terms of."
      },
      {
        "Column Name": "TotalOriginalDemandWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total of the input demand weight for the Customer across all products. This is specified in the Customer Demand input table and will be the sum of all demand records that are included at the Customer."
      },
      {
        "Column Name": "TotalServedDemandWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total of the served demand weight for the Customer across all products. This is calculated based on the sum of all served demand weight for the Customer reported in the Optimization Demand Summary table."
      },
      {
        "Column Name": "TotalUnservedDemandWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total of the unserved demand weight for the Customer across all products. This is calculated based on the sum of all unserved demand weight for the Customer reported in the Optimization Demand Summary table."
      },
      {
        "Column Name": "DemandWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that weight is expressed in terms of."
      },
      {
        "Column Name": "TotalRevenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total revenue associated with this Customer. This is calculated based on the sum of all reported revenue for the Customer in the Optimization Demand Summary table."
      },
      {
        "Column Name": "TotalUnservedDemandPenaltyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total penalty cost associated with unserved demand records at this Customer."
      },
      {
        "Column Name": "CustomerRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk score associated with this Customer / Period. This is based on a weighted average of the Concentration Risk, Source Count Risk, Geographic Risk and User Defined Risk of the Customer."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated the with the demand concentration at the Customer location. This is reported as a weighted average based off of the Concentration Risk over all Products in the Optimization Demand Summary table."
      },
      {
        "Column Name": "SourceCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the number of sources that the Customer uses across all products. This is reported as a weighted average based off of the Source Count Risk over all Products in the Optimization Demand Summary table."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the geographic location of the Customer. This is a weighted average of several geographic components that are reported in greater detail in the Optimization Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Customers table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The latitude of the Customer."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The longitude of the Customer."
      }
    ]
  },
  "OptimizationDemandOriginSummary": {
    "type": "Output",
    "description": "The OptimizationDemandOriginSummary table contains results of demand fulfillment patterns and origin locations. It tracks customer demand quantities, volumes, and weights along with their fulfillment sources and geographic locations for analysis of demand-supply relationships.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "PeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The time period that the results are reported for."
      },
      {
        "Column Name": "CustomerName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the customer."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the product."
      },
      {
        "Column Name": "ProductOriginLocation",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "If the Product Origin Location field was populated for the given Customer / Product / Period in the Customer Demand Origin Policies table, this will report the path origin for the product. If there was not an entry in the Customer Demand Origin Policies table, this will be blank."
      },
      {
        "Column Name": "DemandQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The demand quantity as specified in the Customer Demand Origin Policies table. Multiple quantities can be defined for a given Customer / Product / Period combination if there are multiple origin location requirements."
      },
      {
        "Column Name": "DemandQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the quantity is expressed in terms of."
      },
      {
        "Column Name": "DemandVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The demand volume as specified in the Customer Demand table. In the event of multiple demand records for a Customer / Product / Period combination, the demand will be summed into one single demand record."
      },
      {
        "Column Name": "DemandVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the volume is expressed in terms of."
      },
      {
        "Column Name": "DemandWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The demand weight as specified in the Customer Demand table. In the event of multiple demand records for a Customer / Product / Period combination, the demand will be summed into one single demand record."
      },
      {
        "Column Name": "DemandWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the weight is expressed in terms of."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The customer latitude."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The customer longitude."
      }
    ]
  },
  "OptimizationDemandSummary": {
    "type": "Output",
    "description": "The OptimizationDemandSummary table provides a summary of key metrics related to demand, including quantities, volumes, weights, revenue, costs, and risk factors for each Customer / Product / Period combination. It includes information on original demand, served demand, unserved demand, and associated risks, as well as geographic and user-defined risk factors. This table helps track and analyze demand fulfillment, revenue generation, cost implications, and risk assessment for different scenarios and time periods.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "PeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The time period that the results are reported for."
      },
      {
        "Column Name": "CustomerName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the customer."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the product."
      },
      {
        "Column Name": "ServiceMode",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the product."
      },
      {
        "Column Name": "DemandStatus",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The status of the demand record, one of Include, Exclude, or Consider."
      },
      {
        "Column Name": "OriginalDemandQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The demand quantity as specified in the Customer Demand table. In the event of multiple demand records for a Customer / Product / Period combination, the demand will be summed into one single demand record."
      },
      {
        "Column Name": "ServedDemandQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The amount of demand served for the Customer / Product / Period combination."
      },
      {
        "Column Name": "UnservedDemandQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The amount of demand that was unserved for the Customer / Product / Period combination."
      },
      {
        "Column Name": "DemandQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the quantity is expressed in terms of."
      },
      {
        "Column Name": "OriginalDemandVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The demand volume as specified in the Customer Demand table. In the event of multiple demand records for a Customer / Product / Period combination, the demand will be summed into one single demand record."
      },
      {
        "Column Name": "ServedDemandVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The amount of demand served for the Customer / Product / Period combination."
      },
      {
        "Column Name": "UnservedDemandVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The amount of demand that was unserved for the Customer / Product / Period combination."
      },
      {
        "Column Name": "DemandVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the volume is expressed in terms of."
      },
      {
        "Column Name": "OriginalDemandWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The demand weight as specified in the Customer Demand table. In the event of multiple demand records for a Customer / Product / Period combination, the demand will be summed into one single demand record."
      },
      {
        "Column Name": "ServedDemandWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The amount of demand served for the Customer / Product / Period combination."
      },
      {
        "Column Name": "UnservedDemandWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The amount of demand that was unserved for the Customer / Product / Period combination."
      },
      {
        "Column Name": "DemandWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the weight is expressed in terms of."
      },
      {
        "Column Name": "UnservedDemandPenaltyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The penalty cost associated with the unserved demand at the Customer / Product / Period combination."
      },
      {
        "Column Name": "Revenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The revenue associated with the served demand at the Customer / Product / Period combination. Revenue is calculated as Demand Served * Product Price."
      },
      {
        "Column Name": "CostToServe",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The landed cost associated with the served demand at the Customer / Product / Period combination."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The Concentration Risk score associated with this Customer / Product / Period combination. Concentration Risk is based on what portion of the total demand for the Customer / Period combination the listed product represents. This will contribute to the model's Customer Risk score."
      },
      {
        "Column Name": "SourceCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The Source Count Risk metric associated with this Product for the Customer/ Product / Period combination. Source Count Risk is determined based on the number of unique sources that are used to satisfy the demand records at this Customer / Period combination for the listed product. This will contribute to the model's Customer Risk Score."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the geographic location of the Customer. This is a weighted average of several geographic components that are reported in greater detail in the Optimization Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Customers table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The customer latitude."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The customer longitude."
      }
    ]
  },
  "OptimizationFacilityCostToServeSummary": {
    "type": "Output",
    "description": "The table OptimizationFacilityCostToServeSummary provides a summary of cost-to-serve information for different facilities and products in a supply chain optimization scenario. This includes details on costs such as transportation, production, handling, and facility operating costs, as well as location coordinates, scenario name, time period, facility name, product name, and activity type. This table is used to analyze and optimize cost-to-serve metrics in the supply chain network.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the scenario the results are saved for.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The time period that the results are reported for.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The Facility location that Cost To Serve information is being reported for.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The Product that Cost To Serve information is being reported for.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "ActivityType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The type of activity that is captured at the listed Facility / Product combination.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The landed cost for the listed Product to reach the Facility. This is the total cost of all previous activities but does not include the cost of the current activity",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "Quantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The amount of the listed Product that is treated as inbound flow to the node.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed cost for the listed Product to reach the Facility. This is the total per-unit cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitTransportationCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed transportation cost for the listed Product to reach the Facility. This is the total per-unit cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitShipmentCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed shipment cost for the listed Product to reach the Facility. This is the total per-unit cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitInTransitHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed in transit holding cost for the listed Product to reach the Facility. This is the total in-holding cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitDutyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed duty cost for the listed Product to reach the Facility. This is the total per-unit cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitProductionCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed production cost for the listed Product to reach the Facility. This is the total per-unit cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitPrebuildHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed prebuild holding cost for the listed Product to reach the Facility. This is the total prebuild-holding cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitTurnEstimatedHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed turn estimated holding cost for the listed Product to reach the Facility. This is the total turn-holding cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitStorageCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed storage cost for the listed Product to reach the Facility. This is the total per-unit cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitSourcingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed sourcing cost for the listed Product to reach the Facility. This is the total per-unit cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitFacilityFixedOperatingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed facility fixed operating cost for the listed Product to reach the Facility. This is the total facility-operating cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitFacilityFixedStartupCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed facility fixed startup cost for the listed Product to reach the Facility. This is the total facility-startup cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitFacilityFixedClosingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed facility fixed closing cost for the listed Product to reach the Facility. This is the total facility-closing cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitWorkCenterFixedOperatingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed workcenter fixed operating cost for the listed Product to reach the Facility. This is the total facility-closing cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitWorkCenterFixedStartupCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed workcenter fixed startup cost for the listed Product to reach the Facility. This is the total facility-closing cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitWorkCenterFixedClosingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed workcenter fixed closing cost for the listed Product to reach the Facility. This is the total facility-closing cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitSupplyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The Supply Cost associated with the path. This is the total inbound-handling cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitInboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The inbound handling landed cost for the listed Product to reach the Facility. This is the total inbound-handling cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitOutboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The outbound handling landed cost for the listed Product to reach the Facility. This is the total outbound-handling cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": "Yes",
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed process cost for the listed Product to reach the Facility. This is the total per-unit cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitUserDefinedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed user defined cost for the listed Product to reach the Facility. This is the total user-defined cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "PerUnitCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The per unit landed cost of CO2 emissions for the listed Product to reach the Facility. This is the total CO2 cost of all previous activities but does not include the cost of the current activity.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The latitude of the Facility.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The longitude of the Facility.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      }
    ]
  },
  "OptimizationFacilityRiskMetrics": {
    "type": "Output",
    "description": "The OptimizationFacilityRiskMetrics table contains detailed information about the risk scores associated with individual facilities. It includes the Facility Risk Score, Concentration Risk, Source Count Risk, Utilization Risk, Geographic Risk, and User Defined Risk for each facility. These risk metrics are used to calculate the overall Risk Score in the Risk Metrics Summary table and provide insights into the potential risks associated with each facility in the model.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the Facility."
      },
      {
        "Column Name": "FacilityRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk score associated with this Facility. This is based on a weighted average of the Facility's Concentration, Source Count, Utilization, Geographic and User Defined Risk across the entire model horizon.  The Facility Risk Score is used to calculate the overall Risk Score in the Risk Metrics Summary table."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the throughput concentration of the Facility. This is reported as a weighted average over all periods based off of the Concentration Risk in the Optimization Facility Summary table."
      },
      {
        "Column Name": "SourceCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the number of sources that the Facility uses across all products and periods. This is reported as a weighted average based off of the Source Count Risk in the Optimization Facility Summary table.  Using fewer sources results in higher risk."
      },
      {
        "Column Name": "UtilizationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with how close to capacity the Facility is during the model solve. This is calculated as the weighted average of Storage Capacity Risk, Throughput Capacity Risk, and the Work Center Capacity Risk. Additional details can be found in the Optimization Capacity Risk Metrics table."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the geographic location of the Facility. This is a weighted average of several geographic components that are reported in greater detail in the Optimization Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Facilities table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The latitude of the Facility."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The longitude of the Facility."
      }
    ]
  },
  "OptimizationFacilitySummary": {
    "type": "Output",
    "description": "The OptimizationFacilitySummary table provides a comprehensive summary of key data and metrics related to facilities within a specific scenario and time period. It includes information such as initial and optimized states and statuses of facilities, total costs associated with each facility, quantities and volumes of flows, inventory and production, as well as capacity and utilization metrics. Additionally, the table includes risk scores, geographic location coordinates, and relevant scenario and period names for easy reference and analysis.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "PeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The time period that the results are reported for."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the Facility."
      },
      {
        "Column Name": "InitialState",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The initial state of the Facility. This is specified in the Initial State field of the Facilities table and will be one of Existing or Potential"
      },
      {
        "Column Name": "InitialStatus",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Initial Status of the Facility. This is specified in the Facility Status field of the Facilities table and will be one of Open, Closed or Consider."
      },
      {
        "Column Name": "OptimizedStatus",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The status of the Facility based on the optimization's results. This will be one of Open, Closed or Consider."
      },
      {
        "Column Name": "TotalFacilityCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost associated with the Facility. This will be reported as the sum of the Fixed Operating Cost, Fixed Startup Cost, Fixed Closing Cost, Inbound Handling Cost, Outbound Handling Cost, Prebuild Holding Cost, Turn Estimated Holding Cost, Storage Cost, In Transit Holding Cost, Production Cost and Process Cost for all activities associated with the Facility."
      },
      {
        "Column Name": "OperatingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The fixed operating cost of the Facility. This is specified in the Fixed Operating Cost field of the Facilities table."
      },
      {
        "Column Name": "StartupCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The startup cost of the Facility. If a Facility opens in a period then the fixed startup cost will be applied. This is specified in the Fixed Startup Cost field of the Facilities table."
      },
      {
        "Column Name": "ClosingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The closing cost of the Facility. If a Facility closes in a period then the fixed closing cost will be applied. This is specified in the Fixed Closing Cost field of the Facilities table."
      },
      {
        "Column Name": "TotalInboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost associated with inbound handling at the Facility for the listed Product. This is calculated as the sum of Inbound Handling Costs across all products for the Facility as reported in the Optimization Warehousing Summary table."
      },
      {
        "Column Name": "TotalOutboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost associated with outbound handling at the Facility for the listed Product. This is calculated as the sum of Outbound Handling Costs across all products for the Facility as reported in the Optimization Warehousing Summary table."
      },
      {
        "Column Name": "TotalPrebuildHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The holding cost charged to the amount of average prebuild inventory. This is calculated as the sum of Prebuild Holding Costs across all products for the Facility as reported in the Optimization Inventory Summary table."
      },
      {
        "Column Name": "TotalTurnEstimatedHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The holding cost charged to the amount of turn estimated inventory. This is calculated as the sum of Turn Estimated Holding Costs across all products for the Facility as reported in the Optimization Inventory Summary table."
      },
      {
        "Column Name": "TotalStorageCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost of storage for the Product at the Facility. This is calculated as the sum of Storage Costs across all products for the Facility as reported in the Optimization Inventory Summary table."
      },
      {
        "Column Name": "TotalInTransitHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The holding cost charged to the amount of In-Transit Inventory that has been assigned to the Facility. This is calculated as the sum of In Transit Holding Costs across all products that are assigned to the Facility as reported in the Optimization Flow Summary table."
      },
      {
        "Column Name": "TotalProductionCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost associated with production at the Facility. This is calculated as the sum of Production Cost across all products as reported in the Optimization Production Summary table."
      },
      {
        "Column Name": "TotalProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost associated with processes at the Facility. This is calculated as the sum of Process Unit Costs and Process Fixed costs for all processes used at the Facility as reported in the Optimization Process Summary table."
      },
      {
        "Column Name": "TotalStockingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The total cost associated with stocking cost at the Facility. This is taken as the total Stocking Cost from the Optimization Warehousing Summary table."
      },
      {
        "Column Name": "TotalDestockingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The total cost associated with destocking cost at the Facility. This is taken as the total Destocking Cost from the Optimization Warehousing Summary table."
      },
      {
        "Column Name": "TotalInboundQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The quantity of inbound flow across all products into the Facility."
      },
      {
        "Column Name": "TotalOutboundQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The quantity of outbound flow across all products out of the Facility."
      },
      {
        "Column Name": "TotalInventoryQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The quantity of inventory at the Facility. This is reported as the sum of Average Prebuild Inventory Quantity and (Max Turn Estimated Inventory Quantity / 2) across all products as reported in the Optimization Inventory Summary table."
      },
      {
        "Column Name": "TotalProductionQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The quantity of production across all products at the Facility."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that quantity is expressed in terms of."
      },
      {
        "Column Name": "TotalInboundVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The volume of inbound flow across all products into the Facility."
      },
      {
        "Column Name": "TotalOutboundVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The volume of outbound flow across all products out of the Facility."
      },
      {
        "Column Name": "TotalInventoryVolume",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The volume of inventory at the Facility. This is reported as the sum of Average Prebuild Inventory volume and (Max Turn Estimated Inventory Volume / 2) across all products as reported in the Optimization Inventory Summary table."
      },
      {
        "Column Name": "TotalProductionVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The volume of production across all products at the Facility."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that volume is expressed in terms of."
      },
      {
        "Column Name": "TotalInboundWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The weight of inbound flow across all products into the Facility."
      },
      {
        "Column Name": "TotalOutboundWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The weight of outbound flow across all products out of the Facility."
      },
      {
        "Column Name": "TotalInventoryWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The weight of inventory at the Facility. This is reported as the sum of Average Prebuild Inventory weight and (Max Turn Estimated Inventory Weight / 2) across all products as reported in the Optimization Inventory Summary table."
      },
      {
        "Column Name": "TotalProductionWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The weight of production across all products at the Facility."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that weight is expressed in terms of."
      },
      {
        "Column Name": "ThroughputCapacity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The throughput capacity for the Facility. This is specified in the Throughput Capacity field of the Facilities table."
      },
      {
        "Column Name": "ThroughputCapacityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the throughput capacity is expressed in terms of."
      },
      {
        "Column Name": "ThroughputUtilization",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The throughput utilization of the Facility for this period. Utilization is calculated as the Throughput divided by the Throughput Capacity."
      },
      {
        "Column Name": "StorageCapacity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The storage capacity for this Facility. This is specified in the Storage Capacity field of the Facilities table and is measured as Max Turns Estimated Inventory + Ending Prebuild Inventory."
      },
      {
        "Column Name": "StorageCapacityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the storage capacity is expressed in terms of."
      },
      {
        "Column Name": "StorageUtilization",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The storage utilization of the Facility for this period. Utilization is calculated as the Total Inventory/Storage Capacity. This is meant to capture average utilization during the period."
      },
      {
        "Column Name": "FacilityRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk score associated with this Facility. This is based on a weighted average of the Concentration Risk, Source Count Risk, Utilization Risk, Geographic Risk and the User Defined Risk of the Facility."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated the with the throughput concentration of the Facility location. This is calculated based on the throughput quantity of the facility relative to the total demanded quantity across all products for the period."
      },
      {
        "Column Name": "SourceCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the number of sources that the Facility uses across all products."
      },
      {
        "Column Name": "UtilizationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with how close to capacity the Facility is during the model solve. This is calculated as the weighted average of Storage Utilization Risk, Throughput Utilization Risk, and the Work Center Utilization Risk. Additional details can be found in the Optimization Utilization Risk Metrics table."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the geographic location of the Facility. This is a weighted average of several geographic components that are reported in greater detail in the Optimization Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Facilities table."
      },
      {
        "Column Name": "TotalCO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total CO2 emissions at this facility."
      },
      {
        "Column Name": "TotalCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to CO2 Emissions at this facility."
      },
      {
        "Column Name": "FixedCO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The fixed CO2 emissions at this Facility. This is specified in the FixedCO2 emissions column of the Facilities table."
      },
      {
        "Column Name": "FixedCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost attributed to Fixed CO2 Emissions at this facility."
      },
      {
        "Column Name": "TotalProductionCO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total CO2 emissions attributed to production at this facility."
      },
      {
        "Column Name": "TotalProductionCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to CO2 emissions of production at this facility."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The latitude of the Facility."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The longitude of the Facility."
      }
    ]
  },
  "OptimizationFlowSummary": {
    "type": "Output",
    "description": "The OptimizationFlowSummary table provides a comprehensive overview of various costs, distances, risks, and other relevant metrics associated with product flows within a supply chain network. It includes information such as flow type, quantity, volume, weight, sourcing and transportation costs, as well as handling costs and total costs. Additionally, it captures details related to transport distance, time, and risks, along with geographic coordinates of origin and destination locations. This table is essential for analyzing and optimizing supply chain processes to enhance efficiency and reduce operational risks.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "DepartingPeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The Period in which the flow left the Origin location."
      },
      {
        "Column Name": "ArrivingPeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The Period in which the flow arrived at the Destination Location."
      },
      {
        "Column Name": "FlowType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The type of flow that the record represents. Customer Fulfillment will represent flows from Facilities to Customers, Replenishment will represent flows from Facilities to other Facilities, Procurement will represent flows from Suppliers to Facilities and Drop Ship will represent flows from Suppliers to Customers."
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The Facility or Supplier that the flow originated from."
      },
      {
        "Column Name": "DestinationName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The Customer or Facility location that the flow arrived to."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The Product the flow record is for."
      },
      {
        "Column Name": "ModeName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The Transportation Mode used for this flow."
      },
      {
        "Column Name": "FlowQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The quantity of the flow units for the listed Origin / Destination / Mode / Period combination."
      },
      {
        "Column Name": "FlowQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the quantity is expressed in terms of."
      },
      {
        "Column Name": "FlowVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The volume of the flow units for the listed Origin / Destination / Mode / Period combination."
      },
      {
        "Column Name": "FlowVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the volume is expressed in terms of."
      },
      {
        "Column Name": "FlowWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The weight of the flow units for the listed Origin / Destination / Mode / Period combination."
      },
      {
        "Column Name": "FlowWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the weight is expressed in terms of."
      },
      {
        "Column Name": "SourcingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The sourcing cost associated with this flow record. Sourcing costs will be defined in the Unit Cost field of the Customer Fulfillment, Replenishment or Procurement Policy tables."
      },
      {
        "Column Name": "TransportationCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The transportation cost associated with this flow record. Transportation Costs will be defined by the Unit Cost field of the Transportation Policies or Transportation Modes table."
      },
      {
        "Column Name": "ShipmentCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The proportion of the fixed cost entered in the Transportation Policies that will apply to the product flow. In the case of grouped products, the complete shipment costs are reported in the Optimization Shipment Summary table."
      },
      {
        "Column Name": "DutyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The duty cost associated with this flow record. Duty Cost will be defined as a percentage of product value in the Duty Rate column of the Transportation Policies table."
      },
      {
        "Column Name": "InTransitHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The holding cost associated with the in-transit inventory estimate for this flow record."
      },
      {
        "Column Name": "InboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The handling cost associated with inbound flow of the listed product into the Destination facility. This cost is specified in the Warehousing Policies table."
      },
      {
        "Column Name": "OutboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The handling cost associated with outbound flow of the listed product from the Origin facility. This cost is specified in the Warehousing Policies table."
      },
      {
        "Column Name": "FuelSurchargeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The fuel surcharge cost associated with this flow. This cost is specified in the Transportation Policies table."
      },
      {
        "Column Name": "TotalCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost for this product flow record. This will be made up of the Transportation Cost, Shipment Cost, Duty Cost and the In-Transit Inventory Cost."
      },
      {
        "Column Name": "TransportDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The distance of the flow record. Distance will be determined from the Transport Distance in the Transportation Policies table, or if no distance is entered a default distance calculation will have been used."
      },
      {
        "Column Name": "TransportDistanceUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the distance is expressed in terms of."
      },
      {
        "Column Name": "TransportTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The time taken to move from the Origin to the Destination for the flow record. The time will be determined based on the Transport Time field in the Transportation Policies table, or if no time is entered then a default speed will be used to determine the time based on the flow distance."
      },
      {
        "Column Name": "TransportTimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the time is expressed in terms of."
      },
      {
        "Column Name": "TransportTimeRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The Risk metric associated with how long of a transport time the flow has. This will contribute to the model's overall Network Risk score."
      },
      {
        "Column Name": "TimeToImportRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The Risk metric associated with how long it can take imported products to clear customs as they enter the destination country. This contributes to the model's overall Network Risk score."
      },
      {
        "Column Name": "TimeToExportRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The Risk metric associated with how long it can take exported products to clear customs as they leave the origin country. This contributes to the model's overall Network Risk Score."
      },
      {
        "Column Name": "CO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total CO2 emissions."
      },
      {
        "Column Name": "CO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to CO2 Emissions."
      },
      {
        "Column Name": "OriginLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The origin latitude."
      },
      {
        "Column Name": "OriginLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The origin longitude."
      },
      {
        "Column Name": "DestinationLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The destination latitude."
      },
      {
        "Column Name": "DestinationLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The destination longitude."
      }
    ]
  },
  "OptimizationGeographicRiskMetrics": {
    "type": "Output",
    "description": "The table OptimizationGeographicRiskMetrics contains data related to the risk scores associated with different geographic locations, focusing on factors such as proximity to bio labs, nuclear power plants, economic characteristics, natural disasters, political stability, epidemics, and labor markets. The table includes information on site type, risk scores, specific risks (such as bio lab distance risk and natural disaster risk), geographic coordinates, scenario name, risk rating name, and site name. It is used to analyze and optimize the risk factors associated with various geographical sites.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "SiteName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the location that Geographic Risk Metrics are reported for."
      },
      {
        "Column Name": "SiteType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The type of site that the Geographic Risk Metrics are reported for. This will be one of Customer, Facility or Supplier."
      },
      {
        "Column Name": "GeographicRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk score associated with the geographic location of the site. This is a weighted average of Bio Lab Distance, Economic, Natural Disaster, Nuclear Distance, Political, Epidemic, and Labor Risks."
      },
      {
        "Column Name": "BioLabDistanceRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the Site's proximity to a Level 4 Biolab. The closer the proximity, the higher the risk."
      },
      {
        "Column Name": "EconomicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the economic characteristics of the Site's country.  This metric is using a combination of GDP and number of unique exporting products as reported by WorldBank."
      },
      {
        "Column Name": "NaturalDisasterRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with potential economic devastation resulting from natural disasters that can impact the Site location. Considered natural disasters are droughts, floods, earthquakes, volcanic eruptions, landslides and cyclones."
      },
      {
        "Column Name": "NuclearDistanceRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the Site's proximity to nuclear power plants. The closer the proximity, the higher the risk."
      },
      {
        "Column Name": "PoliticalRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the political stability of the Site's country."
      },
      {
        "Column Name": "EpidemicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with epidemic impacts on the Site's country."
      },
      {
        "Column Name": "LaborRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with labor markets of the Site's country."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The latitude of the Site."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The longitude of the Site."
      }
    ]
  },
  "OptimizationGreenfieldCustomerRiskMetrics": {
    "type": "Output",
    "description": "The Optimization Greenfield Customer Risk Metrics table provides a summary of the risk associated with each customer in a specific scenario. It includes the Customer Risk Score, Concentration Risk, Geographic Risk, and User Defined Risk for each customer, as well as their geographic coordinates, scenario name, risk rating name, and customer name. This table allows for a detailed analysis of the various risk factors that contribute to the overall risk profile of each customer in the optimization scenario.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "CustomerName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The name of the Customer."
      },
      {
        "Column Name": "CustomerRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk score associated with this Customer. This is based on a weighted average of the Concentration Risk, Geographic Risk and User Defined Risk of the Customer."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated the with the demand concentration at the Customer location."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with the geographic location of the Customer. This is a weighted average of several geographic components that are reported in greater detail in the Optimization Greenfield Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Customers table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The latitude of the Customer."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The longitude of the Customer."
      }
    ]
  },
  "OptimizationGreenfieldCustomerSummary": {
    "type": "Output",
    "description": "The OptimizationGreenfieldCustomerSummary table provides a summary of various attributes and data related to customers in an optimization model. This includes information such as the cluster ID assigned to the customer, their total demand, flow cost, location details (city, postal code, region, country), risk scores, geographic information (latitude, longitude), the name of the scenario the results are saved for, and the customer's name. This table helps in analyzing and understanding the impact of different factors on customer operations and risk assessment in the optimization model.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "CustomerName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The name of the Customer."
      },
      {
        "Column Name": "ClusterID",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The ID of the cluster that the Customer was assigned to."
      },
      {
        "Column Name": "TotalDemand",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The total demand across all products for the Customer."
      },
      {
        "Column Name": "FlowCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The cost of the flows to service this customer. The cost is calculated using a quantity-distance basis and is entered as the Greenfield Flow Cost from the Model Run Options."
      },
      {
        "Column Name": "City",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "This will be specified in the City field of the Customers table. For Customers that have no geodata information entered in the Customers table, reverse-geocoding will be utilized to determine the city."
      },
      {
        "Column Name": "PostalCode",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "This will be specified in the Postal Code field of the Customers table."
      },
      {
        "Column Name": "Region",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "This will be specified in the Region field of the Customers table. For Customers that have no geodata information entered in the Customers table, reverse-geocoding will be utilized to determine the region."
      },
      {
        "Column Name": "Country",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "This will be specified in the Country field of the Customers table. For Customers that have no geodata information entered in the Customers table, reverse-geocoding will be utilized to determine the country."
      },
      {
        "Column Name": "CustomerRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk score associated with this Customer. This is based on a weighted average of the Concentration Risk, Geographic Risk and User Defined Risk of the Customer."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated the with the demand concentration at the Customer location."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with the geographic location of the Customer. This is a weighted average of several geographic components that are reported in greater detail in the Optimization Greenfield Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Customers table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The latitude of the Customer."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The longitude of the Customer."
      }
    ]
  },
  "OptimizationGreenfieldFacilityRiskMetrics": {
    "type": "Output",
    "description": "The Optimization Greenfield Facility Risk Metrics table provides detailed information on the risk score associated with each Facility in a Greenfield project. This information is based on a weighted average of Concentration Risk, Utilization Risk, Geographic Risk, and User Defined Risk. The table also includes the Facility's latitude and longitude, as well as the name of the scenario and the Risk Rating for which the risk metrics are reported.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The name of the Greenfield Facility."
      },
      {
        "Column Name": "FacilityRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk score associated with this Facility. This is based on a weighted average of the Concentration Risk, Utilization Risk, Geographic Risk and User Defined Risk of the Facility."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated the with the throughput concentration of the Facility. This is calculated based on the throughput quantity of the facility relative to the total demanded quantity. Unlike NEO, TRIAD will only consider Throughput Capacity for Capacity Risk and therefore there is no further detailed output table on Capacity Risk Metrics in TRIAD."
      },
      {
        "Column Name": "UtilizationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with how close to capacity the Facility is during the model solve."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with the geographic location of the Facility. This is a weighted average of several geographic components that are reported in greater detail in the Optimization Greenfield Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Facilities table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The latitude of the Facility."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The longitude of the Facility."
      }
    ]
  },
  "OptimizationGreenfieldFacilitySummary": {
    "type": "Output",
    "description": "The OptimizationGreenfieldFacilitySummary table provides a summary of key metrics and information for Greenfield Facilities in an optimization model. This includes details such as the type of facility, fixed costs, flow costs, demand served, capacity, utilization, customer information, distance metrics, location data, risk scores, and scenario name. This table allows for a quick overview of the performance and characteristics of Greenfield Facilities in the optimization model.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The name of the Greenfield Facility."
      },
      {
        "Column Name": "FacilityType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The type of Facility, this will be one of Greenfield Facility, Candidate Facility, or Existing Facility. If the Facility was a newly selected location based on the model solve then it will be classified as a Type of Greenfield Facility"
      },
      {
        "Column Name": "FixedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The fixed cost of the Facility. For Candidate Facilities and Existing Facilities, this entry comes from the Fixed Operating Cost in the Facilities table. For Greenfield Facilities, this cost comes from the Greenfield Facility Fixed Cost entry in the GreenfieldSettings table."
      },
      {
        "Column Name": "TotalInboundFlowCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The total cost of flows from Suppliers to this Facility."
      },
      {
        "Column Name": "TotalOutboundFlowCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The total cost of greenfield flows that originated at this Facility."
      },
      {
        "Column Name": "DemandServed",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The quantity of demand that was serviced by this Facility."
      },
      {
        "Column Name": "FacilityCapacity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The capacity of the listed Facility. For Candidate Facilities and Existing Facilities, this will be specified in the Throughput Capacity field of the Facilities table. For Greenfield Facilities, this will be specified in the Greenfield Facility Throughput Capacity entry of the Greenfield Settings table."
      },
      {
        "Column Name": "FacilityUtilization",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The utilization of the listed Facility expressed as the Demand Served / Facility Capacity."
      },
      {
        "Column Name": "CustomersServed",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The number of customers that were serviced by this Facility."
      },
      {
        "Column Name": "AverageCustomerDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The average service distance for customers from this Facility."
      },
      {
        "Column Name": "FurthestCustomerDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The largest service distance for a customer that was serviced by this Facility."
      },
      {
        "Column Name": "DistanceUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The unit of measure that distance is expressed in terms of."
      },
      {
        "Column Name": "City",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "For Candidate Facilities and Existing Facilities, this will be the City specified in the City field of the Facilities table. For Greenfield Facilities, this will be determined by a reverse-geocoding operation using the Greenfield Facility's latitude and longitude coordinates. For Existing or Candidate Facilities that have no geodata information entered in the Facilities table, reverse-geocoding will also be utilized."
      },
      {
        "Column Name": "PostalCode",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "For Candidate Facilities and Existing Facilities, this will be the Postal Code specified in the Postal Code field of the Facilities table."
      },
      {
        "Column Name": "Region",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "For Candidate Facilities and Existing Facilities, this will be the Region specified in the Region field of the Facilities table. For Greenfield Facilities, this will be determined by a reverse-geocoding operation using the Greenfield Facility's latitude and longitude coordinates. For Existing or Candidate Facilities that have no geodata information entered in the Facilities table, reverse-geocoding will also be utilized."
      },
      {
        "Column Name": "Country",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "For Candidate Facilities and Existing Facilities, this will be the Country specified in the Country field of the Facilities table. For Greenfield Facilities, this will be determined by a reverse-geocoding operation using the Greenfield Facility's latitude and longitude coordinates. For Existing or Candidate Facilities that have no geodata information entered in the Facilities table, reverse-geocoding will also be utilized."
      },
      {
        "Column Name": "FacilityRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk score associated with this Facility. This is based on a weighted average of the Concentration Risk, Utilization Risk, Geographic Risk and User Defined Risk of the Facility."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated the with the throughput concentration of the Facility. This is calculated based on the throughput quantity of the facility relative to the total demanded quantity."
      },
      {
        "Column Name": "UtilizationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with how close to capacity the Facility is during the model solve. Unlike NEO, TRIAD will only consider Throughput Utilization for Utilization Risk and therefore there is no further detailed output table on Utilization Risk Metrics in TRIAD."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with the geographic location of the Facility. This is a weighted average of several geographic components that are reported in greater detail in the Optimization Greenfield Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Facilities table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The latitude of the Facility."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The longitude of the Facility."
      }
    ]
  },
  "OptimizationGreenfieldFlowSummary": {
    "type": "Output",
    "description": "The OptimizationGreenfieldFlowSummary table provides a summary of optimized flow records, including information such as the type of flow, quantity, cost, distance, service band details (if applicable), transportation time, risk metrics, geographical coordinates of origin and destination, scenario name, and names of the origin and destination locations. This table is used to analyze and compare optimized transportation flows within a supply chain network.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "FlowType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The type of flow that the record represents. Customer Fulfillment will represent flows from Facilities to Customers and Procurement will represent flows from Suppliers to Facilities."
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The Facility or Supplier that the flow originated from."
      },
      {
        "Column Name": "DestinationName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The Customer or Facility location that the flow arrived to."
      },
      {
        "Column Name": "FlowQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The quantity of the flow units for the listed Origin / Destination combination."
      },
      {
        "Column Name": "FlowCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The transportation cost associated with this flow record."
      },
      {
        "Column Name": "TransportDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The distance of the flow record."
      },
      {
        "Column Name": "ServiceBandName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The name of the Greenfield Service Band that this flow record falls into. The band name will be defined in the Service Band Name field of the Greenfield Service Bands input table. Service Bands will only be populated for Customer Fulfillment flows."
      },
      {
        "Column Name": "ServiceBandDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The distance of the Greenfield Service band that this flow record falls into. The most restrictive Service Band Distance will be populated here. Service Bands will only be populated for Customer Fulfillment flows."
      },
      {
        "Column Name": "DistanceUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The unit of measure that the distance is expressed in terms of"
      },
      {
        "Column Name": "TransportTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The transport time of the flow record."
      },
      {
        "Column Name": "TransportTimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The unit of measure that the time is expressed in terms of"
      },
      {
        "Column Name": "TransportTimeRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The Risk metric associated with how long of a transport time the flow has. This will contribute to the model's overall Network Risk score."
      },
      {
        "Column Name": "TimeToImportRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The Risk metric associated with how long it can take imported products to clear customs as they enter the destination country. This contributes to the model's overall Network Risk score."
      },
      {
        "Column Name": "TimeToExportRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The Risk metric associated with how long it can take exported products to clear customs as they leave the origin country. This contributes to the model's overall Network Risk Score."
      },
      {
        "Column Name": "OriginLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The origin latitude."
      },
      {
        "Column Name": "OriginLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The origin longitude."
      },
      {
        "Column Name": "DestinationLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The destination latitude."
      },
      {
        "Column Name": "DestinationLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The destination longitude."
      }
    ]
  },
  "OptimizationGreenfieldGeographicRiskMetrics": {
    "type": "Output",
    "description": "The table OptimizationGreenfieldGeographicRiskMetrics contains Geographic Risk Metrics for greenfield sites that are being optimized. The metrics include information on the type of site (Customer, Facility, or Supplier), the risk score associated with the geographic location of the site, and specific risks such as Bio Lab Distance, Economic, Natural Disaster, Nuclear Distance, Political, Epidemic, and Labor Risks. The table also includes the latitude and longitude of the site, the scenario name, the Risk Rating, and the name of the location being assessed.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "SiteName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The name of the location that Geographic Risk Metrics are reported for."
      },
      {
        "Column Name": "SiteType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The type of site that the Geographic Risk Metrics are reported for. This will be one of Customer, Facility or Supplier."
      },
      {
        "Column Name": "GeographicRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk score associated with the geographic location of the site. This is a weighted average of Bio Lab Distance, Economic, Natural Disaster, Nuclear Distance, Political, Epidemic, and Labor Risks."
      },
      {
        "Column Name": "BioLabDistanceRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with the Site's proximity to a Level 4 Biolab. The closer the proximity, the higher the risk."
      },
      {
        "Column Name": "EconomicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with the economic characteristics of the Site's country.  This metric is using a combination of GDP and number of unique exporting products as reported by WorldBank."
      },
      {
        "Column Name": "NaturalDisasterRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with potential economic devastation resulting from natural disasters that can impact the Site location. Considered natural disasters are droughts, floods, earthquakes, volcanic eruptions, landslides and cyclones."
      },
      {
        "Column Name": "NuclearDistanceRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with the Site's proximity to nuclear power plants. The closer the proximity, the higher the risk."
      },
      {
        "Column Name": "PoliticalRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with the political stability of the Site's country."
      },
      {
        "Column Name": "EpidemicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with epidemic impacts on the Site's country."
      },
      {
        "Column Name": "LaborRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with labor markets of the Site's country."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The latitude of the Site."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The longitude of the Site."
      }
    ]
  },
  "OptimizationGreenfieldNetworkRiskMetrics": {
    "type": "Output",
    "description": "The OptimizationGreenfieldNetworkRiskMetrics table provides risk metrics associated with network activities in a greenfield scenario. This includes Network Risk Score, Transport Time Risk, Time To Import Risk, and Time To Export Risk, which are calculated based on weighted averages of various factors. Additionally, the table includes Scenario Name and Risk Rating Name for reference.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "NetworkRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk score associated with Network activities in this scenario. This is calculated as the weighted average of the Product Stocking Point Count Risk, Product Make And Supply Count Risk, Transport Time Risk, Time To Import Risk and Time To Export Risk."
      },
      {
        "Column Name": "TransportTimeRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with how long of a transport time the flows have. This is calculated based off of the weighted average of Transport Time Risk reported in the Optimization Flow Summary table."
      },
      {
        "Column Name": "TimeToImportRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with how long it can take imported products to clear customs. This is calculated based off of the weighted average of Time To Import Risk in the Optimization Flow Summary table."
      },
      {
        "Column Name": "TimeToExportRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with how long it can take exported products to clear customs. This is calculated based off of the weighted average of Time To Export Risk in the Optimization Flow Summary table."
      }
    ]
  },
  "OptimizationGreenfieldNetworkSummary": {
    "type": "Output",
    "description": "The OptimizationGreenfieldNetworkSummary table contains a summary of results related to the optimization of greenfield facilities within a network. It includes information such as the version of the solver used, runtime, number of greenfield, existing, and candidate facilities, total costs, demand served, average distances, risk ratings, risk scores, and the name of the scenario being analyzed.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "TRIADVersion",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The version of the TRIAD solver that was used for the scenario."
      },
      {
        "Column Name": "RunStartTime",
        "Data Type": "Timestamp",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The Date/Time when the scenario was run."
      },
      {
        "Column Name": "TotalRunTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The total time taken for the scenario run to complete."
      },
      {
        "Column Name": "NumberOfGreenfieldFacilities",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The number of Greenfield Facilities that were used for the run."
      },
      {
        "Column Name": "NumberOfExistingFacilities",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The number of Existing Facilities that were used for the run. Existing Facilities are Facilities with a Facility Status of Open."
      },
      {
        "Column Name": "NumberOfCandidateFacilities",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The number of Candidate Facilities that were used for the run. Candidate Facilities are Facilities with a Facility Status of Consider"
      },
      {
        "Column Name": "TotalCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The total cost of the greenfield run. This will include Facility Fixed Costs, Supplier to Facility flow costs, and Facility to Customer flow costs."
      },
      {
        "Column Name": "TotalFacilityFixedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The total cost of Facility fixed costs across the run."
      },
      {
        "Column Name": "TotalFlowCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The total cost of all flows."
      },
      {
        "Column Name": "TotalDemandServed",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The total quantity of served demand at Customers."
      },
      {
        "Column Name": "AverageFacilityDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The average distance of Supplier to Facility flows across the run."
      },
      {
        "Column Name": "AverageCustomerDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The average distance of Facility to Customer flows across the run."
      },
      {
        "Column Name": "DistanceUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The unit of measure that distance is expressed in terms of."
      },
      {
        "Column Name": "PrimaryRiskRating",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The Primary Risk Rating that is specified in the Model Settings. Details on all Risk Ratings can be found in the Greenfield Risk Metrics Summary table."
      },
      {
        "Column Name": "RiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk score associated with this scenario. The Risk Score is the weighted sum of Customer, Facility, Supplier, and Network Risk, and is populated for the Primary Risk Rating that is specified in the Model Settings."
      }
    ]
  },
  "OptimizationGreenfieldRiskMetricsSummary": {
    "type": "Output",
    "description": "The Optimization Greenfield Risk Metrics Summary table provides a summary of the risk scores associated with Customers, Facilities, Suppliers, and Network activities in a scenario. It outlines the Risk Score, Customer Risk, Facility Risk, Supplier Risk, and Network Risk for each scenario run, along with the DART Version used, Scenario Name, and Risk Rating Name. This table allows for a comprehensive overview of the risk factors involved in the scenario and helps in better understanding and managing potential risks.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "RiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk score associated with this scenario. The Risk Score is the weighted sum of Customer, Facility, Supplier, and Network Risk, and is populated for the Primary Risk Rating that is specified in the Model Settings."
      },
      {
        "Column Name": "CustomerRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk score associated with Customers in this scenario. More details on the Risk components can be found in the Optimization Greenfield Customer Summary table."
      },
      {
        "Column Name": "FacilityRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk score associated with Facilities in this scenario. More details on the Risk components can be found in the Optimization Greenfield Facility Summary table."
      },
      {
        "Column Name": "SupplierRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk score associated with Suppliers in this scenario. More details on the Risk components can be found in the Optimization Greenfield Supplier Summary table."
      },
      {
        "Column Name": "NetworkRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk score associated with Network activities in this scenario. More details on the Risk components can be found in the Optimization Greenfield Flow Summary table."
      },
      {
        "Column Name": "DARTVersion",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The version of the DART solver that was used for the scenario run."
      }
    ]
  },
  "OptimizationGreenfieldServiceBandSummary": {
    "type": "Output",
    "description": "The OptimizationGreenfieldServiceBandSummary table provides a summary of the optimization results for Greenfield Service Bands. It includes information such as the unit of measure for distance, the percentage of demand that needs to be serviced within the distance band, the actual percentage of demand serviced, the number of customers served within the distance band, the scenario name, the name of the Greenfield Service Band, and the distance band for each Service Band. This table helps to track and analyze the performance of the optimization model for Greenfield Service Bands in terms of meeting service level requirements.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ServiceBandName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD]",
        "Explanation": "The name of the Greenfield Service Band. The band name will be  defined in the Service Band Name field of the Greenfield Service Bands input table."
      },
      {
        "Column Name": "ServiceBandDistance",
        "Data Type": "double",
        "Primary Key": "Yes",
        "Engine": "[TRIAD]",
        "Explanation": "The distance band for the listed Greenfield Service Band."
      },
      {
        "Column Name": "ServiceBandDistanceUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The unit of measure that the distance is expressed in terms of."
      },
      {
        "Column Name": "ServiceBandPercentage",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The percentage of demand that is required to be serviced within the listed Service Band Distance for this Service Band."
      },
      {
        "Column Name": "ActualDemandPercentage",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The actual percentage of demand that was serviced within the listed distance band. Note that customer clustering may lead to small violations of these service band constraints."
      },
      {
        "Column Name": "CustomersServed",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The number of customers that were serviced within the listed distance band."
      }
    ]
  },
  "OptimizationGreenfieldSupplierRiskMetrics": {
    "type": "Output",
    "description": "The OptimizationGreenfieldSupplierRiskMetrics table provides a detailed breakdown of the risk metrics associated with Suppliers in a greenfield scenario. It includes the Supplier's Risk Score, Concentration Risk, Utilization Risk, Geographic Risk, and User Defined Risk, as well as their Latitude and Longitude. This table allows for a comprehensive analysis of the potential risks posed by Suppliers in a greenfield project based on various factors.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "SupplierName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The name of the Supplier."
      },
      {
        "Column Name": "SupplierRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk score associated with this Supplier. This is based on a weighted average of the Supplier's Concentration Risk, Utilization Risk, Geographic Risk and User Defined Risk of the Supplier."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated the with the throughput concentration of the Supplier location. This is calculated based on the throughput quantity of the facility relative to the total demanded quantity."
      },
      {
        "Column Name": "UtilizationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with how close to capacity the Supplier is during the model solve."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with the geographic location of the Facility. This is a weighted average of several geographic components that are reported in greater detail in the Optimization Facility Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Suppliers table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The latitude of the Supplier."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The longitude of the Supplier."
      }
    ]
  },
  "OptimizationGreenfieldSupplierSummary": {
    "type": "Output",
    "description": "The OptimizationGreenfieldSupplierSummary table provides a summary of key information related to suppliers in a greenfield optimization scenario. This includes details such as total outbound flow cost, supplied quantity, supplier capacity, supplier utilization, facilities served, average and furthest facility distances, distance unit of measure, city, postal code, region, country, supplier risk score, concentration risk, utilization risk, geographic risk, user-defined risk, latitude, longitude, scenario name, and supplier name. This table serves as a comprehensive overview of supplier performance and risk factors in the context of greenfield optimization.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "SupplierName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[TRIAD, DART]",
        "Explanation": "The name of the Supplier."
      },
      {
        "Column Name": "TotalOutboundFlowCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The total cost of outbound flows from this Supplier to Facilities."
      },
      {
        "Column Name": "SuppliedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The quantity that was supplied by the Supplier to the Facilities."
      },
      {
        "Column Name": "SupplierCapacity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The capacity of the Supplier."
      },
      {
        "Column Name": "SupplierUtilization",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The utilization of the listed Supplier expressed as the Supplied Quantity / Supplier Capacity."
      },
      {
        "Column Name": "FacilitiesServed",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The number of Facilities that were serviced by this Supplier."
      },
      {
        "Column Name": "AverageFacilityDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The average service distance for Facilities from this Supplier."
      },
      {
        "Column Name": "FurthestFacilityDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The largest service distance for a Facility that was serviced by this Supplier."
      },
      {
        "Column Name": "DistanceUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "The unit of measure that distance is expressed in terms of."
      },
      {
        "Column Name": "City",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "This will be specified in the City field of the Suppliers table. For Suppliers that have no geodata information entered in the Suppliers table, reverse-geocoding will be utilized to determine the city."
      },
      {
        "Column Name": "PostalCode",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "This will be specified in the Postal Code field of the Suppliers table."
      },
      {
        "Column Name": "Region",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD]",
        "Explanation": "This will be specified in the Region field of the Suppliers table. For Suppliers that have no geodata information entered in the Suppliers table, reverse-geocoding will be utilized to determine the region."
      },
      {
        "Column Name": "Country",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "This will be specified in the Country field of the Suppliers table. For Suppliers that have no geodata information entered in the Suppliers table, reverse-geocoding will be utilized to determine the country."
      },
      {
        "Column Name": "SupplierRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk score associated with this Supplier. This is based on a weighted average of the Supplier's Concentration Risk, Utilization Risk, Geographic Risk and User Defined Risk of the Supplier."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated the with the throughput concentration of the Supplier location. This is calculated based on the throughput quantity of the facility relative to the total demanded quantity."
      },
      {
        "Column Name": "UtilizationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with how close to capacity the Supplier is during the model solve."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with the geographic location of the Facility. This is a weighted average of several geographic components that are reported in greater detail in the Optimization Facility Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Suppliers table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The latitude of the Supplier."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[TRIAD, DART]",
        "Explanation": "The longitude of the Supplier."
      }
    ]
  },
  "OptimizationGreenfieldValidationErrorReport": {
    "type": "Output",
    "description": "The OptimizationGreenfieldValidationErrorReport table contains validation results and error information from optimization runs. It tracks identified issues, their severity, applied corrections, and occurrence frequencies across various model components, enabling quality control of optimization inputs and outputs.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "TableName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[]",
        "Explanation": "The name of the table where the error has identified."
      },
      {
        "Column Name": "ColumnName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[]",
        "Explanation": "The name of the column where the error has been identified."
      },
      {
        "Column Name": "ValidationRule",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The name of the internal validation rule that the optimization engine found a problem in."
      },
      {
        "Column Name": "ErrorType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[]",
        "Explanation": "The listed type of error associated with the validation rule."
      },
      {
        "Column Name": "ErrorMessage",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "A description of the reported error."
      },
      {
        "Column Name": "Severity",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The severity of the identified error, this will be one of Lowest, Low, Medium or High severity."
      },
      {
        "Column Name": "IdentifiedValue",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The value that has been identified as the source of the error"
      },
      {
        "Column Name": "Action",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "If corrective action was taken, the data adjustment performed by the solver will be listed here."
      },
      {
        "Column Name": "ValueReplaced",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "If a value had to be replaced, the updated value will be listed here."
      },
      {
        "Column Name": "Count",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The number of times that the error occurred."
      }
    ]
  },
  "OptimizationInventorySummary": {
    "type": "Output",
    "description": "The OptimizationInventorySummary table provides a summary of inventory optimization results for each scenario, period, facility, and product. It includes information such as prebuild inventory quantities, volumes, and weights, estimated inventory quantities and costs, as well as latitude and longitude coordinates of the facility. The table also includes total inventory costs, including holding costs and storage costs, for each product and facility combination during the specified period.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "PeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The time period that the results are reported for."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the Facility."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the Product."
      },
      {
        "Column Name": "AveragePrebuildInventoryQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The average amount of prebuild inventory for the listed Product at the Facility. This is calculated based on the average between Starting and Ending Prebuild Inventory Quantities."
      },
      {
        "Column Name": "StartingPrebuildInventoryQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The starting amount of prebuild inventory for the listed Product at the Facility."
      },
      {
        "Column Name": "EndingPrebuildInventoryQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The ending amount of prebuild inventory for the listed Product at the Facility."
      },
      {
        "Column Name": "MaxTurnEstimatedInventoryQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The estimated amount of inventory located at the Facility that is attributed to Inventory Turns as specified in the Inventory Policies table."
      },
      {
        "Column Name": "InventoryQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the quantity is expressed in terms of."
      },
      {
        "Column Name": "AveragePrebuildInventoryVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The average amount of prebuild inventory for the listed Product at the Facility. This is calculated based on the average between Starting and Ending Prebuild Inventory Volumes."
      },
      {
        "Column Name": "StartingPrebuildInventoryVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The starting amount of prebuild inventory for the listed Product at the Facility."
      },
      {
        "Column Name": "EndingPrebuildInventoryVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The ending amount of prebuild inventory for the listed Product at the Facility."
      },
      {
        "Column Name": "MaxTurnEstimatedInventoryVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The estimated amount of inventory located at the Facility that is attributed to Inventory Turns as specified in the Inventory Policies table."
      },
      {
        "Column Name": "InventoryVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the volume is expressed in terms of."
      },
      {
        "Column Name": "AveragePrebuildInventoryWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The average amount of prebuild inventory for the listed Product at the Facility. This is calculated based on the average between Starting and Ending Prebuild Inventory Weights."
      },
      {
        "Column Name": "StartingPrebuildInventoryWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The starting amount of prebuild inventory for the listed Product at the Facility."
      },
      {
        "Column Name": "EndingPrebuildInventoryWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The ending amount of prebuild inventory for the listed Product at the Facility."
      },
      {
        "Column Name": "MaxTurnEstimatedInventoryWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The estimated amount of inventory located at the Facility that is attributed to Inventory Turns as specified in the Inventory Policies table."
      },
      {
        "Column Name": "InventoryWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the weight is expressed in terms of."
      },
      {
        "Column Name": "TotalInventoryCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Total Inventory Cost for the listed Product / Facility / Period combination. This is calculated as the sum of PreBuild Inventory Holding Cost, Turn Estimated Inventory Holding Cost and Inventory Storage Cost."
      },
      {
        "Column Name": "PrebuildHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The holding cost charged to the amount of average prebuild inventory. This is determined based on the holding cost percentage in the Inventory Policies table and the Product's value."
      },
      {
        "Column Name": "TurnEstimatedHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The holding cost charged to the average amount of turn estimated inventory which is calculated as Max Turn Estimated Inventory / 2. The cost is determined based on the holding cost percentage in the Inventory Policies table and the Product's value."
      },
      {
        "Column Name": "StorageCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost of storage for the Product at the Facility. This cost is separate from any holding costs and is described in the Unit Storage Cost field in the Inventory Policies table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The latitude of the Facility."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The longitude of the Facility."
      }
    ]
  },
  "OptimizationNetworkRiskMetrics": {
    "type": "Output",
    "description": "The OptimizationNetworkRiskMetrics table provides detailed information on the risk associated with network activities in a specific scenario. It includes NetworkRiskScore, ProductStockingPointCountRisk, ProductMakeAndSupplyCountRisk, TransportTimeRisk, TimeToImportRisk, and TimeToExportRisk, all calculated as weighted averages based on various risk factors. The table also includes ScenarioName and RiskRatingName for reference.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "NetworkRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk score associated with Network activities in this scenario. This is calculated as the weighted average of the Product Stocking Point Count Risk, Product Make And Supply Count Risk, Transport Time Risk, Time To Import Risk and Time To Export Risk."
      },
      {
        "Column Name": "ProductStockingPointCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the number of Facilities that the Product is stocked in Inventory. This is calculated as the weighted average of all Products Stocking Point Count Risk in the Optimization Product Risk Metrics table. The lower the number of stocking points, the higher the risk score."
      },
      {
        "Column Name": "ProductMakeAndSupplyCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the number of Facilities or Suppliers that the Product is either produced at or supplied from. This is calculated as the weighted average of the Make Adn Supply Count Risk in the Optimization Product Risk Metrics table.  The lower the number of production or supply locations, the higher the risk."
      },
      {
        "Column Name": "TransportTimeRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with how long of a transport time the flows have. This is calculated based off of the weighted average of Transport Time Risk reported in the Optimization Flow Summary table."
      },
      {
        "Column Name": "TimeToImportRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with how long it can take imported products to clear customs. This is calculated based off of the weighted average of Time To Import Risk in the Optimization Flow Summary table."
      },
      {
        "Column Name": "TimeToExportRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with how long it can take exported products to clear customs. This is calculated based off of the weighted average of Time To Export Risk in the Optimization Flow Summary table."
      }
    ]
  },
  "OptimizationNetworkSummary": {
    "type": "Output",
    "description": "The OptimizationNetworkSummary table provides a summary of the optimization results related to the network aspects of the scenario run. This includes information on total transportation costs, shipment costs, in-transit holding costs, duty costs, sourcing costs, fixed operating costs, fixed startup costs, fixed closing costs, inbound and outbound handling costs, stocking and destocking costs, process costs, and user-defined costs. Additionally, the table may include details on primary risk ratings and risk scores associated with the scenario.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "NEOVersion",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The version of the NEO solver that was used for the scenario run."
      },
      {
        "Column Name": "DARTVersion",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The version of the DART solver that was used for the scenario run."
      },
      {
        "Column Name": "RunStartTime",
        "Data Type": "Timestamp",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Date/Time when the scenario was run."
      },
      {
        "Column Name": "TotalRunTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total time taken for the scenario run to complete. Total Run Time will be expressed in minutes."
      },
      {
        "Column Name": "SolveTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The solve time taken during the scenario run. Solve Time will be expressed in minutes."
      },
      {
        "Column Name": "OptimizationGapPercentage",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The gap percentage of the solution that was returned for the scenario."
      },
      {
        "Column Name": "ResourceSize",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The size of the solver resource that was selected to run the optimization."
      },
      {
        "Column Name": "ConsumedMemory",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The amount of memory (GB) that was consumed during the optimization run."
      },
      {
        "Column Name": "SolveType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The type of solve that was run. This will be one of Single Objective, Sequential Solve, or Infeasibility Diagnosis."
      },
      {
        "Column Name": "SolveStatus",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The status of the optimization run."
      },
      {
        "Column Name": "TotalSupplyChainCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost of the scenario."
      },
      {
        "Column Name": "TotalRevenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total revenue generated from all of the satisfied demand records in the scenario."
      },
      {
        "Column Name": "TotalProfit",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total profit of the scenario, calculated as Total Revenue - Total Supply Chain Cost."
      },
      {
        "Column Name": "TotalServedDemandQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total quantity of demand that was served in the scenario run."
      },
      {
        "Column Name": "TotalUnservedDemandQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total quantity of demand that went unserved in this scenario run."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the quantities are expressed in terms of."
      },
      {
        "Column Name": "TotalServedDemandVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total volume of demand that was served in the scenario run."
      },
      {
        "Column Name": "TotalUnservedDemandVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total volume of demand that went unserved in this scenario run."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the volumes are expressed in terms of."
      },
      {
        "Column Name": "TotalServedDemandWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total weight of demand that was served in the scenario run."
      },
      {
        "Column Name": "TotalUnservedDemandWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total weight of demand that went unserved in this scenario run."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the weights are expressed in terms of."
      },
      {
        "Column Name": "TotalTransportationCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to the Unit Costs of the Transportation Policies. This is taken as the total Transportation Cost from the Optimization Flow Summary."
      },
      {
        "Column Name": "TotalFuelSurchargeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to the Fuel Surcharge of the Transportation Policies. This is taken as the total Fuel Surcharge Cost from the Optimization Flow Summary."
      },
      {
        "Column Name": "TotalShipmentCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to the Fixed Shipment Costs of the Transportation Policies. This is taken as the total Shipment Cost in the Optimization Flow Summary. It can also be found in the Optimization Shipment Summary table."
      },
      {
        "Column Name": "TotalInTransitHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to In Transit Holding Costs. This is taken as the total In Transit Holding Cost from the Optimization Flow Summary table."
      },
      {
        "Column Name": "TotalDutyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to the Duty Rate in the Transportation Policies. This is taken as the total Duty Cost from the Optimization Flow Summary table."
      },
      {
        "Column Name": "TotalUnservedDemandPenaltyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total Penalty Cost resulted from not serving a customer demand at full quantity.."
      },
      {
        "Column Name": "TotalProductionCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to the Unit Costs of the Production Policies. This is taken as the total Production Cost from the Optimization Production Summary table."
      },
      {
        "Column Name": "TotalPrebuildHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to the holding cost of pre build inventory. This is taken as the total Prebuild Holding Cost from the Optimization Inventory Summary table."
      },
      {
        "Column Name": "TotalTurnEstimatedHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to the holding cost of turn estimated inventory. This is taken as the total Turn Estimated Holding Cost from the Optimization Inventory Summary table."
      },
      {
        "Column Name": "TotalStorageCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to the storage cost. This is taken as the total Storage Cost from the Optimization Inventory Summary table."
      },
      {
        "Column Name": "TotalSourcingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to sourcing from either Customer Fulfillment, Replenishment or Procurement Policy Unit Sourcing Cost. This is taken as the total Sourcing Cost from the Optimization Flow Summary table."
      },
      {
        "Column Name": "TotalFixedOperatingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to fixed operating costs in the model. This is taken as the sum of Fixed Operating Cost from the Optimization Facility Summary and Optimization WorkCenter Summary tables."
      },
      {
        "Column Name": "TotalFixedStartupCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to fixed startup costs in the model. This is taken as the sum of Fixed Startup Cost from the Optimization Facility Summary and Optimization Work Center Summary tables."
      },
      {
        "Column Name": "TotalFixedClosingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to fixed closing costs in the model. This is taken as the sum of Fixed Closing Cost from the Optimization Facility Summary and Optimization Work Center Summary tables."
      },
      {
        "Column Name": "TotalInboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to inbound handling cost. This is taken as the total Inbound Handling Cost from the Optimization Warehousing Summary table."
      },
      {
        "Column Name": "TotalOutboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to outbound handling cost. This is taken as the total Outbound Handling Cost from the Optimization Warehousing Summary table."
      },
      {
        "Column Name": "TotalStockingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The total cost attributed to stocking cost. This is taken as the total Stocking Cost from the Optimization Warehousing Summary table."
      },
      {
        "Column Name": "TotalDestockingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The total cost attributed to destocking cost. This is taken as the total Destocking Cost from the Optimization Warehousing Summary table."
      },
      {
        "Column Name": "TotalProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to process unit costs. This is taken as the total Process Cost from the Optimization Process Summary table."
      },
      {
        "Column Name": "TotalSupplyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The total cost of introducing products at the suppliers. This is taken as the total Supply Cost from the Optimization Supply Summary table."
      },
      {
        "Column Name": "TotalUserDefinedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to user defined costs. This is taken as the total Cost from the Optimization User Defined Cost Summary table."
      },
      {
        "Column Name": "TotalCO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total CO2 emissions."
      },
      {
        "Column Name": "TotalCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost attributed to CO2 Emissions."
      },
      {
        "Column Name": "PrimaryRiskRating",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The Primary Risk Rating that is specified in the Model Settings. Details on all Risk Ratings can be found in the Risk Metrics Summary table."
      },
      {
        "Column Name": "RiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk score associated with this scenario. Details on the risk score can be found in the Optimization Risk Metrics Summary table.  The Risk Score is the weighted sum of Customer, Facility, Supplier, and Network Risk, and is populated for the Primary Risk Rating that is specified in the Model Settings."
      }
    ]
  },
  "OptimizationProcessSummary": {
    "type": "Output",
    "description": "The OptimizationProcessSummary table provides a summary of key information related to the optimization process, including details on the type of process, work center name, processed quantity, volume, weight, time, cost, location coordinates, scenario name, facility name, product name, process name, step names, and period details. This table is likely used to analyze and optimize various aspects of production processes within a facility or organization.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "StartingPeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The Period in which production begins. For any Processes where the resulting processing time is less than the period length, Starting and Completion Periods will be the same."
      },
      {
        "Column Name": "CompletionPeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The Period in which production completes. For any Processes where the resulting processing time is less than the period length, Starting and Completion Periods will be the same."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the Facility where the Process was used."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the Product for which the Process was used."
      },
      {
        "Column Name": "ProcessName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the Process."
      },
      {
        "Column Name": "ProcessType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The type of the Process. This will be determined by the policy table that the Process was assigned to and will be one of Production, Stocking, Destocking, Loading or Unloading."
      },
      {
        "Column Name": "CurrentStepName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The Step Name that the specific records are being reported for."
      },
      {
        "Column Name": "NextStepName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "In the case of multi-step Processes, the Step Name of the next step that was used will be reported here."
      },
      {
        "Column Name": "WorkCenterName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The name of the Work Center that was used to complete the current step of the Process."
      },
      {
        "Column Name": "ProcessedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The quantity of the listed Product that was processed by the listed Process Step."
      },
      {
        "Column Name": "ProcessedQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the quantity is expressed in terms of."
      },
      {
        "Column Name": "ProcessedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The volume of the listed Product that was processed by the listed Process Step."
      },
      {
        "Column Name": "ProcessedVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the volume is expressed in terms of."
      },
      {
        "Column Name": "ProcessedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The weight of the listed Product that was processed by the listed Process Step."
      },
      {
        "Column Name": "ProcessedWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the weight is expressed in terms of."
      },
      {
        "Column Name": "ProcessedTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The time taken for the production of this Process Step. This is taken from the Processing Rate and the Fixed Time from the Processes table."
      },
      {
        "Column Name": "ProcessedTimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the time is expressed in terms of."
      },
      {
        "Column Name": "ProcessUnitCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The variable cost for the listed process step. This is specified in the Unit Cost field of the Processes table."
      },
      {
        "Column Name": "ProcessFixedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The fixed cost for the listed process step. This is specified in the Fixed Cost field of the Processes table."
      },
      {
        "Column Name": "CO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The CO2 emissions from this process."
      },
      {
        "Column Name": "CO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The cost attributed to CO2 Emissions for this process."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The latitude of the Facility."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The longitude of the Facility."
      }
    ]
  },
  "OptimizationProductRiskMetrics": {
    "type": "Output",
    "description": "The table OptimizationProductRiskMetrics provides risk metrics related to different aspects of a product, such as the number of stocking points, make and supply locations, and overall risk rating. It also includes the scenario name, period name, and the specific product name for which the risk metrics are being reported. This table allows for the analysis and comparison of different products based on their associated risks.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "PeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[]",
        "Explanation": "The time period that the results are reported for."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[]",
        "Explanation": "The name of the Product."
      },
      {
        "Column Name": "StockingPointCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The risk associated with the number of Facilities that the Product is stocked in Inventory. The lower the number of stocking points, the higher the risk."
      },
      {
        "Column Name": "MakeAndSupplyCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The risk associated with the number of Facilities or Suppliers that the Product is either produced at or supplied from. The lower the number of production or supply locations, the higher the risk."
      }
    ]
  },
  "OptimizationProductionSummary": {
    "type": "Output",
    "description": "The OptimizationProductionSummary table provides a summary of production optimization results for various Facility-Product combinations. It includes information such as production quantity, volume, weight, cost, time, location coordinates, scenario name, period details, facility name, product name, bill of material name, and process name. It is a comprehensive overview of the production outcomes in a structured format for analysis and decision-making purposes.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "StartingPeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The Period in which production begins. For any Facility, Product combinations where production time is less than the period length, Starting and Completion Periods will be the same."
      },
      {
        "Column Name": "CompletionPeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The Period in which production completes. For any Facility, Product combinations where production time is less than the period length, Starting and Completion Periods will be the same."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the Facility."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the Product."
      },
      {
        "Column Name": "BOMName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the Bill of Material that was used to make the listed Product. If no BOM was specified, this will be left blank."
      },
      {
        "Column Name": "ProcessName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the Process that was used to make the listed product. If no Process was specified, this will be blank."
      },
      {
        "Column Name": "ProductionQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The quantity of the listed Product produced at the specified Facility."
      },
      {
        "Column Name": "ProductionQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the quantity is expressed in terms of."
      },
      {
        "Column Name": "ProductionVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The volume of the listed Product produced at the specified Facility."
      },
      {
        "Column Name": "ProductionVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the volume is expressed in terms of."
      },
      {
        "Column Name": "ProductionWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The weight of the listed Product produced at the specified Facility."
      },
      {
        "Column Name": "ProductionWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the weight is expressed in terms of."
      },
      {
        "Column Name": "ProductionCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The policy cost associated with the production activity for this Facility Product combination. This is specified in the Production Policies table as Unit Cost."
      },
      {
        "Column Name": "ProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost associated with the production process used for this Facility Product combination. This is specified in the Unit Cost of the Processes table for the Process Name that was referenced in the Production Policies table for the listed Facility Product combination."
      },
      {
        "Column Name": "ProductionTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The time taken for the production of this Facility Product combination. This is taken from the Production Rate from the Production Policies table, unless a process is assigned to the Production Policy record, then the Processing Rate from the Process table is used."
      },
      {
        "Column Name": "ProductionTimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the time is expressed in terms of."
      },
      {
        "Column Name": "CO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The CO2 emissions from this production activity."
      },
      {
        "Column Name": "CO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost attributed to CO2 Emissions for this production activity."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The latitude of the Facility."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The longitude of the Facility."
      }
    ]
  },
  "OptimizationRiskMetricsSummary": {
    "type": "Output",
    "description": "The Optimization Risk Metrics Summary table provides a consolidated overview of the risk scores associated with different components of the scenario, such as Customer Risk, Facility Risk, Supplier Risk, and Network Risk. It shows the weighted average of these risks, along with the Risk Rating that these metrics are reported for. This table serves as a high-level summary of the overall risk assessment for the scenario.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "RiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk score associated with this scenario. This is calculated as the weighted average of the Customer Risk, Facility Risk, Supplier Risk and Network Risk."
      },
      {
        "Column Name": "CustomerRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with Customers in this scenario. More details on the Risk components can be found in the Optimization Customer Summary and Optimization Customer Risk Metrics tables."
      },
      {
        "Column Name": "FacilityRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with Facilities in this scenario. More details on the Risk components can be found in the Optimization Facility Summary and Optimization Facility Risk Metrics tables."
      },
      {
        "Column Name": "SupplierRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with Suppliers in this scenario. More details on the Risk components can be found in the Optimization Supplier Summary and Optimization Supplier Risk Metrics tables."
      },
      {
        "Column Name": "NetworkRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with Network activities in this scenario. More details on the Risk components can be found in the Optimization Network Risk Metrics and Optimization Product Risk Metrics tables."
      },
      {
        "Column Name": "DARTVersion",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The version of the DART solver that was used for the scenario run."
      }
    ]
  },
  "OptimizationSequentialObjectiveSummary": {
    "type": "Output",
    "description": "The OptimizationSequentialObjectiveSummary table provides a summary of the results of sequential optimization runs. It includes information such as the level of optimization, the type of constraint used, the value of the constraint, the calculated objective value, the scenario name, the type of objective being reported, and the user-defined cost or variable for which the objective is being defined. This table allows users to track the progression of optimization and analyze the performance of the objectives at each level.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the scenario the results are saved for.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "ObjectiveType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The type of the sequential objective that results are being reported for.",
        "NEO Supported": "Yes",
        "THROG Supported": NaN
      },
      {
        "Column Name": "UserDefinedObjectiveName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The User Defined Cost or User Defined Variable for which we are defining the Objective. If nothing is specified, All Costs/Variables will be considered.",
        "NEO Supported": "Yes",
        "THROG Supported": NaN
      },
      {
        "Column Name": "Level",
        "Data Type": "int",
        "Primary Key": "PK",
        "Engine": "[NEO]",
        "Explanation": "The Level of the sequential optimization.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "ConstraintType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The ConstraintType of the objective for the current level: 'Optimized, Unbounded, Lower Bound, Upper Bound",
        "NEO Supported": "Yes",
        "THROG Supported": NaN
      },
      {
        "Column Name": "ConstraintValue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The value of the upper/lower bound constraint created using the objective value and the tolerance.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "ObjectiveValue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The value of the listed Objective that was calculated at the end of the current Level solve.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      }
    ]
  },
  "OptimizationShipmentSummary": {
    "type": "Output",
    "description": "The OptimizationShipmentSummary table contains data on the shipments that were optimized for efficiency and cost effectiveness. It includes information such as the number of shipments, shipment cost, shipment size, origin and destination locations, scenario name, time period, product group, and transportation mode used for each shipment. This table provides a summary of the optimized shipment data for analysis and decision-making purposes.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "PeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The time period that the results are reported for."
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The Facility or Supplier that the shipment originated from."
      },
      {
        "Column Name": "DestinationName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The Customer or Facility location that the shipment arrived to."
      },
      {
        "Column Name": "ProductGroupName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The Product Group the shipment record is reported for. This can be listed as an individual product if the Product Name in the Transportation Policies table was specified as an individual product and a Fixed Cost was entered."
      },
      {
        "Column Name": "ModeName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The Transportation Mode used for this shipment."
      },
      {
        "Column Name": "Shipments",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The number of shipments that moved along the transportation arc specified. This is calculated as the Flow Quantity / Average Shipment Size and will consider the Flow Quantity across all of the Products that are captured in the listed Product Group."
      },
      {
        "Column Name": "ShipmentCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost associated with the number of shipments that were sent. This is specified in the Fixed Cost column of the Transportation Policies table."
      },
      {
        "Column Name": "ShipmentSize",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The shipment  size that was used to calculate the number of shipments. This is specified in the Average Shipment Size field of the Transportation Polices table. In the event that Average Shipment Size is not filled out in the Transportation Policies table, the Average Shipment Size of the Transportation Modes table will be used."
      },
      {
        "Column Name": "ShipmentSizeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the Shipment Size is expressed in terms of."
      },
      {
        "Column Name": "OriginLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The latitude of the Origin location."
      },
      {
        "Column Name": "OriginLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The longitude of the Origin location."
      },
      {
        "Column Name": "DestinationLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The latitude of the Destination location."
      },
      {
        "Column Name": "DestinationLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The longitude of the Destination location."
      }
    ]
  },
  "OptimizationSupplierRiskMetrics": {
    "type": "Output",
    "description": "The OptimizationSupplierRiskMetrics table provides detailed information on the risk scores associated with each Supplier in the model. This includes the Supplier's Concentration Risk, Utilization Risk, Geographic Risk, and User Defined Risk, all of which are factored into the overall Supplier Risk Score. The table also includes the latitude and longitude of each Supplier, as well as the Scenario Name and Risk Rating Name for which the risk metrics are reported.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "SupplierName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the Supplier."
      },
      {
        "Column Name": "SupplierRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk score associated with this Supplier. This is based on a weighted average of the Supplier's Concentration Risk, Utilization Risk, Geographic Risk and User Defined Risk across the entire model horizon."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated the with the throughput concentration at the Supplier location. This is reported as a weighted average based off of the Concentration Risk in the Optimization Supplier Summary table."
      },
      {
        "Column Name": "UtilizationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with how close to capacity the Supplier is during the model solve."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the geographic location of the Supplier. This is a weighted average of several geographic components that are reported in greater detail in the Optimization Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Suppliers table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The latitude of the Supplier."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The longitude of the Supplier."
      }
    ]
  },
  "OptimizationSupplierSummary": {
    "type": "Output",
    "description": "The OptimizationSupplierSummary table provides a summary of key metrics and information related to suppliers, including the total supplied quantity, volume, and weight, as well as the supplier's capacity, utilization, and risk score. It also includes data on concentration risk, utilization risk, geographic risk, and user-defined risk, along with the supplier's geographic location coordinates, scenario name, period name, and the supplier's name.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "PeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The time period that the results are reported for."
      },
      {
        "Column Name": "SupplierName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the Supplier."
      },
      {
        "Column Name": "TotalSupplyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The total cost of introducing products at the supplier. This is defined as the Unit Cost in the Suppliers Capabilities table.."
      },
      {
        "Column Name": "TotalSuppliedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The quantity across all products that was supplied by the Supplier in the listed Period."
      },
      {
        "Column Name": "SuppliedQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that quantity is expressed in terms of."
      },
      {
        "Column Name": "TotalSuppliedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The volume across all products that was supplied by the Supplier in the listed Period."
      },
      {
        "Column Name": "SuppliedVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that volume is expressed in terms of."
      },
      {
        "Column Name": "TotalSuppliedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The weight across all products that was supplied by the Supplier in the listed Period."
      },
      {
        "Column Name": "SuppliedWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that weight is expressed in terms of."
      },
      {
        "Column Name": "SupplierCapacity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The capacity for the Supplier. This is specified in the Max Supply Amount field of the Suppliers table."
      },
      {
        "Column Name": "SupplierCapacityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the Supplier capacity is expressed in terms of."
      },
      {
        "Column Name": "SupplierUtilization",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The capacity utilization of the Supplier for this period. Utilization is calculated as the total supplied quantity divided by the Supplier Capacity."
      },
      {
        "Column Name": "SupplierRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk score associated with this Supplier. This is based on a weighted average of the Supplier's Concentration Risk, Utilization Risk, Geographic Risk and User Defined Risk."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated the with the throughput concentration of the Supplier location. This is calculated based on the total Supplied Quantity of the Supplier relative to the total demanded quantity across all products for the period."
      },
      {
        "Column Name": "UtilizationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with how close to capacity the Supplier is during the model solve."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the geographic location of the Supplier. This is a weighted average of several geographic components that are reported in greater detail in the Optimization Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Suppliers table."
      },
      {
        "Column Name": "TotalCO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total CO2 emissions from all supply activities at this Supplier. This is taken as the sum of all CO2 Emissions from the OptimizationSupplierSummary table."
      },
      {
        "Column Name": "TotalCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost attributed to CO2 Emissions for this Supplier."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The latitude of the Supplier."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The longitude of the Supplier."
      }
    ]
  },
  "OptimizationSupplySummary": {
    "type": "Output",
    "description": "The Optimization Supply Summary table provides a summary of the supply data for different suppliers and products in a specific period. It includes information such as the quantity, volume, and weight of the product supplied by each supplier, as well as the capacity for each supplier/product pairing and the utilization of that capacity. Additionally, the table includes the geographical coordinates of the suppliers, the name of the scenario the results are saved for, and the period the results are reported for.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "PeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The time period that the results are reported for."
      },
      {
        "Column Name": "SupplierName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the Supplier."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the Product."
      },
      {
        "Column Name": "SupplyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The cost of introducing the product at the supplier. This is defined as the Unit Cost in the Suppliers Capabilities table.."
      },
      {
        "Column Name": "SuppliedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The quantity of the listed product that was supplied by this supplier in the listed period."
      },
      {
        "Column Name": "SuppliedQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the quantity is expressed in terms of."
      },
      {
        "Column Name": "SuppliedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The volume of the listed product that was supplied by this supplier in the listed period."
      },
      {
        "Column Name": "SuppliedVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the volume is expressed in terms of."
      },
      {
        "Column Name": "SuppliedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The weight of the listed product that was supplied by this supplier in the listed period."
      },
      {
        "Column Name": "SuppliedWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the weight is expressed in terms of."
      },
      {
        "Column Name": "SupplyCapacity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The capacity for the Supplier / Product pairing. This is specified in the Max Supply Amount field of the Supplier Capabilities table."
      },
      {
        "Column Name": "SupplyCapacityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that the Supply Capacity is expressed in terms of."
      },
      {
        "Column Name": "SupplyUtilization",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Supply Utilization of the Supplier / Product combination for this period. Utilization is calculated as the total supplied quantity divided by the Supply Capacity."
      },
      {
        "Column Name": "CO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The CO2 emissions from this supply activity. This is specified in the CO2 Emissions column in the Supplier Capabilities table."
      },
      {
        "Column Name": "CO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost attributed to CO2 Emissions for this supply activity."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The latitude of the Supplier."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The longitude of the Supplier."
      }
    ]
  },
  "OptimizationUserDefinedCostSummary": {
    "type": "Output",
    "description": "The OptimizationUserDefinedCostSummary table displays a summary of user-defined costs applied during an optimization model solve. It includes information such as the variable name, its value for the model solve, the amount of the variable within the specified cost band, the cost charged against that variable, the scenario name for which the results are saved, the name of the user-defined cost applied, and details on step costs if applicable. This table provides an overview of how various user-defined costs impact the optimization results.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "CostName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the User Defined Cost that is specified in the Cost Name field of the User Defined Costs table."
      },
      {
        "Column Name": "VariableName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Variable Name that captures the behavior the User Defined Cost is being applied over. Variables are specified in the User Defined Variables table."
      },
      {
        "Column Name": "VariableValue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The value that the variable has taken on for the model solve. This value will be used as the amount that the user defined cost is charged against."
      },
      {
        "Column Name": "StepCostBand",
        "Data Type": "double",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "If a step cost is used for the User Defined Cost, each band is reported in its own row. The lower bound of the band will be listed in the Step Cost Band field."
      },
      {
        "Column Name": "VariableInCostBand",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The amount of the variable that falls within the listed band."
      },
      {
        "Column Name": "Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost charged against the variable that falls within the listed band."
      }
    ]
  },
  "OptimizationUserDefinedVariableSummary": {
    "type": "Output",
    "description": "This table summarizes the user-defined variables used in different optimization scenarios, listing the variable name, its corresponding value, and the name of the scenario it pertains to.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "VariableName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the User Defined Variable."
      },
      {
        "Column Name": "VariableValue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The value of the Variable for the listed scenario."
      }
    ]
  },
  "OptimizationUserDefinedVariableTermSummary": {
    "type": "Output",
    "description": "The OptimizationUserDefinedVariableTermSummary table contains results of user-defined variables and their components from optimization runs. It tracks variable terms, their values, and scaled calculations, enabling analysis of custom optimization metrics and parameters.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "VariableName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the User Defined Variable."
      },
      {
        "Column Name": "TermName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the Term in the specified User Defined Variable."
      },
      {
        "Column Name": "TermValue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The value of the Term in the specified User Defined Variable."
      },
      {
        "Column Name": "ScaledTermValue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The value of the Term in the specified User Defined Variable multiplied by Coefficient."
      }
    ]
  },
  "OptimizationUtilizationRiskMetrics": {
    "type": "Output",
    "description": "The table OptimizationUtilizationRiskMetrics contains data related to various risk metrics associated with utilization in an optimization context. This includes Throughput Utilization Risk, Storage Utilization Risk, and Work Center Utilization Risk. The table also includes information such as the scenario name, risk rating name, site name, site type (Facility or Supplier), latitude, longitude, and period name. This table is used to analyze and assess the risk level of utilization in different scenarios and locations.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "SiteName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "SiteType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "One of Facility or Supplier"
      },
      {
        "Column Name": "PeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "UtilizationRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ThroughputUtilizationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "StorageUtilizationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "WorkCenterUtilizationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": NaN
      }
    ]
  },
  "OptimizationValidationErrorReport": {
    "type": "Output",
    "description": "The table OptimizationValidationErrorReport displays information about validation errors found by the optimization engine during the optimization process. It includes details such as the validation rule, error message, severity, identified value, action taken, replaced value, count of occurrences, scenario name, table name, column name, and error type. This table helps track and manage errors identified during optimization to ensure data accuracy and integrity.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, TRIAD, HOPPER]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "TableName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, TRIAD, HOPPER]",
        "Explanation": "The name of the table where the error has identified."
      },
      {
        "Column Name": "ColumnName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, TRIAD, HOPPER]",
        "Explanation": "The name of the column where the error has been identified."
      },
      {
        "Column Name": "ValidationRule",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO, TRIAD, HOPPER]",
        "Explanation": "The name of the internal validation rule that the optimization engine found a problem in."
      },
      {
        "Column Name": "ErrorType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, TRIAD, HOPPER]",
        "Explanation": "The listed type of error associated with the validation rule."
      },
      {
        "Column Name": "ErrorMessage",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO, TRIAD, HOPPER]",
        "Explanation": "A description of the reported error."
      },
      {
        "Column Name": "Severity",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO, TRIAD, HOPPER]",
        "Explanation": "The severity of the identified error, this will be one of Lowest, Low, Medium or High severity."
      },
      {
        "Column Name": "IdentifiedValue",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO, TRIAD, HOPPER]",
        "Explanation": "The value that has been identified as the source of the error"
      },
      {
        "Column Name": "Action",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO, TRIAD, HOPPER]",
        "Explanation": "If corrective action was taken, the data adjustment performed by the solver will be listed here."
      },
      {
        "Column Name": "ValueReplaced",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO, TRIAD, HOPPER]",
        "Explanation": "If a value had to be replaced, the updated value will be listed here."
      },
      {
        "Column Name": "Count",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[NEO, TRIAD, HOPPER]",
        "Explanation": "The number of times that the error occurred."
      }
    ]
  },
  "OptimizationWarehousingSummary": {
    "type": "Output",
    "description": "The OptimizationWarehousingSummary table provides a summary of key data related to the optimization of warehousing operations at a Facility for various Products. This includes information on costs associated with inbound handling, stocking, destocking, and outbound handling, as well as quantities, volumes, and weights of Products flowing in and out of the Facility. The table also includes data on the location of the Facility, the scenario and time period the results are for, and specific details about the Facility and Product names.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "PeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The time period that the results are reported for."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the Facility."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the Product."
      },
      {
        "Column Name": "InboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost associated with inbound handling at the Facility for the listed Product. This is specified in the Inbound Handling Cost field of the Warehousing Policies table."
      },
      {
        "Column Name": "StockingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The cost associated with placing the listed Product into inventory at the Facility. This is specified in the Stocking Unit Cost field in the Warehousing Policies table."
      },
      {
        "Column Name": "DestockingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The cost associated with picking the listed Product from inventory at the Facility. This is specified in the Destocking Unit Cost field in the Warehousing Policies table."
      },
      {
        "Column Name": "OutboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost associated with outbound handling for the listed Product as it leaves the Facility. This is specified in the Outbound Handling Cost field of the Warehousing Policies table."
      },
      {
        "Column Name": "InboundQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The quantity of inbound flow for the listed Product into the Facility."
      },
      {
        "Column Name": "StockedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The quantity of the listed product that was placed into inventory at the Facility"
      },
      {
        "Column Name": "DestockedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The quantity of the listed product that was taken out of inventory at the Facility"
      },
      {
        "Column Name": "OutboundQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The quantity of outbound flow for the listed Product out of the Facility."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that quantity is expressed in terms of."
      },
      {
        "Column Name": "InboundVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The volume of inbound flow for the listed Product into the Facility."
      },
      {
        "Column Name": "StockedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The volume of the listed product that was placed into inventory at the Facility"
      },
      {
        "Column Name": "DestockedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The volume of the listed product that was taken out of inventory at the Facility"
      },
      {
        "Column Name": "OutboundVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The volume of outbound flow for the listed Product out of the Facility."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that volume is expressed in terms of."
      },
      {
        "Column Name": "InboundWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The weight of inbound flow for the listed Product into the Facility."
      },
      {
        "Column Name": "StockedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The weight of the listed product that was placed into inventory at the Facility"
      },
      {
        "Column Name": "DestockedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The weight of the listed product that was taken out of inventory at the Facility"
      },
      {
        "Column Name": "OutboundWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The weight of outbound flow for the listed Product out of the Facility."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that weight is expressed in terms of."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The latitude of the Facility."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The longitude of the Facility."
      }
    ]
  },
  "OptimizationWorkCenterSummary": {
    "type": "Output",
    "description": "The OptimizationWorkCenterSummary table provides a summary of key information related to Work Centers that have been optimized. This includes details such as the initial state and status of the Work Center, total cost, throughput metrics, utilization, risk, location coordinates, scenario name, period name, Work Center name, and Facility name. This table allows for a comprehensive overview of the optimization results for each Work Center in a given scenario and time period.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "PeriodName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The time period that the results are reported for."
      },
      {
        "Column Name": "WorkCenterName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO, DART]",
        "Explanation": "The name of the WorkCenter."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[NEO]",
        "Explanation": "The name of the Facility."
      },
      {
        "Column Name": "InitialState",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The initial state of the Work Center. This is specified in the Initial State field of the Work Centers table and will be one of Existing or Potential"
      },
      {
        "Column Name": "InitialStatus",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The Initial Status of the Work Center. This is specified in the Work Center Status field of the Work Centers table and will be one of Open, Closed or Consider."
      },
      {
        "Column Name": "OptimizedStatus",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The status of the Work Center based on the optimization's results. This will be one of Open, Closed or Consider."
      },
      {
        "Column Name": "TotalWorkCenterCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total cost associated with the Work Center. This will be reported as the sum of the Fixed Operating Cost, Fixed Startup Cost, Fixed Closing Cost and any associated Process Costs."
      },
      {
        "Column Name": "OperatingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The fixed operating cost of the Work Center. This is specified in the Fixed Operating Cost field of the Work Centers table."
      },
      {
        "Column Name": "StartupCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The startup cost of the Work Center. If a Work Center opens in a period then the fixed startup cost will be applied. This is specified in the Fixed Startup Cost field of the Work Centers table."
      },
      {
        "Column Name": "ClosingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The closing cost of the Work Center. If a Work Center closes in a period then the fixed closing cost will be applied. This is specified in the Fixed Closing Cost field of the Work Centers table."
      },
      {
        "Column Name": "TotalProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The cost of any Processes that were run using this Work Center. This will be the sum of Unit Cost and Fixed Cost specified in the Processes table for any processes that were used at this Work Center. More detailed Process costs can be found in the Optimization Process Summary table."
      },
      {
        "Column Name": "ThroughputQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total throughput quantity that the Work Center handled in the Period."
      },
      {
        "Column Name": "ThroughputQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that quantity is expressed in terms of."
      },
      {
        "Column Name": "ThroughputVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total throughput volume that the Work Center handled in the Period."
      },
      {
        "Column Name": "ThroughputVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that volume is expressed in terms of."
      },
      {
        "Column Name": "ThroughputWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total throughput weight that the Work Center handled in the period."
      },
      {
        "Column Name": "ThroughputWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that weight is expressed in terms of."
      },
      {
        "Column Name": "ThroughputTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total throughput time that the Work Center handled in the Period."
      },
      {
        "Column Name": "ThroughputTimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that time is expressed in terms of."
      },
      {
        "Column Name": "ThroughputCapacity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The throughput capacity for the Work Center. This is specified in the Throughput Capacity field of the Work Centers table."
      },
      {
        "Column Name": "ThroughputCapacityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The unit of measure that time is expressed in terms of."
      },
      {
        "Column Name": "ThroughputUtilization",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The utilization of the Work Center for this period. Utilization is calculated as the Throughput divided by the Throughput Capacity."
      },
      {
        "Column Name": "UtilizationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO, DART]",
        "Explanation": "The risk associated with how close the Work Center was to its specified capacity."
      },
      {
        "Column Name": "TotalCO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The total CO2 emissions at this Work Center."
      },
      {
        "Column Name": "TotalCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The total cost attributed to CO2 Emissions at this Work Center."
      },
      {
        "Column Name": "FixedCO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The fixed CO2 emissions at this Work Center. This is specified in the Fixed CO2 Emissions column of the Work Center table."
      },
      {
        "Column Name": "FixedCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The cost attributed to Fixed CO2 Emissions at this Work Center."
      },
      {
        "Column Name": "TotalProductionCO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The total CO2 emissions attributed to production at this Work Center."
      },
      {
        "Column Name": "TotalProductionCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The total cost attributed to CO2 emissions of production at this Work Center."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The latitude of the Facility."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The longitude of the Facility."
      }
    ]
  },
  "SimulationCustomerProductServiceSummary": {
    "type": "Output",
    "description": "The SimulationCustomerProductServiceSummary table provides a summary of simulation results for various services related to specific customer-product combinations. It includes data on placed lines, order quantities, volumes, weights, delivery details, backorders, cancellations, and on-time performance rates for each combination. Additionally, it includes information such as customer name, product name, latitude, longitude, scenario name, and statistics type for the simulation.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "CustomerName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the Customer."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the Product."
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "Simulations that were run for multiple replications will have outputs summarized into several statistics. The type of statistic being reported will be populated in this field. For a single replication simulation, the only Stat Type will be Mean."
      },
      {
        "Column Name": "PlacedLines",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were placed for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedLinesPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Customer / Product combination that were sourced from the primary location as specified in the Customer Fulfillment Policies ."
      },
      {
        "Column Name": "PlacedLinesNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Customer / Product combination that were sourced from a non-primary location as specified in the Customer Fulfillment Policies."
      },
      {
        "Column Name": "PlacedLinesMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Customer / Product combination that were sourced from multiple locations."
      },
      {
        "Column Name": "PlacedLinesUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Customer / Product combination that were undelivered. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedLinesOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Customer / Product combination that had the complete ordered quantity delivered on time."
      },
      {
        "Column Name": "PlacedLinesLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Customer / Product combination that had the complete ordered quantity delivered late."
      },
      {
        "Column Name": "PlacedLinesOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of lines delivered on time and in full for the listed Customer / Product combination. This is calculated as PlacedLines On Time In Full divided by Placed Lines."
      },
      {
        "Column Name": "PlacedLinesBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Customer / Product combination that were placed into backorder."
      },
      {
        "Column Name": "PlacedLinesCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Customer / Product combination that were cancelled."
      },
      {
        "Column Name": "PlacedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderQuantityPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Customer / Product combination that was sourced from the primary location as specified in the Customer Fulfillment Policies."
      },
      {
        "Column Name": "PlacedOrderQuantityNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Customer / Product combination that was sourced from a non-primary location as specified in the Customer Fulfillment Policies."
      },
      {
        "Column Name": "PlacedOrderQuantityMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Customer / Product combination that was sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Customer / Product combination that was undelivered. This would include quantity that was cancelled as well as quantity that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderQuantityOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered quantity across all lines that had the complete ordered quantity delivered on time for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderQuantityLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered quantity across all lines that had the complete ordered quantity delivered late for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderQuantityOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of quantity delivered on time and in full for the listed Customer / Product combination. This is calculated as Placed Order Quantity On Time In Full divided by Placed Order Quantity."
      },
      {
        "Column Name": "PlacedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Customer / Product combination that were placed into backorder."
      },
      {
        "Column Name": "PlacedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Customer / Product combination that was cancelled."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that quantity outputs are expressed in terms of."
      },
      {
        "Column Name": "PlacedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderVolumePrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Customer / Product combination that was sourced from the primary location as specified in the Customer Fulfillment Policies."
      },
      {
        "Column Name": "PlacedOrderVolumeNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Customer / Product combination that was sourced from a non-primary location as specified in the Customer Fulfillment Policies."
      },
      {
        "Column Name": "PlacedOrderVolumeMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Customer / Product combination that was sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Customer / Product combination that was undelivered. This would include volume that was cancelled as well as volume that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderVolumeOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered volume across all lines that had the complete ordered volume delivered on time for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderVolumeLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered volume across all lines that had the complete ordered volume delivered late for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderVolumeOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of volume delivered on time and in full for the listed Customer / Product combination. This is calculated as Placed Order volume On Time In Full divided by Placed Order volume."
      },
      {
        "Column Name": "PlacedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Customer / Product combination that were placed into backorder."
      },
      {
        "Column Name": "PlacedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Customer / Product combination that was cancelled."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that volume outputs are expressed in terms of."
      },
      {
        "Column Name": "PlacedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderWeightPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Customer / Product combination that was sourced from the primary location as specified in the Customer Fulfillment Policies."
      },
      {
        "Column Name": "PlacedOrderWeightNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Customer / Product combination that was sourced from a non-primary location as specified in the Customer Fulfillment Policies."
      },
      {
        "Column Name": "PlacedOrderWeightMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Customer / Product combination that was sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Customer / Product combination that was undelivered. This would include weight that was cancelled as well as weight that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderWeightOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered weight across all lines that had the complete ordered weight delivered on time for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderWeightLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered weight across all lines that had the complete ordered weight delivered late for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderWeightOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of weight delivered on time and in full for the listed Customer / Product combination. This is calculated as Placed Order weight On Time In Full divided by Placed Order weight."
      },
      {
        "Column Name": "PlacedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Customer / Product combination that were placed into backorder."
      },
      {
        "Column Name": "PlacedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Customer / Product combination that was cancelled."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that weight outputs are expressed in terms of."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The latitude of the Customer."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The longitude of the Customer."
      }
    ]
  },
  "SimulationCustomerProductServiceSummaryReplicationDetail": {
    "type": "Output",
    "description": "The Simulation Customer Product Service Summary Replication Detail table provides detailed information on the results of a simulation run for a specific scenario, including data on the number of lines, quantity, volume, and weight for each customer-product combination. It also includes information on the replication number, customer name, product name, and whether the items were sourced from primary or non-primary locations. The table allows for a comprehensive analysis of the fulfillment performance for each customer and product combination in the simulation.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": "The replication the results are saved for."
      },
      {
        "Column Name": "CustomerName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": "The name of the Customer."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": "The name of the Product."
      },
      {
        "Column Name": "PlacedLines",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were placed for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedLinesPrimarySourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Customer / Product combination that were sourced from the primary location as specified in the Customer Fulfillment Policies ."
      },
      {
        "Column Name": "PlacedLinesNonPrimarySourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Customer / Product combination that were sourced from a non-primary location as specified in the Customer Fulfillment Policies."
      },
      {
        "Column Name": "PlacedLinesMultiSourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Customer / Product combination that were sourced from multiple locations."
      },
      {
        "Column Name": "PlacedLinesUndelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Customer / Product combination that were undelivered. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedLinesOnTimeInFull",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Customer / Product combination that had the complete ordered quantity delivered on time."
      },
      {
        "Column Name": "PlacedLinesLateInFull",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Customer / Product combination that had the complete ordered quantity delivered late."
      },
      {
        "Column Name": "PlacedLinesOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of lines delivered on time and in full for the listed Customer / Product combination. This is calculated as PlacedLines On Time In Full divided by Placed Lines."
      },
      {
        "Column Name": "PlacedLinesBackordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Customer / Product combination that were placed into backorder."
      },
      {
        "Column Name": "PlacedLinesCancelled",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Customer / Product combination that were cancelled."
      },
      {
        "Column Name": "PlacedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderQuantityPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Customer / Product combination that was sourced from the primary location as specified in the Customer Fulfillment Policies."
      },
      {
        "Column Name": "PlacedOrderQuantityNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Customer / Product combination that was sourced from a non-primary location as specified in the Customer Fulfillment Policies."
      },
      {
        "Column Name": "PlacedOrderQuantityMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Customer / Product combination that was sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Customer / Product combination that was undelivered. This would include quantity that was cancelled as well as quantity that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderQuantityOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered quantity across all lines that had the complete ordered quantity delivered on time for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderQuantityLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered quantity across all lines that had the complete ordered quantity delivered late for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderQuantityOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of quantity delivered on time and in full for the listed Customer / Product combination. This is calculated as Placed Order Quantity On Time In Full divided by Placed Order Quantity."
      },
      {
        "Column Name": "PlacedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Customer / Product combination that were placed into backorder."
      },
      {
        "Column Name": "PlacedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Customer / Product combination that was cancelled."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that quantity outputs are expressed in terms of."
      },
      {
        "Column Name": "PlacedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderVolumePrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Customer / Product combination that was sourced from the primary location as specified in the Customer Fulfillment Policies."
      },
      {
        "Column Name": "PlacedOrderVolumeNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Customer / Product combination that was sourced from a non-primary location as specified in the Customer Fulfillment Policies."
      },
      {
        "Column Name": "PlacedOrderVolumeMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Customer / Product combination that was sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Customer / Product combination that was undelivered. This would include volume that was cancelled as well as volume that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderVolumeOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered volume across all lines that had the complete ordered volume delivered on time for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderVolumeLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered volume across all lines that had the complete ordered volume delivered late for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderVolumeOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of volume delivered on time and in full for the listed Customer / Product combination. This is calculated as Placed Order volume On Time In Full divided by Placed Order volume."
      },
      {
        "Column Name": "PlacedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Customer / Product combination that were placed into backorder."
      },
      {
        "Column Name": "PlacedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Customer / Product combination that was cancelled."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that volume outputs are expressed in terms of."
      },
      {
        "Column Name": "PlacedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderWeightPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Customer / Product combination that was sourced from the primary location as specified in the Customer Fulfillment Policies."
      },
      {
        "Column Name": "PlacedOrderWeightNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Customer / Product combination that was sourced from a non-primary location as specified in the Customer Fulfillment Policies."
      },
      {
        "Column Name": "PlacedOrderWeightMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Customer / Product combination that was sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Customer / Product combination that was undelivered. This would include weight that was cancelled as well as weight that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderWeightOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered weight across all lines that had the complete ordered weight delivered on time for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderWeightLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered weight across all lines that had the complete ordered weight delivered late for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderWeightOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of weight delivered on time and in full for the listed Customer / Product combination. This is calculated as Placed Order weight On Time In Full divided by Placed Order weight."
      },
      {
        "Column Name": "PlacedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Customer / Product combination that were placed into backorder."
      },
      {
        "Column Name": "PlacedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Customer / Product combination that was cancelled."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that weight outputs are expressed in terms of."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The latitude of the Customer."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The longitude of the Customer."
      }
    ]
  },
  "SimulationCustomerProductSummary": {
    "type": "Output",
    "description": "The SimulationCustomerProductSummary table provides key metrics and statistics for different Customer/Product combinations in a simulation scenario. It includes information such as the number of placed lines, order quantity, order volume, order weight, revenue generated, lost revenue, concentration risk, source count risk, geographic risk, user-defined risk, and geographic coordinates for each Customer/Product combination. Additionally, it includes details on the scenario name, Customer name, Product name, and the type of statistic being reported.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "CustomerName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the Customer."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the Product."
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "Simulations that were run for multiple replications will have outputs summarized into several statistics. The type of statistic being reported will be populated in this field. For a single replication simulation, the only Stat Type will be Mean."
      },
      {
        "Column Name": "TotalPlacedLines",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of lines that were placed for the listed Customer / Product combination."
      },
      {
        "Column Name": "TotalPlacedLinesDelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of Lines placed for the listed Customer / Product combination that were delivered"
      },
      {
        "Column Name": "TotalPlacedLinesUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of lines that were undelivered for the listed Customer / Product combination. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "TotalPlacedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Customer / Product combination."
      },
      {
        "Column Name": "TotalPlacedOrderQuantityDelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The total ordered quantity that was delivered for the listed Customer / Product combination."
      },
      {
        "Column Name": "TotalPlacedOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity that was undelivered for the listed Customer / Product combination. This would include quantity that was cancelled as well as quantity that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that quantity outputs are expressed in terms of."
      },
      {
        "Column Name": "TotalPlacedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Customer / Product combination."
      },
      {
        "Column Name": "TotalPlacedOrderVolumeDelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that was delivered for the listed Customer / Product combination."
      },
      {
        "Column Name": "TotalPlacedOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that was undelivered for the listed Customer / Product combination. This would include volume that was cancelled as well as volume that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that volume outputs are expressed in terms of."
      },
      {
        "Column Name": "TotalPlacedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Customer / Product combination."
      },
      {
        "Column Name": "TotalPlacedOrderWeightDelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that was delivered for the listed Customer / Product combination."
      },
      {
        "Column Name": "TotalPlacedOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that was undelivered for the listed Customer / Product combination. This would include weight that was cancelled as well as weight that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that weight outputs are expressed in terms of."
      },
      {
        "Column Name": "TotalRevenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total revenue generated for the listed Customer / Product combination. This is calculated as the corresponding Product Unit Price * Total Delivered Quantity."
      },
      {
        "Column Name": "TotalLostRevenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The revenue lost for the listed Customer / Product combination. This is calculated as the corresponding Product Unit Price * Total Placed Order Quantity Undelivered"
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The Concentration Risk score associated with this Customer / Product combination. Concentration Risk is based on what portion of the Customer's total ordered quantity the listed product represents. This will contribute to the model's Customer Risk score."
      },
      {
        "Column Name": "SourceCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The Source Count Risk metric associated with this Product for the Customer/ Product combination. Source Count Risk is determined based on the number of unique sources that are used to satisfy the Customer Orders for the listed product. This will contribute to the model's Customer Risk Score."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the geographic location of the Customer. This is a weighted average of several geographic components that are reported in greater detail in the Simulation Customer Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Customers table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The latitude of the Customer."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The longitude of the Customer."
      }
    ]
  },
  "SimulationCustomerProductSummaryReplicationDetail": {
    "type": "Output",
    "description": "The SimulationCustomerProductSummaryReplicationDetail table provides detailed information on various metrics and risk factors associated with specific Customer / Product combinations for a given scenario and replication number in a simulation. This includes data on placed lines, order quantities, order volumes, order weight, revenue, risk scores, geographic information, and user-defined risks. The table also includes the names of the customer, product, and scenario being analyzed.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The replication the results are saved for."
      },
      {
        "Column Name": "CustomerName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the Customer."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the Product."
      },
      {
        "Column Name": "TotalPlacedLines",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of lines that were placed for the listed Customer / Product combination."
      },
      {
        "Column Name": "TotalPlacedLinesDelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of Lines placed for the listed Customer / Product combination that were delivered"
      },
      {
        "Column Name": "TotalPlacedLinesUndelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of lines that were undelivered for the listed Customer / Product combination. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "TotalPlacedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Customer / Product combination."
      },
      {
        "Column Name": "TotalPlacedOrderQuantityDelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The total ordered quantity that was delivered for the listed Customer / Product combination."
      },
      {
        "Column Name": "TotalPlacedOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity that was undelivered for the listed Customer / Product combination. This would include quantity that was cancelled as well as quantity that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that quantity outputs are expressed in terms of."
      },
      {
        "Column Name": "TotalPlacedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Customer / Product combination."
      },
      {
        "Column Name": "TotalPlacedOrderVolumeDelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that was delivered for the listed Customer / Product combination."
      },
      {
        "Column Name": "TotalPlacedOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that was undelivered for the listed Customer / Product combination. This would include volume that was cancelled as well as volume that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that volume outputs are expressed in terms of."
      },
      {
        "Column Name": "TotalPlacedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Customer / Product combination."
      },
      {
        "Column Name": "TotalPlacedOrderWeightDelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that was delivered for the listed Customer / Product combination."
      },
      {
        "Column Name": "TotalPlacedOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that was undelivered for the listed Customer / Product combination. This would include weight that was cancelled as well as weight that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that weight outputs are expressed in terms of."
      },
      {
        "Column Name": "TotalRevenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total revenue generated for the listed Customer / Product combination. This is calculated as the corresponding Product Unit Price * Total Delivered Quantity."
      },
      {
        "Column Name": "TotalLostRevenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The revenue lost for the listed Customer / Product combination. This is calculated as the corresponding Product Unit Price * Total Placed Order Quantity Undelivered"
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The Concentration Risk score associated with this Customer / Product combination. Concentration Risk is based on what portion of the Customer's total ordered quantity the listed product represents. This will contribute to the model's Customer Risk score."
      },
      {
        "Column Name": "SourceCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The Source Count Risk metric associated with this Product for the Customer/ Product combination. Source Count Risk is determined based on the number of unique sources that are used to satisfy the Customer Orders for the listed product. This will contribute to the model's Customer Risk Score."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the geographic location of the Customer. This is a weighted average of several geographic components that are reported in greater detail in the Simulation Customer Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Customers table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The latitude of the Customer."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The longitude of the Customer."
      }
    ]
  },
  "SimulationCustomerRiskMetrics": {
    "type": "Output",
    "description": "The SimulationCustomerRiskMetrics table contains risk metrics for customers, including the CustomerRiskScore, ConcentrationRisk, SourceCountRisk, GeographicRisk, UserDefinedRisk, Latitude, Longitude, ScenarioName, RiskRatingName, CustomerName, and StatType. These metrics are used to calculate overall risk scores for customers in the simulation model.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "CustomerName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the Customer."
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "Simulations that were run for multiple replications will have outputs summarized into several statistics. The type of statistic being reported will be populated in this field. For a single replication simulation, the only Stat Type will be Mean."
      },
      {
        "Column Name": "CustomerRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk score associated with this Customer. This is based on a weighted average of the Concentration Risk, Source Count Risk, Geographic Risk and the User Defined Risk of the Customer across the entire model horizon.  The Customer Risk Score is used to calculate the overall Risk Score in the Simulation Risk Metrics Summary table."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated the with the demand concentration at the Customer location. This is reported as a weighted average over all Products based on the Concentration Risk in the Simulation Customer Product Summary table."
      },
      {
        "Column Name": "SourceCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the number of sources that the Customer uses across all products. This is reported as a weighted average over all Products based on the Source Count Risk in the Simulation Customer Product Summary table."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the geographic location of the Facility. This is a weighted average of several geographic components that are reported in greater detail in the Simulation Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Customers table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The latitude of the Customer."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The longitude of the Customer."
      }
    ]
  },
  "SimulationCustomerRiskMetricsReplicationDetail": {
    "type": "Output",
    "description": "The SimulationCustomerRiskMetricsReplicationDetail table provides detailed information on the risk metrics associated with individual customers for each replication in a simulation scenario. This includes the Customer Risk Score, Concentration Risk, Source Count Risk, Geographic Risk, User Defined Risk, latitude, and longitude of the customer. The table also includes the Scenario Name, Replication Number, Risk Rating Name, and Customer Name for reference. This table helps in analyzing and comparing the risk profiles of different customers across multiple replications in a simulation model.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The replication the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "CustomerName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the Customer."
      },
      {
        "Column Name": "CustomerRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk score associated with this Customer. This is based on a weighted average of the Concentration Risk, Source Count Risk, Geographic Risk and the User Defined Risk of the Customer across the entire model horizon.  The Customer Risk Score is used to calculate the overall Risk Score in the Simulation Risk Metrics Summary table."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated the with the demand concentration at the Customer location. This is reported as a weighted average over all Products based on the Concentration Risk in the Simulation Customer Product Summary table."
      },
      {
        "Column Name": "SourceCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the number of sources that the Customer uses across all products. This is reported as a weighted average over all Products based on the Source Count Risk in the Simulation Customer Product Summary table."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the geographic location of the Facility. This is a weighted average of several geographic components that are reported in greater detail in the Simulation Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Customers table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The latitude of the Customer."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The longitude of the Customer."
      }
    ]
  },
  "SimulationCustomerServiceSummary": {
    "type": "Output",
    "description": "The SimulationCustomerServiceSummary table provides a summary of customer service-related metrics for different customers in the simulation scenario. This includes information such as the number of orders placed, order fulfillment rates, backorders, cancellations, and delivery performance for each customer. The table also includes customer location data (latitude and longitude) as well as the scenario name and type of statistic reported.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "CustomerName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the Customer."
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "Simulations that were run for multiple replications will have outputs summarized into several statistics. The type of statistic being reported will be populated in this field. For a single replication simulation, the only Stat Type will be Mean."
      },
      {
        "Column Name": "PlacedOrders",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders that were placed by the listed Customer."
      },
      {
        "Column Name": "PlacedOrdersPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders that were sourced from the primary location as specified in the Customer Fulfillment Policies for the listed Customer."
      },
      {
        "Column Name": "PlacedOrdersNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders that were sourced from a non-primary location as specified in the Customer Fulfillment Policies for the listed Customer."
      },
      {
        "Column Name": "PlacedOrdersMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders that were sourced from multiple locations for the listed Customer."
      },
      {
        "Column Name": "PlacedOrdersUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders that were undelivered for the listed Customer. This would include orders that were cancelled as well as orders that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrdersOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders that had the complete ordered quantity delivered on time for the listed Customer."
      },
      {
        "Column Name": "PlacedOrdersLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders that had the complete ordered quantity delivered late for the listed Customer."
      },
      {
        "Column Name": "PlacedOrdersOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of orders delivered on time and in full for the listed Customer. This is calculated as Placed Orders On Time In Full divided by Placed Orders."
      },
      {
        "Column Name": "PlacedOrdersBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders that were placed into backorder for the listed Customer."
      },
      {
        "Column Name": "PlacedOrdersCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders that were cancelled for the listed Customer."
      },
      {
        "Column Name": "PlacedLines",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were placed for the listed Customer."
      },
      {
        "Column Name": "PlacedLinesPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were sourced from the primary location as specified in the Customer Fulfillment Policies for the listed Customer."
      },
      {
        "Column Name": "PlacedLinesNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were sourced from a non-primary location as specified in the Customer Fulfillment Policies for the listed Customer."
      },
      {
        "Column Name": "PlacedLinesMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were sourced from multiple locations for the listed Customer."
      },
      {
        "Column Name": "PlacedLinesUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were undelivered for the listed Customer. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedLinesOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that had the complete ordered quantity delivered on time for the listed Customer."
      },
      {
        "Column Name": "PlacedLinesLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that had the complete ordered quantity delivered late for the listed Customer."
      },
      {
        "Column Name": "PlacedLinesOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of lines delivered on time and in full for the listed Customer. This is calculated as PlacedLines On Time In Full divided by Placed Lines."
      },
      {
        "Column Name": "PlacedLinesBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were placed into backorder for the listed Customer."
      },
      {
        "Column Name": "PlacedLinesCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were cancelled for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderQuantityPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity that was sourced from the primary location as specified in the Customer Fulfillment Policies for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderQuantityNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity that was sourced from a non-primary location as specified in the Customer Fulfillment Policies for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderQuantityMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity that was sourced from multiple locations for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity that was undelivered for the listed Customer. This would include quantity that was cancelled as well as quantity that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderQuantityOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered quantity across all lines that had the complete ordered quantity delivered on time for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderQuantityLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered quantity across all lines that had the complete ordered quantity delivered late for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderQuantityOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of quantity delivered on time and in full for the listed Customer. This is calculated as Placed Order Quantity On Time In Full divided by Placed Order Quantity."
      },
      {
        "Column Name": "PlacedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity that were placed into backorder for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity that was cancelled for the listed Customer."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that quantity outputs are expressed in terms of."
      },
      {
        "Column Name": "PlacedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderVolumePrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that was sourced from the primary location as specified in the Customer Fulfillment Policies for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderVolumeNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that was sourced from a non-primary location as specified in the Customer Fulfillment Policies for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderVolumeMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that was sourced from multiple locations for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that was undelivered for the listed Customer. This would include volume that was cancelled as well as volume that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderVolumeOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered volume across all lines that had the complete ordered volume delivered on time for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderVolumeLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered volume across all lines that had the complete ordered volume delivered late for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderVolumeOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of volume delivered on time and in full for the listed Customer. This is calculated as Placed Order volume On Time In Full divided by Placed Order volume."
      },
      {
        "Column Name": "PlacedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that were placed into backorder for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that was cancelled for the listed Customer."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that volume outputs are expressed in terms of."
      },
      {
        "Column Name": "PlacedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderWeightPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that was sourced from the primary location as specified in the Customer Fulfillment Policies for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderWeightNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that was sourced from a non-primary location as specified in the Customer Fulfillment Policies for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderWeightMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that was sourced from multiple locations for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that was undelivered for the listed Customer. This would include weight that was cancelled as well as weight that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderWeightOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered weight across all lines that had the complete ordered weight delivered on time for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderWeightLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered weight across all lines that had the complete ordered weight delivered late for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderWeightOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of weight delivered on time and in full for the listed Customer. This is calculated as Placed Order weight On Time In Full divided by Placed Order weight."
      },
      {
        "Column Name": "PlacedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that were placed into backorder for the listed Customer."
      },
      {
        "Column Name": "PlacedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that was cancelled for the listed Customer."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that weight outputs are expressed in terms of."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The latitude of the Customer."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The longitude of the Customer."
      }
    ]
  },
  "SimulationCustomerServiceSummaryReplicationDetail": {
    "type": "Output",
    "description": "The SimulationCustomerServiceSummaryReplicationDetail table provides a detailed summary of customer service-related metrics for each replication in a simulation. It includes information such as the number of placed orders, order fulfillment rates, backorders, cancellations, order quantities, volumes, weights, as well as the latitude and longitude of each customer. This table is intended to offer a comprehensive view of customer service performance for different scenarios and replications within a simulation.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The replication the results are saved for."
      },
      {
        "Column Name": "CustomerName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the Customer."
      },
      {
        "Column Name": "PlacedOrders",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders that were placed by the listed Customer."
      },
      {
        "Column Name": "PlacedOrdersPrimarySourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders that were sourced from the primary location as specified in the Customer Fulfillment Policies for the listed Customer."
      },
      {
        "Column Name": "PlacedOrdersNonPrimarySourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders that were sourced from a non-primary location as specified in the Customer Fulfillment Policies for the listed Customer."
      },
      {
        "Column Name": "PlacedOrdersMultiSourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders that were sourced from multiple locations for the listed Customer."
      },
      {
        "Column Name": "PlacedOrdersUndelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders that were undelivered for the listed Customer. This would include orders that were cancelled as well as orders that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrdersOnTimeInFull",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders that had the complete ordered quantity delivered on time for the listed Customer."
      },
      {
        "Column Name": "PlacedOrdersLateInFull",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders that had the complete ordered quantity delivered late for the listed Customer."
      },
      {
        "Column Name": "PlacedOrdersOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of orders delivered on time and in full for the listed Customer. This is calculated as Placed Orders On Time In Full divided by Placed Orders."
      },
      {
        "Column Name": "PlacedOrdersBackordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders that were placed into backorder for the listed Customer."
      },
      {
        "Column Name": "PlacedOrdersCancelled",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders that were cancelled for the listed Customer."
      },
      {
        "Column Name": "PlacedLines",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were placed for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedLinesPrimarySourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were sourced from the primary location as specified in the Customer Fulfillment Policies for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedLinesNonPrimarySourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were sourced from a non-primary location as specified in the Customer Fulfillment Policies for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedLinesMultiSourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were sourced from multiple locations for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedLinesUndelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were undelivered for the listed Customer / Product combination. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedLinesOnTimeInFull",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that had the complete ordered quantity delivered on time for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedLinesLateInFull",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that had the complete ordered quantity delivered late for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedLinesOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of lines delivered on time and in full for the listed Customer / Product combination. This is calculated as PlacedLines On Time In Full divided by Placed Lines."
      },
      {
        "Column Name": "PlacedLinesBackordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were placed into backorder for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedLinesCancelled",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were cancelled for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderQuantityPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity that was sourced from the primary location as specified in the Customer Fulfillment Policies for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderQuantityNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity that was sourced from a non-primary location as specified in the Customer Fulfillment Policies for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderQuantityMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity that was sourced from multiple locations for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity that was undelivered for the listed Customer / Product combination. This would include quantity that was cancelled as well as quantity that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderQuantityOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered quantity across all lines that had the complete ordered quantity delivered on time for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderQuantityLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered quantity across all lines that had the complete ordered quantity delivered late for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderQuantityOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of quantity delivered on time and in full for the listed Customer / Product combination. This is calculated as Placed Order Quantity On Time In Full divided by Placed Order Quantity."
      },
      {
        "Column Name": "PlacedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity that were placed into backorder for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity that was cancelled for the listed Customer / Product combination."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that quantity outputs are expressed in terms of."
      },
      {
        "Column Name": "PlacedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderVolumePrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that was sourced from the primary location as specified in the Customer Fulfillment Policies for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderVolumeNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that was sourced from a non-primary location as specified in the Customer Fulfillment Policies for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderVolumeMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that was sourced from multiple locations for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that was undelivered for the listed Customer / Product combination. This would include volume that was cancelled as well as volume that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderVolumeOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered volume across all lines that had the complete ordered volume delivered on time for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderVolumeLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered volume across all lines that had the complete ordered volume delivered late for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderVolumeOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of volume delivered on time and in full for the listed Customer / Product combination. This is calculated as Placed Order volume On Time In Full divided by Placed Order volume."
      },
      {
        "Column Name": "PlacedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that were placed into backorder for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that was cancelled for the listed Customer / Product combination."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that volume outputs are expressed in terms of."
      },
      {
        "Column Name": "PlacedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderWeightPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that was sourced from the primary location as specified in the Customer Fulfillment Policies for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderWeightNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that was sourced from a non-primary location as specified in the Customer Fulfillment Policies for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderWeightMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that was sourced from multiple locations for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that was undelivered for the listed Customer / Product combination. This would include weight that was cancelled as well as weight that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderWeightOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered weight across all lines that had the complete ordered weight delivered on time for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderWeightLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered weight across all lines that had the complete ordered weight delivered late for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderWeightOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of weight delivered on time and in full for the listed Customer / Product combination. This is calculated as Placed Order weight On Time In Full divided by Placed Order weight."
      },
      {
        "Column Name": "PlacedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that were placed into backorder for the listed Customer / Product combination."
      },
      {
        "Column Name": "PlacedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that was cancelled for the listed Customer / Product combination."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that weight outputs are expressed in terms of."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The latitude of the Customer."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The longitude of the Customer."
      }
    ]
  },
  "SimulationCustomerSummary": {
    "type": "Output",
    "description": "The SimulationCustomerSummary table provides a summary of various customer-related data and metrics from simulations conducted in the model. This includes information such as the total number of orders placed and delivered, total order quantity and volume, revenue generated and lost, customer risk score, geographic risk, and user-defined risk for each customer. Additionally, it includes the latitude and longitude of the customer, the scenario name for which the results are saved, the customer name, and the type of statistic being reported.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "CustomerName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the Customer."
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "Simulations that were run for multiple replications will have outputs summarized into several statistics. The type of statistic being reported will be populated in this field. For a single replication simulation, the only Stat Type will be Mean."
      },
      {
        "Column Name": "TotalPlacedOrders",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of orders placed by this Customer."
      },
      {
        "Column Name": "TotalPlacedOrdersDelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of orders that were delivered for the listed Customer."
      },
      {
        "Column Name": "TotalPlacedOrdersUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of orders that were undelivered for the listed Customer. This would include orders that were cancelled as well as orders that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "TotalPlacedLines",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of lines that were placed for the listed Customer / Product combination."
      },
      {
        "Column Name": "TotalPlacedLinesDelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of Lines placed by this Customer that were delivered"
      },
      {
        "Column Name": "TotalPlacedLinesUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of Lines placed by this Customer that were undelivered"
      },
      {
        "Column Name": "TotalPlacedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity across all products that were ordered by this Customer."
      },
      {
        "Column Name": "TotalPlacedOrderQuantityDelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The total delivered quantity across all products that were ordered by this Customer."
      },
      {
        "Column Name": "TotalPlacedOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total undelivered quantity across all products that were ordered by this Customer."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that quantity outputs are expressed in terms of."
      },
      {
        "Column Name": "TotalPlacedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume across all products that were ordered by this Customer."
      },
      {
        "Column Name": "TotalPlacedOrderVolumeDelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered volume across all products that were ordered by this Customer."
      },
      {
        "Column Name": "TotalPlacedOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total undelivered volume across all products that were ordered by this Customer."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that volume outputs are expressed in terms of."
      },
      {
        "Column Name": "TotalPlacedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight across all products that were ordered by this Customer."
      },
      {
        "Column Name": "TotalPlacedOrderWeightDelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered weight across all products that were ordered by this Customer."
      },
      {
        "Column Name": "TotalPlacedOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total undelivered weight across all products that were ordered by this Customer."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that weight outputs are expressed in terms of."
      },
      {
        "Column Name": "TotalRevenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total revenue generated for the listed Customer. This is calculated as the sum of all corresponding Product Unit Price * Total Delivered Quantity for the respective products."
      },
      {
        "Column Name": "TotalLostRevenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The revenue lost for the listed Customer. This is calculated as the sum of all corresponding Product Unit Price * Total Placed Order Quantity Undelivered for the respective products."
      },
      {
        "Column Name": "CustomerRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The Risk Score associated with this Customer. It is calculated as a weighted average of the Concentration, Source Count, Geographic and User Defined Risk. This will contribute to the model's Customer Risk Score."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The Concentration Risk score associated with this Customer. Concentration Risk is based on what portion of the total ordered quantity across the entire model that the  Customer's total ordered quantity represents. This will contribute to the model's Customer Risk score."
      },
      {
        "Column Name": "SourceCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The Source Count Risk metric associated with this Customer. Source Count Risk is determined based on the number of unique sources that are used to satisfy the Customer Orders across all products. This will contribute to the model's Customer Risk Score."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the geographic location of the Customer. This is a weighted average of several geographic components that are reported in greater detail in the Simulation Customer Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Customers table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The latitude of the Customer."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The longitude of the Customer."
      }
    ]
  },
  "SimulationCustomerSummaryReplicationDetail": {
    "type": "Output",
    "description": "The SimulationCustomerSummaryReplicationDetail table provides a detailed summary of key metrics, risks, and geographical information for individual customers within a specific scenario and replication. It includes data such as the total orders placed, delivered, undelivered, quantities, volumes, weights, revenue generated, lost revenue, risk scores, and geographic coordinates for each customer. This table allows for a comprehensive analysis of customer behavior and risk factors in a simulated environment.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The replication the results are saved for."
      },
      {
        "Column Name": "CustomerName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the Customer."
      },
      {
        "Column Name": "TotalPlacedOrders",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of orders placed by this Customer."
      },
      {
        "Column Name": "TotalPlacedOrdersDelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of orders that were delivered for the listed Customer."
      },
      {
        "Column Name": "TotalPlacedOrdersUndelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of orders that were undelivered for the listed Customer. This would include orders that were cancelled as well as orders that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "TotalPlacedLines",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of lines that were placed for the listed Customer / Product combination."
      },
      {
        "Column Name": "TotalPlacedLinesDelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of Lines placed by this Customer that were delivered"
      },
      {
        "Column Name": "TotalPlacedLinesUndelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of Lines placed by this Customer that were undelivered"
      },
      {
        "Column Name": "TotalPlacedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity across all products that were ordered by this Customer."
      },
      {
        "Column Name": "TotalPlacedOrderQuantityDelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The total delivered quantity across all products that were ordered by this Customer."
      },
      {
        "Column Name": "TotalPlacedOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total undelivered quantity across all products that were ordered by this Customer."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that quantity outputs are expressed in terms of."
      },
      {
        "Column Name": "TotalPlacedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume across all products that were ordered by this Customer."
      },
      {
        "Column Name": "TotalPlacedOrderVolumeDelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered volume across all products that were ordered by this Customer."
      },
      {
        "Column Name": "TotalPlacedOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total undelivered volume across all products that were ordered by this Customer."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that volume outputs are expressed in terms of."
      },
      {
        "Column Name": "TotalPlacedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight across all products that were ordered by this Customer."
      },
      {
        "Column Name": "TotalPlacedOrderWeightDelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total delivered weight across all products that were ordered by this Customer."
      },
      {
        "Column Name": "TotalPlacedOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total undelivered weight across all products that were ordered by this Customer."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that weight outputs are expressed in terms of."
      },
      {
        "Column Name": "TotalRevenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total revenue generated for the listed Customer. This is calculated as the sum of all corresponding Product Unit Price * Total Delivered Quantity for the respective products."
      },
      {
        "Column Name": "TotalLostRevenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The revenue lost for the listed Customer. This is calculated as the sum of all corresponding Product Unit Price * Total Placed Order Quantity Undelivered for the respective products."
      },
      {
        "Column Name": "CustomerRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The Risk Score associated with this Customer. It is calculated as a weighted average of the Concentration, Source Count, Geographic and User Defined Risk. This will contribute to the model's Customer Risk Score."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The Concentration Risk score associated with this Customer. Concentration Risk is based on what portion of the total ordered quantity across the entire model that the  Customer's total ordered quantity represents. This will contribute to the model's Customer Risk score."
      },
      {
        "Column Name": "SourceCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The Source Count Risk metric associated with this Customer. Source Count Risk is determined based on the number of unique sources that are used to satisfy the Customer Orders across all products. This will contribute to the model's Customer Risk Score."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the geographic location of the Customer. This is a weighted average of several geographic components that are reported in greater detail in the Simulation Customer Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Customers table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The latitude of the Customer."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The longitude of the Customer."
      }
    ]
  },
  "SimulationEvolutionaryAlgorithmInputFactorReport": {
    "type": "Output",
    "description": "This table likely contains data related to a simulation using an evolutionary algorithm, specifically focusing on the input factors used in the simulation. It includes information on the evolution of these input factors over the course of the simulation, as well as the specific values and names associated with each input factor.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The GA-generated scenario name that represents the grouping of genes that make up this scenario."
      },
      {
        "Column Name": "InputFactorName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The name of the Input Factor that is being modified in the GA-Scenario."
      },
      {
        "Column Name": "InputFactorValue",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The value that the Input Factor is using for the listed GA Scenario."
      }
    ]
  },
  "SimulationEvolutionaryAlgorithmOutputFactorReport": {
    "type": "Output",
    "description": "The SimulationEvolutionaryAlgorithmOutputFactorReport table displays the utility value, weighted score, scenario name, and output factor name associated with the output factors in a genetic algorithm scenario. The table provides insights into the performance and relevance of different output factors in the genetic algorithm scenarios generated during the simulation.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The GA-generated scenario name that represents the grouping of genes that make up this scenario."
      },
      {
        "Column Name": "OutputFactorName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The Output Factor name."
      },
      {
        "Column Name": "Value",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The utility value associated with the Output Factor in this GA-scenario. This is the raw value returned based on the Utility Curve that was defined in the Output Factors table."
      },
      {
        "Column Name": "WeightedScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The weighted utility value associated with the Output Factor in this GA-Scenario. This is the weighted value calculated based on the Output Factor Weight / Utility Curve expressed in the Output Factors table."
      }
    ]
  },
  "SimulationEvolutionaryAlgorithmSummary": {
    "type": "Output",
    "description": "The SimulationEvolutionaryAlgorithmSummary table likely provides a summary of the results and key information from running an evolutionary algorithm simulation. This could include details such as the overall fitness score, scenario names, and generation numbers for each iteration of the simulation. It may also show trends or patterns in the evolution of the algorithm over time.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The GA-generated scenario name that represents the grouping of genes that make up this scenario. Each Generation will have a set numer of genes, as is specified in the Number of Genes Per Generation Model Run Option."
      },
      {
        "Column Name": "GenerationNumber",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The generation number that the outputs are reported for. The maximum number of generations that the GA will run for is specified in the Number OF Generations Model Run Option."
      },
      {
        "Column Name": "OverallFitnessScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DENDRO]",
        "Explanation": "The overall fitness score expressed based on the Utility Curve / Output Factor Weights expressed in the Output Factors table."
      }
    ]
  },
  "SimulationFacilityProductServiceSummary": {
    "type": "Output",
    "description": "The SimulationFacilityProductServiceSummary table contains summarized statistics and data related to the simulation results for a specific facility, product, and service combination. It includes information such as the quoted time to fill, received orders, placed orders, fill rates, order quantities, volumes, weights, and various other metrics specific to the facility, product, and service being analyzed. The table also includes details about the scenario name, facility name, product name, and the type of statistic being reported.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the Facility."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the Product."
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "Simulations that were run for multiple replications will have outputs summarized into several statistics. The type of statistic being reported will be populated in this field. For a single replication simulation, the only Stat Type will be Mean."
      },
      {
        "Column Name": "QuotedTimeToFill",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The quoted time to fill as entered in the Inventory Policies table for the listed Facility / Product combination. This is the length of time from the point that an order enters the fulfillment queue at the Facility until it must be filled to be considered filled on time."
      },
      {
        "Column Name": "TimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that time outputs are expressed in terms of."
      },
      {
        "Column Name": "ReceivedLines",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility / Product combination."
      },
      {
        "Column Name": "ReceivedLinesPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility / Product combination where the Facility was listed as the primary source for the order as specified in either the Customer Fulfillment Policies or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedLinesNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility / Product combination where the Facility was not listed as the primary source for the order as specified in either the Customer Fulfillment Policies or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedLinesMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility / Product combination where multiple Facilities were used to satisfy the line item for the listed Product."
      },
      {
        "Column Name": "ReceivedLinesMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines rejected by the listed Facility / Product combination where the Facility was supposed to serve as the primary source as specified in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedLinesUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility / Product combination that were undelivered. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "ReceivedLinesBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility / Product combination that were placed into backorder."
      },
      {
        "Column Name": "ReceivedLinesCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility / Product combination that were cancelled."
      },
      {
        "Column Name": "ReceivedLinesFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility / Product combination that were filled within the listed Quoted Time To Fill."
      },
      {
        "Column Name": "ReceivedLinesOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of lines fulfilled on time by the listed Facility / Product combination. This is calculated as the Received Lines Filled On Time divided by Received Lines."
      },
      {
        "Column Name": "ReceivedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination."
      },
      {
        "Column Name": "ReceivedOrderQuantityPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination where the Facility was listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderQuantityNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination where the Facility was not listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderQuantityMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination where multiple Facilities were used to satisfy the line item for the listed Product."
      },
      {
        "Column Name": "ReceivedOrderQuantityMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders that was rejected for the listed Facility / Product combination where the Facility was supposed to serve as the primary source as specified in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination that was undelivered. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "ReceivedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination that was placed into backorder."
      },
      {
        "Column Name": "ReceivedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination that was cancelled."
      },
      {
        "Column Name": "ReceivedOrderQuantityFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination that was filled within the listed Quoted Time To Fill."
      },
      {
        "Column Name": "ReceivedOrderQuantityOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of received order quantity fulfilled on time for the listed Facility / Product combination. This is calculated as the Received Order Quantity Filled On Time divided by Received Order Quantity."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that quantity outputs are expressed in terms of."
      },
      {
        "Column Name": "ReceivedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination."
      },
      {
        "Column Name": "ReceivedOrderVolumePrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination where the Facility was listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderVolumeNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination where the Facility was not listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderVolumeMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination where multiple Facilities were used to satisfy the line item for the listed Product."
      },
      {
        "Column Name": "ReceivedOrderVolumeMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders that was rejected for the listed Facility / Product combination where the Facility was supposed to serve as the primary source as specified in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination that was undelivered. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "ReceivedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination that was placed into backorder."
      },
      {
        "Column Name": "ReceivedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination that was cancelled."
      },
      {
        "Column Name": "ReceivedOrderVolumeFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination that was filled within the listed Quoted Time To Fill."
      },
      {
        "Column Name": "ReceivedOrderVolumeOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of received order volume fulfilled on time for the listed Facility / Product combination. This is calculated as the Received Order volume Filled On Time divided by Received Order volume."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that volume outputs are expressed in terms of."
      },
      {
        "Column Name": "ReceivedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination."
      },
      {
        "Column Name": "ReceivedOrderWeightPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination where the Facility was listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderWeightNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination where the Facility was not listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderWeightMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination where multiple Facilities were used to satisfy the line item for the listed Product."
      },
      {
        "Column Name": "ReceivedOrderWeightMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders that was rejected for the listed Facility / Product combination where the Facility was supposed to serve as the primary source as specified in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination that was undelivered. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "ReceivedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination that was placed into backorder."
      },
      {
        "Column Name": "ReceivedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination that was cancelled."
      },
      {
        "Column Name": "ReceivedOrderWeightFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination that was filled within the listed Quoted Time To Fill."
      },
      {
        "Column Name": "ReceivedOrderWeightOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of received order weight fulfilled on time for the listed Facility / Product combination. This is calculated as the Received Order weight Filled On Time divided by Received Order weight."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that weight outputs are expressed in terms of."
      },
      {
        "Column Name": "PlacedLines",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were placed for the listed Facility / Product combination."
      },
      {
        "Column Name": "PlacedLinesPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Facility / Product combination that were sourced from the primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedLinesNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Facility / Product combination that were sourced from a non-primary location as specified in the Replenishment or Procurement Policies tabl."
      },
      {
        "Column Name": "PlacedLinesMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Facility / Product combination.that were sourced from multiple locations."
      },
      {
        "Column Name": "PlacedLinesUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Facility / Product combination that were undelivered. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedLinesBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Facility / Product combination that were placed into backorder."
      },
      {
        "Column Name": "PlacedLinesCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Facility / Product combination that were cancelled."
      },
      {
        "Column Name": "PlacedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Facility / Product combination."
      },
      {
        "Column Name": "PlacedOrderQuantityPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Facility / Product combination that was sourced from the primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderQuantityNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Facility / Product combination that was sourced from a non-primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderQuantityMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Facility / Product combination that was sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity that was undelivered for the listed Facility / Product combination. This would include quantity that was cancelled as well as quantity that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Facility / Product combination that was placed into backorder."
      },
      {
        "Column Name": "PlacedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity that was cancelled for the listed Facility / Product combination."
      },
      {
        "Column Name": "PlacedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Facility / Product combination."
      },
      {
        "Column Name": "PlacedOrderVolumePrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Facility / Product combination that was sourced from the primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderVolumeNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Facility / Product combination that was sourced from a non-primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderVolumeMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Facility / Product combination that was sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that was undelivered for the listed Facility / Product combination. This would include volume that was cancelled as well as volume that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Facility / Product combination that was placed into backorder."
      },
      {
        "Column Name": "PlacedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that was cancelled for the listed Facility / Product combination."
      },
      {
        "Column Name": "PlacedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Facility / Product combination."
      },
      {
        "Column Name": "PlacedOrderWeightPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Facility / Product combination that was sourced from the primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderWeightNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Facility / Product combination that was sourced from a non-primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderWeightMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Facility / Product combination that was sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that was undelivered for the listed Facility / Product combination. This would include weight that was cancelled as well as weight that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Facility / Product combination that was placed into backorder."
      },
      {
        "Column Name": "PlacedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that was cancelled for the listed Facility / Product combination."
      }
    ]
  },
  "SimulationFacilityProductServiceSummaryReplicationDetail": {
    "type": "Output",
    "description": "The SimulationFacilityProductServiceSummaryReplicationDetail table contains detailed data on the results of a simulation for a specific facility, product, and service combination. It includes information such as the number of received lines, order quantities, volumes, weights, as well as details on fulfillment rates, sources, and backorders. The table also includes the scenario name, replication number, facility name, and product name for reference.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The replication the results are saved for."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the Facility."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the Product."
      },
      {
        "Column Name": "QuotedTimeToFill",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The quoted time to fill as entered in the Inventory Policies table for the listed Facility / Product combination. This is the length of time from the point that an order enters the fulfillment queue at the Facility until it must be filled to be considered filled on time."
      },
      {
        "Column Name": "TimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that time outputs are expressed in terms of."
      },
      {
        "Column Name": "ReceivedLines",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility / Product combination."
      },
      {
        "Column Name": "ReceivedLinesPrimarySource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility / Product combination where the Facility was listed as the primary source for the order as specified in either the Customer Fulfillment Policies or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedLinesNonPrimarySource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility / Product combination where the Facility was not listed as the primary source for the order as specified in either the Customer Fulfillment Policies or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedLinesMultiSource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility / Product combination where multiple Facilities were used to satisfy the line item for the listed Product."
      },
      {
        "Column Name": "ReceivedLinesMissedPrimarySource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines rejected by the listed Facility / Product combination where the Facility was supposed to serve as the primary source as specified in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedLinesUndelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility / Product combination that were undelivered. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "ReceivedLinesBackordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility / Product combination that were placed into backorder."
      },
      {
        "Column Name": "ReceivedLinesCancelled",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility / Product combination that were cancelled."
      },
      {
        "Column Name": "ReceivedLinesFilledOnTime",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility / Product combination that were filled within the listed Quoted Time To Fill."
      },
      {
        "Column Name": "ReceivedLinesOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of lines fulfilled on time by the listed Facility / Product combination. This is calculated as the Received Lines Filled On Time divided by Received Lines."
      },
      {
        "Column Name": "ReceivedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination."
      },
      {
        "Column Name": "ReceivedOrderQuantityPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination where the Facility was listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderQuantityNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination where the Facility was not listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderQuantityMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination where multiple Facilities were used to satisfy the line item for the listed Product."
      },
      {
        "Column Name": "ReceivedOrderQuantityMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders that was rejected for the listed Facility / Product combination where the Facility was supposed to serve as the primary source as specified in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination that was undelivered. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "ReceivedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination that was placed into backorder."
      },
      {
        "Column Name": "ReceivedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination that was cancelled."
      },
      {
        "Column Name": "ReceivedOrderQuantityFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination that was filled within the listed Quoted Time To Fill."
      },
      {
        "Column Name": "ReceivedOrderQuantityOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of received order quantity fulfilled on time for the listed Facility / Product combination. This is calculated as the Received Order Quantity Filled On Time divided by Received Order Quantity."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that quantity outputs are expressed in terms of."
      },
      {
        "Column Name": "ReceivedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination."
      },
      {
        "Column Name": "ReceivedOrderVolumePrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination where the Facility was listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderVolumeNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination where the Facility was not listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderVolumeMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination where multiple Facilities were used to satisfy the line item for the listed Product."
      },
      {
        "Column Name": "ReceivedOrderVolumeMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders that was rejected for the listed Facility / Product combination where the Facility was supposed to serve as the primary source as specified in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination that was undelivered. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "ReceivedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination that was placed into backorder."
      },
      {
        "Column Name": "ReceivedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination that was cancelled."
      },
      {
        "Column Name": "ReceivedOrderVolumeFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination that was filled within the listed Quoted Time To Fill."
      },
      {
        "Column Name": "ReceivedOrderVolumeOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of received order volume fulfilled on time for the listed Facility / Product combination. This is calculated as the Received Order volume Filled On Time divided by Received Order volume."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that volume outputs are expressed in terms of."
      },
      {
        "Column Name": "ReceivedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination."
      },
      {
        "Column Name": "ReceivedOrderWeightPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination where the Facility was listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderWeightNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination where the Facility was not listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderWeightMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination where multiple Facilities were used to satisfy the line item for the listed Product."
      },
      {
        "Column Name": "ReceivedOrderWeightMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders that was rejected for the listed Facility / Product combination where the Facility was supposed to serve as the primary source as specified in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination that was undelivered. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "ReceivedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination that was placed into backorder."
      },
      {
        "Column Name": "ReceivedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination that was cancelled."
      },
      {
        "Column Name": "ReceivedOrderWeightFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination that was filled within the listed Quoted Time To Fill."
      },
      {
        "Column Name": "ReceivedOrderWeightOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of received order weight fulfilled on time for the listed Facility / Product combination. This is calculated as the Received Order weight Filled On Time divided by Received Order weight."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that weight outputs are expressed in terms of."
      },
      {
        "Column Name": "PlacedLines",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were placed for the listed Facility / Product combination."
      },
      {
        "Column Name": "PlacedLinesPrimarySourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Facility / Product combination that were sourced from the primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedLinesNonPrimarySourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Facility / Product combination that were sourced from a non-primary location as specified in the Replenishment or Procurement Policies tabl."
      },
      {
        "Column Name": "PlacedLinesMultiSourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Facility / Product combination.that were sourced from multiple locations."
      },
      {
        "Column Name": "PlacedLinesUndelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Facility / Product combination that were undelivered. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedLinesBackordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Facility / Product combination that were placed into backorder."
      },
      {
        "Column Name": "PlacedLinesCancelled",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines for the listed Facility / Product combination that were cancelled."
      },
      {
        "Column Name": "PlacedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Facility / Product combination."
      },
      {
        "Column Name": "PlacedOrderQuantityPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Facility / Product combination that was sourced from the primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderQuantityNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Facility / Product combination that was sourced from a non-primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderQuantityMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Facility / Product combination that was sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity that was undelivered for the listed Facility / Product combination. This would include quantity that was cancelled as well as quantity that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity for the listed Facility / Product combination that was placed into backorder."
      },
      {
        "Column Name": "PlacedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity that was cancelled for the listed Facility / Product combination."
      },
      {
        "Column Name": "PlacedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Facility / Product combination."
      },
      {
        "Column Name": "PlacedOrderVolumePrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Facility / Product combination that was sourced from the primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderVolumeNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Facility / Product combination that was sourced from a non-primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderVolumeMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Facility / Product combination that was sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that was undelivered for the listed Facility / Product combination. This would include volume that was cancelled as well as volume that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume for the listed Facility / Product combination that was placed into backorder."
      },
      {
        "Column Name": "PlacedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume that was cancelled for the listed Facility / Product combination."
      },
      {
        "Column Name": "PlacedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Facility / Product combination."
      },
      {
        "Column Name": "PlacedOrderWeightPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Facility / Product combination that was sourced from the primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderWeightNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Facility / Product combination that was sourced from a non-primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderWeightMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Facility / Product combination that was sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that was undelivered for the listed Facility / Product combination. This would include weight that was cancelled as well as weight that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight for the listed Facility / Product combination that was placed into backorder."
      },
      {
        "Column Name": "PlacedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight that was cancelled for the listed Facility / Product combination."
      }
    ]
  },
  "SimulationFacilityProductSummary": {
    "type": "Output",
    "description": "The SimulationFacilityProductSummary table provides a summary of simulation results for each facility and product combination. It includes key metrics such as inventory holding costs, storage costs, production costs, inventory quantities, volumes, weights, as well as details on received orders and their quantities, volumes, and weights. Additionally, it includes information on the geographical location of the facility, scenario name, facility name, product name, and statistic type. This table allows for a comprehensive analysis of the performance of each facility and product within the simulation.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the Facility."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the Product."
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "Simulations that were run for multiple replications will have outputs summarized into several statistics. The type of statistic being reported will be populated in this field. For a single replication simulation, the only Stat Type will be Mean."
      },
      {
        "Column Name": "InventoryHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The holding cost for the listed Product in inventory at the listed Facility. This is calculated based off of the Carrying Cost Percentage entered in the Inventory Policies table and the Product's Unit Value."
      },
      {
        "Column Name": "StorageCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The storage cost for the listed Product being held at the listed Facility. This is a per-unit cost that is calculated based off of the Unit Storage Cost in the Inventory Policies table."
      },
      {
        "Column Name": "TotalInTransitHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The in-transit holding cost for the listed Product that was assigned to the listed Facility as specified in the Transportation Policies table."
      },
      {
        "Column Name": "TotalProductionCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The production cost for the listed Facility / Product combination. This is specified in the Unit Cost field of the Production Policies table."
      },
      {
        "Column Name": "TotalInboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The inbound handling cost for the listed Product as it entered the listed Facility. This is specified as the Inbound Handling Cost in the Warehousing Policies table."
      },
      {
        "Column Name": "TotalOutboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The outbound handling cost for the listed Product as it left the listed Facility. This is specified as the Outbound Handling Cost in the Warehousing Policies table."
      },
      {
        "Column Name": "TotalProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total process cost associated with the Facility / Product combination. This cost can be attributed to process costs from a Production Process assigned in the Production Policies table, Stocking / Destocking Process assigned in the Warehousing Policies table, or Load / Unload Process assigned in the Transportation Policies table."
      },
      {
        "Column Name": "EndingOnHandInventoryQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The quantity of inventory for the listed Product that was at the listed Facility when the simulation ended."
      },
      {
        "Column Name": "MinInventoryQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The lowest level of inventory quantity for the listed Facility / Product combination."
      },
      {
        "Column Name": "MaxInventoryQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The highest level of inventory quantity for the listed Facility / Product combination."
      },
      {
        "Column Name": "AverageInventoryQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The average level of inventory quantity for the listed Facility / Product combination."
      },
      {
        "Column Name": "TotalProductionQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of the listed Product that was produced at the listed Facility."
      },
      {
        "Column Name": "TotalInboundQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of the listed Product that entered the listed Facility."
      },
      {
        "Column Name": "TotalOutboundQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of the listed Product that left the listed Facility."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that quantity outputs are expressed in terms of."
      },
      {
        "Column Name": "EndingOnHandInventoryVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The volume of inventory for the listed Product that was at the listed Facility when the simulation ended."
      },
      {
        "Column Name": "MinInventoryVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The lowest level of inventory volume for the listed Facility / Product combination."
      },
      {
        "Column Name": "MaxInventoryVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The highest level of inventory volume for the listed Facility / Product combination."
      },
      {
        "Column Name": "AverageInventoryVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The average level of inventory volume for the listed Facility / Product combination."
      },
      {
        "Column Name": "TotalProductionVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of the listed Product that was produced at the listed Facility."
      },
      {
        "Column Name": "TotalInboundVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of the listed Product that entered the listed Facility."
      },
      {
        "Column Name": "TotalOutboundVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of the listed Product that left the listed Facility."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that volume outputs are expressed in terms of."
      },
      {
        "Column Name": "EndingOnHandInventoryWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The weight of inventory for the listed Product that was at the listed Facility when the simulation ended."
      },
      {
        "Column Name": "MinInventoryWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The lowest level of inventory weight for the listed Facility / Product combination."
      },
      {
        "Column Name": "MaxInventoryWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The highest level of inventory weight for the listed Facility / Product combination."
      },
      {
        "Column Name": "AverageInventoryWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The average level of inventory weight for the listed Facility / Product combination."
      },
      {
        "Column Name": "TotalProductionWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of the listed Product that was produced at the listed Facility."
      },
      {
        "Column Name": "TotalInboundWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of the listed Product that entered the listed Facility."
      },
      {
        "Column Name": "TotalOutboundWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of the listed Product that left the listed Facility."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that weight outputs are expressed in terms of."
      },
      {
        "Column Name": "TotalReceivedLines",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of lines that were received for the listed Facility / Product combination."
      },
      {
        "Column Name": "TotalReceivedLinesBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of lines that were received for the listed Facility / Product combination that were placed into backorder."
      },
      {
        "Column Name": "TotalReceivedLinesCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of lines that were received for the listed Facility / Product combination that were cancelled."
      },
      {
        "Column Name": "TotalReceivedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination."
      },
      {
        "Column Name": "TotalReceivedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination that was placed into backorder."
      },
      {
        "Column Name": "TotalReceivedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination that was cancelled."
      },
      {
        "Column Name": "TotalReceivedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination."
      },
      {
        "Column Name": "TotalReceivedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination that was placed into backorder."
      },
      {
        "Column Name": "TotalReceivedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination that was cancelled."
      },
      {
        "Column Name": "TotalReceivedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination."
      },
      {
        "Column Name": "TotalReceivedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination that was placed into backorder."
      },
      {
        "Column Name": "TotalReceivedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination that was cancelled."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The latitude of the Facility."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The longitude of the Facility."
      }
    ]
  },
  "SimulationFacilityProductSummaryReplicationDetail": {
    "type": "Output",
    "description": "The SimulationFacilityProductSummaryReplicationDetail table contains a detailed summary of replication-specific results for each combination of Facility and Product within a simulation scenario. It includes information such as inventory holding costs, storage costs, production costs, inbound and outbound handling costs, inventory quantities, volumes, and weights, as well as order quantities, volumes, and weights. Additionally, it includes the latitude and longitude of the facility, the scenario name, replication number, facility name, and product name for easy reference and analysis.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The replication the results are saved for."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the Facility."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the Product."
      },
      {
        "Column Name": "InventoryHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The holding cost for the listed Product in inventory at the listed Facility. This is calculated based off of the Carrying Cost Percentage entered in the Inventory Policies table and the Product's Unit Value."
      },
      {
        "Column Name": "StorageCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The storage cost for the listed Product being held at the listed Facility. This is a per-unit cost that is calculated based off of the Unit Storage Cost in the Inventory Policies table."
      },
      {
        "Column Name": "TotalInTransitHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The in-transit holding cost for the listed Product that was assigned to the listed Facility as specified in the Transportation Policies table."
      },
      {
        "Column Name": "TotalProductionCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The production cost for the listed Facility / Product combination. This is specified in the Unit Cost field of the Production Policies table."
      },
      {
        "Column Name": "TotalInboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The inbound handling cost for the listed Product as it entered the listed Facility. This is specified as the Inbound Handling Cost in the Warehousing Policies table."
      },
      {
        "Column Name": "TotalOutboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The outbound handling cost for the listed Product as it left the listed Facility. This is specified as the Outbound Handling Cost in the Warehousing Policies table."
      },
      {
        "Column Name": "TotalProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total process cost associated with the Facility / Product combination. This cost can be attributed to process costs from a Production Process assigned in the Production Policies table, Stocking / Destocking Process assigned in the Warehousing Policies table, or Load / Unload Process assigned in the Transportation Policies table."
      },
      {
        "Column Name": "EndingOnHandInventoryQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The quantity of inventory for the listed Product that was at the listed Facility when the simulation ended."
      },
      {
        "Column Name": "MinInventoryQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The lowest level of inventory quantity for the listed Facility / Product combination."
      },
      {
        "Column Name": "MaxInventoryQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The highest level of inventory quantity for the listed Facility / Product combination."
      },
      {
        "Column Name": "AverageInventoryQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The average level of inventory quantity for the listed Facility / Product combination."
      },
      {
        "Column Name": "TotalProductionQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of the listed Product that was produced at the listed Facility."
      },
      {
        "Column Name": "TotalInboundQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of the listed Product that entered the listed Facility."
      },
      {
        "Column Name": "TotalOutboundQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of the listed Product that left the listed Facility."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that quantity outputs are expressed in terms of."
      },
      {
        "Column Name": "EndingOnHandInventoryVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The volume of inventory for the listed Product that was at the listed Facility when the simulation ended."
      },
      {
        "Column Name": "MinInventoryVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The lowest level of inventory volume for the listed Facility / Product combination."
      },
      {
        "Column Name": "MaxInventoryVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The highest level of inventory volume for the listed Facility / Product combination."
      },
      {
        "Column Name": "AverageInventoryVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The average level of inventory volume for the listed Facility / Product combination."
      },
      {
        "Column Name": "TotalProductionVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of the listed Product that was produced at the listed Facility."
      },
      {
        "Column Name": "TotalInboundVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of the listed Product that entered the listed Facility."
      },
      {
        "Column Name": "TotalOutboundVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of the listed Product that left the listed Facility."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that volume outputs are expressed in terms of."
      },
      {
        "Column Name": "EndingOnHandInventoryWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The weight of inventory for the listed Product that was at the listed Facility when the simulation ended."
      },
      {
        "Column Name": "MinInventoryWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The lowest level of inventory weight for the listed Facility / Product combination."
      },
      {
        "Column Name": "MaxInventoryWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The highest level of inventory weight for the listed Facility / Product combination."
      },
      {
        "Column Name": "AverageInventoryWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The average level of inventory weight for the listed Facility / Product combination."
      },
      {
        "Column Name": "TotalProductionWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of the listed Product that was produced at the listed Facility."
      },
      {
        "Column Name": "TotalInboundWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of the listed Product that entered the listed Facility."
      },
      {
        "Column Name": "TotalOutboundWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of the listed Product that left the listed Facility."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that weight outputs are expressed in terms of."
      },
      {
        "Column Name": "TotalReceivedLines",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of lines that were received for the listed Facility / Product combination."
      },
      {
        "Column Name": "TotalReceivedLinesBackordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of lines that were received for the listed Facility / Product combination that were placed into backorder."
      },
      {
        "Column Name": "TotalReceivedLinesCancelled",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of lines that were received for the listed Facility / Product combination that were cancelled."
      },
      {
        "Column Name": "TotalReceivedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination."
      },
      {
        "Column Name": "TotalReceivedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination that was placed into backorder."
      },
      {
        "Column Name": "TotalReceivedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility / Product combination that was cancelled."
      },
      {
        "Column Name": "TotalReceivedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination."
      },
      {
        "Column Name": "TotalReceivedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination that was placed into backorder."
      },
      {
        "Column Name": "TotalReceivedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility / Product combination that was cancelled."
      },
      {
        "Column Name": "TotalReceivedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination."
      },
      {
        "Column Name": "TotalReceivedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination that was placed into backorder."
      },
      {
        "Column Name": "TotalReceivedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility / Product combination that was cancelled."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The latitude of the Facility."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The longitude of the Facility."
      }
    ]
  },
  "SimulationFacilityRiskMetrics": {
    "type": "Output",
    "description": "The SimulationFacilityRiskMetrics table likely contains data on the risk metrics associated with various facilities in a simulation. This data would include the Facility Risk Score, Concentration Risk, Source Count Risk, Geographic Risk, User Defined Risk, Latitude, Longitude, Scenario Name, Risk Rating Name, Facility Name, and the type of statistic being reported. This table would allow for analysis and comparison of the risk levels of different facilities within the simulation scenario.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the Facility."
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "Simulations that were run for multiple replications will have outputs summarized into several statistics. The type of statistic being reported will be populated in this field. For a single replication simulation, the only Stat Type will be Mean."
      },
      {
        "Column Name": "FacilityRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk score associated with this Facility. This is based on a weighted average of the Facility's Concentration, Source Count, Geographic and User Defined risk across the simulation."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the throughput concentration of the Facility."
      },
      {
        "Column Name": "SourceCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the number of sources that the Facility uses across all products. Less sources results in higher risk."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the geographic location of the Facility. This is a weighted average of several geographic components that are reported in greater detail in the Simulation Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Facilities table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The latitude of the Facility."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The longitude of the Facility."
      }
    ]
  },
  "SimulationFacilityRiskMetricsReplicationDetail": {
    "type": "Output",
    "description": "The SimulationFacilityRiskMetricsReplicationDetail table contains detailed risk metrics for each Facility in a simulation, broken down by replication number. It includes Facility name, risk score, concentration risk, source count risk, geographic risk, user defined risk, latitude, and longitude. Each row in the table relates to a specific replication of the simulation and provides a detailed breakdown of the risk factors associated with each Facility.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The replication the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the Facility."
      },
      {
        "Column Name": "FacilityRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk score associated with this Facility. This is based on a weighted average of the Facility's Concentration, Source Count, Geographic and User Defined risk across the simulation."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the throughput concentration of the Facility."
      },
      {
        "Column Name": "SourceCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the number of sources that the Facility uses across all products. Less sources results in higher risk."
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the geographic location of the Facility. This is a weighted average of Bio Lab Distance, Economic Resiliency, Natural Disaster, Nuclear Distance, Political, Covid and Labor Risk ratings."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Facilities table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The latitude of the Facility."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The longitude of the Facility."
      }
    ]
  },
  "SimulationFacilityServiceSummary": {
    "type": "Output",
    "description": "The SimulationFacilityServiceSummary table provides a summary of various statistics related to the services provided by different facilities during a simulation. It includes information such as the number of received orders, the number of placed orders, order quantities, order volumes, order weights, and fulfillment rates for each facility. The table also includes details on primary and non-primary sourced orders, undelivered orders, backordered orders, and cancelled orders for each facility. This data allows for a comprehensive analysis of the performance and efficiency of the services provided by each facility during the simulation.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the Facility."
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "Simulations that were run for multiple replications will have outputs summarized into several statistics. The type of statistic being reported will be populated in this field. For a single replication simulation, the only Stat Type will be Mean."
      },
      {
        "Column Name": "ReceivedOrders",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders received by the listed Facility."
      },
      {
        "Column Name": "ReceivedOrdersPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders received by the listed Facility where the Facility was listed as the primary source for the order as specified in either the Customer Fulfillment Policies or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrdersNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders received by the listed Facility where the Facility was not listed as the primary source for the order as specified in either the Customer Fulfillment Policies or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrdersMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders received by the listed Facility where multiple Facilities were used to satisfy the order."
      },
      {
        "Column Name": "ReceivedOrdersMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders rejected by the listed Facility where the Facility was supposed to serve as the primary source as specified in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrdersUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders received by the listed Facility that were undelivered. This would include orders that were cancelled as well as orders that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "ReceivedOrdersBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders received by the listed Facility that were placed into backorder."
      },
      {
        "Column Name": "ReceivedOrdersCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders received by the listed Facility that were cancelled."
      },
      {
        "Column Name": "ReceivedOrdersFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders received by the listed Facility that were filled within the listed Quoted Time To Fill as specified in the Inventory Policies table."
      },
      {
        "Column Name": "ReceivedOrdersOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of orders fulfilled on time for the listed Facility. This is calculated as the Received Orders Filled On Time divided by Received Orders."
      },
      {
        "Column Name": "ReceivedLines",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility."
      },
      {
        "Column Name": "ReceivedLinesPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility where the Facility was listed as the primary source for the order as specified in either the Customer Fulfillment Policies or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedLinesNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility where the Facility was not listed as the primary source for the order as specified in either the Customer Fulfillment Policies or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedLinesMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility where multiple Facilities were used to satisfy the order."
      },
      {
        "Column Name": "ReceivedLinesMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines rejected by the listed Facility where the Facility was supposed to serve as the primary source as specified in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedLinesUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility that were undelivered. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "ReceivedLinesBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility that were placed into backorder."
      },
      {
        "Column Name": "ReceivedLinesCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility that were cancelled."
      },
      {
        "Column Name": "ReceivedLinesFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility that were filled within the listed Quoted Time To Fill as specified in the Inventory Policies table."
      },
      {
        "Column Name": "ReceivedLinesOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of lines fulfilled on time for the listed Facility. This is calculated as the Received Lines Filled On Time divided by Received Lines."
      },
      {
        "Column Name": "ReceivedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility."
      },
      {
        "Column Name": "ReceivedOrderQuantityPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility where the Facility was listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderQuantityNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility where the Facility was not listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderQuantityMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility where multiple Facilities were used to satisfy the order."
      },
      {
        "Column Name": "ReceivedOrderQuantityMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders that was rejected for the listed Facility where the Facility was supposed to serve as the primary source as specified in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility that was undelivered. This would include orders that were cancelled as well as orders that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "ReceivedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility that was placed into backorder."
      },
      {
        "Column Name": "ReceivedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility that was cancelled."
      },
      {
        "Column Name": "ReceivedOrderQuantityFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility that was filled within the listed Quoted Time To Fill."
      },
      {
        "Column Name": "ReceivedOrderQuantityOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of received order quantity fulfilled on time for the listed Facility. This is calculated as the Received Order Quantity Filled On Time divided by Received Order Quantity."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that quantity outputs are expressed in terms of."
      },
      {
        "Column Name": "ReceivedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility."
      },
      {
        "Column Name": "ReceivedOrderVolumePrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility where the Facility was listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderVolumeNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility where the Facility was not listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderVolumeMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility where multiple Facilities were used to satisfy the order."
      },
      {
        "Column Name": "ReceivedOrderVolumeMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders that was rejected for the listed Facility where the Facility was supposed to serve as the primary source as specified in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility that was undelivered. This would include orders that were cancelled as well as orders that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "ReceivedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility that was placed into backorder."
      },
      {
        "Column Name": "ReceivedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility that was cancelled."
      },
      {
        "Column Name": "ReceivedOrderVolumeFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility that was filled within the listed Quoted Time To Fill."
      },
      {
        "Column Name": "ReceivedOrderVolumeOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of received order volume fulfilled on time for the listed Facility. This is calculated as the Received Order volume Filled On Time divided by Received Order volume."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that volume outputs are expressed in terms of."
      },
      {
        "Column Name": "ReceivedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility."
      },
      {
        "Column Name": "ReceivedOrderWeightPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility where the Facility was listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderWeightNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility where the Facility was not listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderWeightMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility where multiple Facilities were used to satisfy the order."
      },
      {
        "Column Name": "ReceivedOrderWeightMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders that was rejected for the listed Facility where the Facility was supposed to serve as the primary source as specified in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility that was undelivered. This would include orders that were cancelled as well as orders that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "ReceivedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility that was placed into backorder."
      },
      {
        "Column Name": "ReceivedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility that was cancelled."
      },
      {
        "Column Name": "ReceivedOrderWeightFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility that was filled within the listed Quoted Time To Fill."
      },
      {
        "Column Name": "ReceivedOrderWeightOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of received order weight fulfilled on time for the listed Facility. This is calculated as the Received Order weight Filled On Time divided by Received Order weight."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that weight outputs are expressed in terms of."
      },
      {
        "Column Name": "PlacedOrders",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders placed by the listed Facility."
      },
      {
        "Column Name": "PlacedOrdersPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders placed by the listed Facility that were sourced from the primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrdersNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders placed by listed Facility that were sourced from a non-primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrdersMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders placed by the listed Facility that were sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrdersUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders placed by the listed Facility that were undelivered. This would include orders that were cancelled as well as orders that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrdersBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders placed by the listed Facility that were backordered"
      },
      {
        "Column Name": "PlacedOrdersCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders placed by the listed Facility that were cancelled."
      },
      {
        "Column Name": "PlacedLines",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were placed by the listed Facility."
      },
      {
        "Column Name": "PlacedLinesPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines placed by the listed Facility that were sourced from the primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedLinesNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines placed by the listed Facility that were sourced from a non-primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedLinesMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines placed by the listed Facility that were sourced from multiple locations."
      },
      {
        "Column Name": "PlacedLinesUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines placed by the listed Facility that were undelivered. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedLinesBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines placed by the listed Facility that were backordered."
      },
      {
        "Column Name": "PlacedLinesCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines placed by the listed Facility that were cancelled."
      },
      {
        "Column Name": "PlacedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity placed by the listed Facility."
      },
      {
        "Column Name": "PlacedOrderQuantityPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity placed by the listed Facility that was sourced from the primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderQuantityNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity placed by the listed Facility that was sourced from a non-primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderQuantityMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity placed by the listed Facility that was sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity placed by the listed Facility that was undelivered . This would include quantity that was cancelled as well as quantity that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity placed by the listed Facility that was backordered."
      },
      {
        "Column Name": "PlacedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity placed by the listed Facility that was cancelled."
      },
      {
        "Column Name": "PlacedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume placed by the listed Facility."
      },
      {
        "Column Name": "PlacedOrderVolumePrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume placed by the listed Facility that was sourced from the primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderVolumeNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume placed by the listed Facility that was sourced from a non-primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderVolumeMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume placed by the listed Facility that was sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume placed by the listed Facility that was undelivered . This would include volume that was cancelled as well as volume that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume placed by the listed Facility that was backordered."
      },
      {
        "Column Name": "PlacedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume placed by the listed Facility that was cancelled."
      },
      {
        "Column Name": "PlacedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight placed by the listed Facility."
      },
      {
        "Column Name": "PlacedOrderWeightPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight placed by the listed Facility that was sourced from the primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderWeightNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight placed by the listed Facility that was sourced from a non-primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderWeightMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight placed by the listed Facility that was sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight placed by the listed Facility that was undelivered . This would include weight that was cancelled as well as weight that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight placed by the listed Facility that was backordered."
      },
      {
        "Column Name": "PlacedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight placed by the listed Facility that was cancelled."
      }
    ]
  },
  "SimulationFacilityServiceSummaryReplicationDetail": {
    "type": "Output",
    "description": "The SimulationFacilityServiceSummaryReplicationDetail table provides a detailed summary of service performance for each Facility in a simulation scenario, broken down by replication number. It includes information on received orders, lines, order quantity, order volume, and order weight, as well as placed orders, lines, order quantity, order volume, and order weight. The table also includes data on on-time fill rates, primary and non-primary sourced orders, backordered and cancelled orders, undelivered orders, and orders fulfilled within the specified time frame.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The replication the results are saved for."
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the Facility."
      },
      {
        "Column Name": "ReceivedOrders",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders received by the listed Facility."
      },
      {
        "Column Name": "ReceivedOrdersPrimarySource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders received by the listed Facility where the Facility was listed as the primary source for the order as specified in either the Customer Fulfillment Policies or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrdersNonPrimarySource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders received by the listed Facility where the Facility was not listed as the primary source for the order as specified in either the Customer Fulfillment Policies or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrdersMultiSource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders received by the listed Facility where multiple Facilities were used to satisfy the order."
      },
      {
        "Column Name": "ReceivedOrdersMissedPrimarySource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders rejected by the listed Facility where the Facility was supposed to serve as the primary source as specified in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrdersUndelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders received by the listed Facility that were undelivered. This would include orders that were cancelled as well as orders that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "ReceivedOrdersBackordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders received by the listed Facility that were placed into backorder."
      },
      {
        "Column Name": "ReceivedOrdersCancelled",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders received by the listed Facility that were cancelled."
      },
      {
        "Column Name": "ReceivedOrdersFilledOnTime",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders received by the listed Facility that were filled within the listed Quoted Time To Fill as specified in the Inventory Policies table."
      },
      {
        "Column Name": "ReceivedOrdersOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of orders fulfilled on time for the listed Facility. This is calculated as the Received Orders Filled On Time divided by Received Orders."
      },
      {
        "Column Name": "ReceivedLines",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility."
      },
      {
        "Column Name": "ReceivedLinesPrimarySource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility where the Facility was listed as the primary source for the order as specified in either the Customer Fulfillment Policies or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedLinesNonPrimarySource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility where the Facility was not listed as the primary source for the order as specified in either the Customer Fulfillment Policies or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedLinesMultiSource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility where multiple Facilities were used to satisfy the order."
      },
      {
        "Column Name": "ReceivedLinesMissedPrimarySource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines rejected by the listed Facility where the Facility was supposed to serve as the primary source as specified in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedLinesUndelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility that were undelivered. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "ReceivedLinesBackordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility that were placed into backorder."
      },
      {
        "Column Name": "ReceivedLinesCancelled",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility that were cancelled."
      },
      {
        "Column Name": "ReceivedLinesFilledOnTime",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines received by the listed Facility that were filled within the listed Quoted Time To Fill as specified in the Inventory Policies table."
      },
      {
        "Column Name": "ReceivedLinesOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of lines fulfilled on time for the listed Facility. This is calculated as the Received Lines Filled On Time divided by Received Lines."
      },
      {
        "Column Name": "ReceivedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility."
      },
      {
        "Column Name": "ReceivedOrderQuantityPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility where the Facility was listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderQuantityNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility where the Facility was not listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderQuantityMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility where multiple Facilities were used to satisfy the order."
      },
      {
        "Column Name": "ReceivedOrderQuantityMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders that was rejected for the listed Facility where the Facility was supposed to serve as the primary source as specified in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility that was undelivered. This would include orders that were cancelled as well as orders that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "ReceivedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility that was placed into backorder."
      },
      {
        "Column Name": "ReceivedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility that was cancelled."
      },
      {
        "Column Name": "ReceivedOrderQuantityFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of received orders for the listed Facility that was filled within the listed Quoted Time To Fill."
      },
      {
        "Column Name": "ReceivedOrderQuantityOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of received order quantity fulfilled on time for the listed Facility. This is calculated as the Received Order Quantity Filled On Time divided by Received Order Quantity."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that quantity outputs are expressed in terms of."
      },
      {
        "Column Name": "ReceivedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility."
      },
      {
        "Column Name": "ReceivedOrderVolumePrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility where the Facility was listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderVolumeNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility where the Facility was not listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderVolumeMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility where multiple Facilities were used to satisfy the order."
      },
      {
        "Column Name": "ReceivedOrderVolumeMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders that was rejected for the listed Facility where the Facility was supposed to serve as the primary source as specified in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility that was undelivered. This would include orders that were cancelled as well as orders that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "ReceivedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility that was placed into backorder."
      },
      {
        "Column Name": "ReceivedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility that was cancelled."
      },
      {
        "Column Name": "ReceivedOrderVolumeFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of received orders for the listed Facility that was filled within the listed Quoted Time To Fill."
      },
      {
        "Column Name": "ReceivedOrderVolumeOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of received order volume fulfilled on time for the listed Facility. This is calculated as the Received Order volume Filled On Time divided by Received Order volume."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that volume outputs are expressed in terms of."
      },
      {
        "Column Name": "ReceivedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility."
      },
      {
        "Column Name": "ReceivedOrderWeightPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility where the Facility was listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderWeightNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility where the Facility was not listed as the primary source in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderWeightMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility where multiple Facilities were used to satisfy the order."
      },
      {
        "Column Name": "ReceivedOrderWeightMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders that was rejected for the listed Facility where the Facility was supposed to serve as the primary source as specified in either the Customer Fulfillment or Replenishment Policies table."
      },
      {
        "Column Name": "ReceivedOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility that was undelivered. This would include orders that were cancelled as well as orders that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "ReceivedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility that was placed into backorder."
      },
      {
        "Column Name": "ReceivedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility that was cancelled."
      },
      {
        "Column Name": "ReceivedOrderWeightFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of received orders for the listed Facility that was filled within the listed Quoted Time To Fill."
      },
      {
        "Column Name": "ReceivedOrderWeightOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rate of received order weight fulfilled on time for the listed Facility. This is calculated as the Received Order weight Filled On Time divided by Received Order weight."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that weight outputs are expressed in terms of."
      },
      {
        "Column Name": "PlacedOrders",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders placed by the listed Facility."
      },
      {
        "Column Name": "PlacedOrdersPrimarySourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders placed by the listed Facility that were sourced from the primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrdersNonPrimarySourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders placed by listed Facility that were sourced from a non-primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrdersMultiSourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders placed by the listed Facility that were sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrdersUndelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders placed by the listed Facility that were undelivered. This would include orders that were cancelled as well as orders that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrdersBackordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders placed by the listed Facility that were backordered"
      },
      {
        "Column Name": "PlacedOrdersCancelled",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of orders placed by the listed Facility that were cancelled."
      },
      {
        "Column Name": "PlacedLines",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines that were placed by the listed Facility."
      },
      {
        "Column Name": "PlacedLinesPrimarySourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines placed by the listed Facility that were sourced from the primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedLinesNonPrimarySourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines placed by the listed Facility that were sourced from a non-primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedLinesMultiSourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines placed by the listed Facility that were sourced from multiple locations."
      },
      {
        "Column Name": "PlacedLinesUndelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines placed by the listed Facility that were undelivered. This would include lines that were cancelled as well as lines that were in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedLinesBackordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines placed by the listed Facility that were backordered."
      },
      {
        "Column Name": "PlacedLinesCancelled",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of lines placed by the listed Facility that were cancelled."
      },
      {
        "Column Name": "PlacedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity placed by the listed Facility."
      },
      {
        "Column Name": "PlacedOrderQuantityPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity placed by the listed Facility that was sourced from the primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderQuantityNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity placed by the listed Facility that was sourced from a non-primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderQuantityMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity placed by the listed Facility that was sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity placed by the listed Facility that was undelivered . This would include quantity that was cancelled as well as quantity that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity placed by the listed Facility that was backordered."
      },
      {
        "Column Name": "PlacedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered quantity placed by the listed Facility that was cancelled."
      },
      {
        "Column Name": "PlacedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume placed by the listed Facility."
      },
      {
        "Column Name": "PlacedOrderVolumePrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume placed by the listed Facility that was sourced from the primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderVolumeNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume placed by the listed Facility that was sourced from a non-primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderVolumeMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume placed by the listed Facility that was sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume placed by the listed Facility that was undelivered . This would include volume that was cancelled as well as volume that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume placed by the listed Facility that was backordered."
      },
      {
        "Column Name": "PlacedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered volume placed by the listed Facility that was cancelled."
      },
      {
        "Column Name": "PlacedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight placed by the listed Facility."
      },
      {
        "Column Name": "PlacedOrderWeightPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight placed by the listed Facility that was sourced from the primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderWeightNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight placed by the listed Facility that was sourced from a non-primary location as specified in the Replenishment or Procurement Policies table."
      },
      {
        "Column Name": "PlacedOrderWeightMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight placed by the listed Facility that was sourced from multiple locations."
      },
      {
        "Column Name": "PlacedOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight placed by the listed Facility that was undelivered . This would include weight that was cancelled as well as weight that was in-transit at the time the simulation ended."
      },
      {
        "Column Name": "PlacedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight placed by the listed Facility that was backordered."
      },
      {
        "Column Name": "PlacedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total ordered weight placed by the listed Facility that was cancelled."
      }
    ]
  },
  "SimulationFacilitySummary": {
    "type": "Output",
    "description": "The SimulationFacilitySummary table provides a summary of various cost, quantity, volume, weight, and order metrics for each facility within a simulation. It also includes risk scores related to concentration, source count, geographic location, and user-defined factors for each facility. The table includes information such as facility name, scenario name, latitude, and longitude.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalFacilityCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OperatingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInventoryHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalStorageCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInTransitHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProductionCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalOutboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProductionQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInboundQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalOutboundQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProductionVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInboundVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalOutboundVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProductionWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInboundWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalOutboundWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrders",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLines",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "FacilityRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk score associated with this Facility. This is based on a weighted average of the Facility's Concentration, Source Count, Geographic and User Defined risk across the simulation."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "SourceCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the geographic location of the Facility. This is a weighted average of several geographic components that are reported in greater detail in the Simulation Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Facilities table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationFacilitySummaryReplicationDetail": {
    "type": "Output",
    "description": "This table provides a summary of key metrics for each facility within a simulation, broken down by replication number. The metrics include costs, quantities, volumes, weights, order details, and risk scores associated with each facility during the simulation. The table also includes facility-specific information such as name, latitude, and longitude.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalFacilityCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OperatingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInventoryHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalStorageCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInTransitHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProductionCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalOutboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProductionQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInboundQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalOutboundQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProductionVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInboundVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalOutboundVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProductionWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInboundWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalOutboundWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrders",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersBackordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersCancelled",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLines",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesBackordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesCancelled",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "FacilityRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk score associated with this Facility. This is based on a weighted average of the Facility's Concentration, Source Count, Geographic and User Defined risk across the simulation."
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "SourceCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the geographic location of the Facility. This is a weighted average of several geographic components that are reported in greater detail in the Simulation Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Facilities table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationFlowSummary": {
    "type": "Output",
    "description": "The SimulationFlowSummary table provides a summary of various aspects related to the shipment and transportation of products in a simulation scenario. It includes information such as the quantity, volume, and weight of products shipped, as well as associated costs and transportation details. Additionally, it provides data on in-transit holding costs, duty costs, transport distance and time, as well as potential risks related to transportation times and location coordinates. The table also includes details on the scenario name, origin and destination names, transportation mode, product name, and statistical types such as minimum, mean, maximum, and half-width.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ModeName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "[Min, Mean, Max, HalfWidth]"
      },
      {
        "Column Name": "TotalQuantityShipped",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "QuantityShippedUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalVolumeShipped",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "VolumeShippedUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalWeightShipped",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WeightShippedUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "CostDimension",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalShipmentCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "fixed cost plus unit cost. Divide back out based on the proportion of product based on UOM (cost dimension)"
      },
      {
        "Column Name": "TotalInTransitHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalDutyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TransportDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TransportTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TransportTimeRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TimeToImportRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TimeToExportRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationFlowSummaryReplicationDetail": {
    "type": "Output",
    "description": "The SimulationFlowSummaryReplicationDetail table contains detailed information about the replication of a simulation flow summary. It includes data such as total quantity, volume, weight shipped, shipment costs, in-transit holding costs, duty costs, transport distance and time, risks during transport, origin and destination coordinates, scenario name, replication number, origin and destination names, mode of transportation, and product details. This table provides a comprehensive overview of the flow of goods in a simulation scenario.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ModeName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalQuantityShipped",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "QuantityShippedUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalVolumeShipped",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "VolumeShippedUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalWeightShipped",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WeightShippedUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "CostDimension",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalShipmentCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "fixed cost plus unit cost. Divide back out based on the proportion of product based on UOM (cost dimension)"
      },
      {
        "Column Name": "TotalInTransitHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalDutyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TransportDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TransportTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TransportTimeRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TimeToImportRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TimeToExportRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationGeographicRiskMetrics": {
    "type": "Output",
    "description": "The SimulationGeographicRiskMetrics table contains data on geographic risk metrics for various sites related to simulations run for multiple replications. The table includes information such as the type of site (Customer, Facility, or Supplier), risk scores, and specific risk factors such as BioLab Distance Risk, Economic Risk, Natural Disaster Risk, Nuclear Distance Risk, Political Risk, Epidemic Risk, and Labor Risk. Additionally, the table includes location coordinates (latitude and longitude), scenario name, risk rating name, site name, and the type of statistic being reported.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "SiteName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the location that Geographic Risk Metrics are reported for."
      },
      {
        "Column Name": "SiteType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The type of site that the Geographic Risk Metrics are reported for. This will be one of Customer, Facility or Supplier."
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "Simulations that were run for multiple replications will have outputs summarized into several statistics. The type of statistic being reported will be populated in this field. For a single replication simulation, the only Stat Type will be Mean."
      },
      {
        "Column Name": "GeographicRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk score associated with the geographic location of the site. This is a weighted average of Bio Lab Distance, Economic, Natural Disaster, Nuclear Distance, Political, Epidemic, and Labor Risks."
      },
      {
        "Column Name": "BioLabDistanceRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the Site's proximity to a Level 4 Biolab. The closer the proximity, the higher the risk."
      },
      {
        "Column Name": "EconomicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the economic characteristics of the Site's country.  This metric is using a combination of GDP and number of unique exporting products as reported by WorldBank."
      },
      {
        "Column Name": "NaturalDisasterRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with potential economic devastation resulting from natural disasters that can impact the Site location. Considered natural disasters are droughts, floods, earthquakes, volcanic eruptions, landslides and cyclones."
      },
      {
        "Column Name": "NuclearDistanceRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the Site's proximity to nuclear power plants. The closer the proximity, the higher the risk."
      },
      {
        "Column Name": "PoliticalRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the political stability of the Site's country."
      },
      {
        "Column Name": "EpidemicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with epidemic impacts on the Site's country."
      },
      {
        "Column Name": "LaborRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with labor markets of the Site's country."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The latitude of the Site."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The longitude of the Site."
      }
    ]
  },
  "SimulationGeographicRiskMetricsReplicationDetail": {
    "type": "Output",
    "description": "This table provides detailed replication results for geographic risk metrics associated with different types of sites (customer, facility, or supplier). The metrics include Bio Lab Distance, Economic, Natural Disaster, Nuclear Distance, Political, Epidemic, and Labor Risks, as well as the geographical coordinates of the site. Each replication is saved under a specific scenario name and includes a risk rating for the site.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The replication the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "SiteName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the location that Geographic Risk Metrics are reported for."
      },
      {
        "Column Name": "SiteType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The type of site that the Geographic Risk Metrics are reported for. This will be one of Customer, Facility or Supplier."
      },
      {
        "Column Name": "GeographicRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk score associated with the geographic location of the site. This is a weighted average of Bio Lab Distance, Economic, Natural Disaster, Nuclear Distance, Political, Epidemic, and Labor Risks."
      },
      {
        "Column Name": "BioLabDistanceRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the Site's proximity to a Level 4 Biolab. The closer the proximity, the higher the risk."
      },
      {
        "Column Name": "EconomicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the economic characteristics of the Site's country.  This metric is using a combination of GDP and number of unique exporting products as reported by WorldBank."
      },
      {
        "Column Name": "NaturalDisasterRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with potential economic devastation resulting from natural disasters that can impact the Site location. Considered natural disasters are droughts, floods, earthquakes, volcanic eruptions, landslides and cyclones."
      },
      {
        "Column Name": "NuclearDistanceRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the Site's proximity to nuclear power plants. The closer the proximity, the higher the risk."
      },
      {
        "Column Name": "PoliticalRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the political stability of the Site's country."
      },
      {
        "Column Name": "EpidemicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with epidemic impacts on the Site's country."
      },
      {
        "Column Name": "LaborRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with labor markets of the Site's country."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The latitude of the Site."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The longitude of the Site."
      }
    ]
  },
  "SimulationInventoryOnHandReport": {
    "type": "Output",
    "description": "The table SimulationInventoryOnHandReport likely contains a report or record of inventory on hand for various products at different facilities, in a specific scenario and replication. It includes details such as the facility name, product name, quantity, volume, and weight of the inventory on hand, along with the corresponding units of measurement. The table may also include a timestamp for when the inventory information was recorded.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "InventoryOnHandQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "InventoryOnHandQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "InventoryOnHandVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "InventoryOnHandVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "InventoryOnHandWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "InventoryOnHandWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Time",
        "Data Type": "Timestamp",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationLaneModeQueueDepthReport": {
    "type": "Output",
    "description": "This table provides a report on the queue depth for each lane in a simulation, broken down by the mode of operation for each lane. The table likely includes information on the scenario, replication number, origin and destination names, product name, and the time at which the queue depth data was collected.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ModeName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Time",
        "Data Type": "Timestamp",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationLaneModeQueueSummary": {
    "type": "Output",
    "description": "The table SimulationLaneModeQueueSummary contains a summary of queue data for different simulation scenarios. It includes information such as the origin and destination names, product name, mode of transportation, statistical data on queue depth (average, minimum, maximum), queue type, total time spent in the queue, and latitude and longitude coordinates for both the origin and destination. This table provides a comprehensive overview of queue dynamics for various scenarios in the simulation.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ModeName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "AverageQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "MinQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "MaxQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QueueType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalTimeInQueueCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationLaneModeQueueSummaryReplicationDetail": {
    "type": "Output",
    "description": "This table summarizes details of queueing within different simulation lanes for a specific replication number. It includes information such as the scenario name, origin and destination names, product name, mode name, average, minimum, and maximum queue depths, queue type, total time spent in the queue, latitude and longitude coordinates for the origin and destination, and the replication number.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ModeName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "AverageQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "MinQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "MaxQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QueueType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalTimeInQueueCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationLaneQueueDepthReport": {
    "type": "Output",
    "description": "The table SimulationLaneQueueDepthReport likely contains data related to simulation scenarios, including the name of the scenario, replication number, origin name, destination name, product name, time, and queue depth. This table may provide information on the queue depth at different points in a simulation lane, showing how many items are waiting in the queue at specific times.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Time",
        "Data Type": "Timestamp",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationLaneQueueSummary": {
    "type": "Output",
    "description": "The table SimulationLaneQueueSummary provides a summary of queue data for different lanes within a simulation. It includes information such as the scenario, origin, and destination names, the product being transported, statistics type, average, minimum and maximum queue depth, queue type, total time in queue cost, as well as latitude and longitude coordinates for both the origin and destination locations. This table helps in understanding the queueing behavior and performance of various lanes in the simulation.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "AverageQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "MinQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "MaxQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QueueType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalTimeInQueueCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationLaneQueueSummaryReplicationDetail": {
    "type": "Output",
    "description": "The table SimulationLaneQueueSummaryReplicationDetail provides detailed information about the queue summary for each lane in a simulation, broken down by replication number. It includes data such as the scenario name, origin and destination names, product name, average, minimum, and maximum queue depths, queue type, total time in queue cost, and the latitude and longitude coordinates of the origin and destination. This table allows for a detailed analysis of queue behavior and performance across multiple replications within a simulation.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "AverageQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "MinQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "MaxQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QueueType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalTimeInQueueCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationLaneSummary": {
    "type": "Output",
    "description": "The SimulationLaneSummary table provides a summary of data related to different simulation scenarios for transportation lanes. It includes information such as the total quantity, volume, and weight sourced and shipped, as well as the corresponding units of measurement. The table also includes costs associated with sourcing and shipment, in-transit holding costs, duty costs, and the cost dimension. Additionally, the table provides geographic coordinates (latitude and longitude) for the origin and destination of the transportation lane, as well as the names of the origin and destination locations. The table also includes the name of the specific simulation scenario, the product being transported, and the statistical type of data being presented.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalQuantitySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalQuantityShipped",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalVolumeSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalVolumeShipped",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalWeightSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalWeightShipped",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalSourcingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalShipmentCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "CostDimension",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInTransitHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalDutyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationLaneSummaryReplicationDetail": {
    "type": "Output",
    "description": "The SimulationLaneSummaryReplicationDetail table likely contains detailed data about the replication of a simulation for various lanes. It includes information such as total quantity, volume, weight, and cost sourced and shipped, along with the unit of measurement for each. It also includes in-transit holding costs, duty costs, and details about the origin and destination locations including latitude and longitude coordinates. Additionally, the table likely includes data about the scenario name, replication number, origin and destination names, and the product name being simulated.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalQuantitySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalQuantityShipped",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalVolumeSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalVolumeShipped",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalWeightSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalWeightShipped",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalSourcingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalShipmentCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "CostDimension",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInTransitHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalDutyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationNetworkRiskMetrics": {
    "type": "Output",
    "description": "The table SimulationNetworkRiskMetrics contains data related to various risk metrics for a network simulation. This includes metrics such as NetworkRiskScore, ProductStockingPointCountRisk, ProductMakeAndSupplyCountRisk, TransportTimeRisk, TimeToImportRisk, and TimeToExportRisk. The table also includes information on the ScenarioName, which represents the specific scenario being analyzed, and the RiskRatingName, which indicates the risk rating that the metrics are reported for. Additionally, the table may include data on StatType, which likely refers to the type of statistical measurement being used for the risk metrics.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "NetworkRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductStockingPointCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductMakeAndSupplyCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TransportTimeRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TimeToImportRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TimeToExportRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationNetworkRiskMetricsReplicationDetail": {
    "type": "Output",
    "description": "This table likely contains detailed metrics related to network risk in a simulation environment. It includes information such as the scenario name, replication number, network risk score, risk scores related to product stocking points, product make and supply counts, transport time, time to import, and time to export. The table also includes the risk rating name for which the metrics are reported. It provides a detailed breakdown of network risk factors for each replication in a simulation scenario.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "NetworkRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductStockingPointCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductMakeAndSupplyCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TransportTimeRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TimeToImportRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TimeToExportRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationNetworkServiceSummary": {
    "type": "Output",
    "description": "The table SimulationNetworkServiceSummary provides a summary of various key performance indicators related to customer orders, lines, order quantities, order volume, and order weight for a simulation network service. It includes data on placed customer orders, received orders, order fulfillment rates, backorders, cancellations, and other parameters to assess the efficiency and effectiveness of the network service. The table likely serves as a comprehensive overview of the operational performance and success metrics of the simulation network service.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrders",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLines",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumePrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumeNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumeMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumeOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumeLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumeOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrders",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLines",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumePrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationNetworkServiceSummaryReplicationDetail": {
    "type": "Output",
    "description": "The table contains detailed information about the replication of a simulation network service summary. It includes various metrics related to placed customer orders, order lines, order quantity, order volume, and order weight, as well as information about received orders, order lines, order quantity, order volume, and order weight. The data is broken down by different sourcing categories and includes rates for on-time in full delivery, backorders, cancellations, and more. The table also includes information about different scenarios under the column ScenarioName.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrders",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersPrimarySourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersNonPrimarySourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersMultiSourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersUndelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersOnTimeInFull",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersLateInFull",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersBackordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersCancelled",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLines",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesPrimarySourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesNonPrimarySourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesMultiSourced",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesUndelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesOnTimeInFull",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesLateInFull",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesBackordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesCancelled",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumePrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumeNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumeMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumeOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumeLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumeOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightNonPrimarySourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightMultiSourced",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightOnTimeInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightLateInFull",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightOnTimeInFullRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrders",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersPrimarySource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersNonPrimarySource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersMultiSource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersMissedPrimarySource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersUndelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersBackordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersCancelled",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersFilledOnTime",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLines",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesPrimarySource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesNonPrimarySource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesMultiSource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesMissedPrimarySource",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesUndelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesBackordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesCancelled",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesFilledOnTime",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumePrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightNonPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightMultiSource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightMissedPrimarySource",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightFilledOnTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightOnTimeFillRate",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationNetworkSummary": {
    "type": "Output",
    "description": "The SimulationNetworkSummary table provides a summary of various metrics and data related to the simulation network scenario. This includes information on orders, production, costs, revenue, and risk ratings. It also contains details on the time it takes for scenarios to run and the different statistics used to analyze the data, such as minimum, mean, maximum, and half-width values.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "THROGVersion",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DARTVersion",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "RunStartTime",
        "Data Type": "Timestamp",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Date/Time when the scenario was run."
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "[Min, Mean, Max, HalfWidth]"
      },
      {
        "Column Name": "TotalRunTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total time taken for the scenario run to complete."
      },
      {
        "Column Name": "TotalPlacedCustomerOrders",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLines",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrders",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLines",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProductionQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProductionVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProductionWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalSupplyChainCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalRevenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalLostRevenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProfit",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInventoryHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalStorageCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInTransitHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalFixedOperatingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProductionCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalShipmentCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalDutyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalSourcingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalOutboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalTimeInQueueCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "PrimaryRiskRating",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The Primary Risk Rating that is specified in the Model Settings. Details on all Risk Ratings can be found in the Risk Metrics Summary table."
      },
      {
        "Column Name": "RiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationNetworkSummaryReplicationDetail": {
    "type": "Output",
    "description": "The SimulationNetworkSummaryReplicationDetail table provides a detailed summary of various metrics and results from a simulation scenario run, broken down by replication number. It includes information on customer orders, order quantities, order volumes, received orders, production quantities, supply chain costs, revenue, profit, inventory costs, handling costs, process costs, risk ratings, and more. This table allows for a comprehensive analysis of the simulation results at a granular level for each replication.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "THROGVersion",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DARTVersion",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "RunStartTime",
        "Data Type": "Timestamp",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The Date/Time when the scenario was run."
      },
      {
        "Column Name": "TotalRunTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[NEO]",
        "Explanation": "The total time taken for the scenario run to complete."
      },
      {
        "Column Name": "TotalPlacedCustomerOrders",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrdersUndelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLines",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerLinesUndelivered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderQuantityUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderVolumeUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalPlacedCustomerOrderWeightUndelivered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrders",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersBackordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrdersCancelled",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLines",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesBackordered",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedLinesCancelled",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderQuantityCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderVolumeCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightBackordered",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalReceivedOrderWeightCancelled",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProductionQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProductionVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProductionWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalSupplyChainCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalRevenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalLostRevenue",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProfit",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInventoryHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalStorageCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInTransitHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalFixedOperatingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProductionCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalShipmentCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalDutyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalSourcingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalInboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalOutboundHandlingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalTimeInQueueCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "PrimaryRiskRating",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The Primary Risk Rating that is specified in the Model Settings. Details on all Risk Ratings can be found in the Risk Metrics Summary table."
      },
      {
        "Column Name": "RiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationOrderFulfillmentQueueDepthReport": {
    "type": "Output",
    "description": "The SimulationOrderFulfillmentQueueDepthReport table contains data related to the queue depth in a simulation of order fulfillment processes. The table likely includes columns such as ScenarioName, ReplicationNumber, FacilityName, Time, and QueueDepth to track different scenarios, replicate numbers, facilities, timestamps, and the depth of orders in the queue at different points in time during the simulation.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Time",
        "Data Type": "Timestamp",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationOrderFulfillmentQueueSummary": {
    "type": "Output",
    "description": "The table SimulationOrderFulfillmentQueueSummary provides a summary of queue data related to order fulfillment in a simulation. It includes details such as the scenario name, facility name, statistics type, average queue depth, minimum queue depth, maximum queue depth, queue type, total time in queue cost, latitude, and longitude. This table likely helps to track and analyze the efficiency and performance of order fulfillment processes in the simulation environment.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "AverageQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "MinQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "MaxQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QueueType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalTimeInQueueCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationOrderFulfillmentQueueSummaryReplicationDetail": {
    "type": "Output",
    "description": "This table likely provides a detailed breakdown of the order fulfillment queue summary for each replication in a simulation. It includes information such as the scenario name, replication number, facility name, average queue depth, minimum queue depth, maximum queue depth, queue type, total time in queue cost, latitude, and longitude. It allows for a comprehensive analysis of queue performance across different replications in the simulation.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "AverageQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "MinQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "MaxQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QueueType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalTimeInQueueCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationOrderReport": {
    "type": "Output",
    "description": "The SimulationOrderReport table contains data related to simulated orders, including details such as Order ID, Line Item ID, Order Origin, Order Type, Source Site, Product Name, Sourcing Cost, Ordered Quantity, Ordered Volume, Ordered Weight, Order Date, Due Date, Event Date, and Event Type. It may also include information on the Scenario Name and Replication Number. This table provides a comprehensive overview of simulated orders and their associated details for reporting and analysis purposes.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OrderID",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "LineItemID",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OrderOrigin",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OrderType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "SourceSite",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "SourcingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OrderedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OrderedQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OrderedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OrderedVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OrderedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OrderedWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OrderDate",
        "Data Type": "Timestamp",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DueDate",
        "Data Type": "Timestamp",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "EventDate",
        "Data Type": "Timestamp",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "EventType",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationProcessReport": {
    "type": "Output",
    "description": "The SimulationProcessReport table stores detailed information about the processes that have been simulated within the system. It includes data such as the name, type, and step of the process, as well as information on the products, work centers, facilities, and resources involved. Additionally, the table tracks various timestamps related to when the process was queued, entered and exited steps, and calculates costs, quantities, yields, volumes, and weights associated with the process.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProcessName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": "ProcessName from Processes table"
      },
      {
        "Column Name": "ProcessType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "[Stocking, Destocking, Load, Unload, Production]"
      },
      {
        "Column Name": "StepName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": "StepName from Processes table"
      },
      {
        "Column Name": "StepNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WorkCenterName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WorkResourceName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OrderType",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": "[Customer, Replenishment, Production"
      },
      {
        "Column Name": "OrderID",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "LineID",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TimeQueued",
        "Data Type": "Timestamp",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TimeEnteredStep",
        "Data Type": "Timestamp",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TimeExitStep",
        "Data Type": "Timestamp",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProcessStepTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProcessStepCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProcessStepLotSize",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProcessedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProcessYield",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "NetProcessedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProcessedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "NetProcessedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProcessedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "NetProcessedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationProcessSummary": {
    "type": "Output",
    "description": "The SimulationProcessSummary table contains information related to various processes within a simulation scenario. It includes details such as the name of the scenario, the type of process, the work center and facility involved, statistics type, total process cost, processed quantities and volumes, yield, net processed quantities and volumes, as well as the corresponding units of measurement. Additionally, the table includes information on processed weight, time, latitude, and longitude. This data is used to summarize and analyze the outcomes of the simulated processes.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProcessName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProcessType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "One of Production, Load, Unload, Stocking, Destocking"
      },
      {
        "Column Name": "WorkCenterName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProcessedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProcessYield",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "NetTotalProcessedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProcessedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "NetTotalProcessedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProcessedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "NetTotalProcessedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProcessedTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationProcessSummaryReplicationDetail": {
    "type": "Output",
    "description": "The SimulationProcessSummaryReplicationDetail table includes detailed information about each replication of a simulation process. It includes the scenario name, replication number, process name, process type, work center name, facility name, total process cost, total processed quantity, process yield, net total processed quantity, quantity unit of measure, total processed volume, net total processed volume, volume unit of measure, total processed weight, net total processed weight, weight unit of measure, total processed time, time unit of measure, latitude, and longitude. This table provides a comprehensive overview of the replication details for the simulation process.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProcessName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProcessType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "One of Production, Load, Unload, Stocking, Destocking"
      },
      {
        "Column Name": "WorkCenterName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProcessedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProcessYield",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "NetTotalProcessedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProcessedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "NetTotalProcessedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProcessedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "NetTotalProcessedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProcessedTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationProductRiskMetrics": {
    "type": "Output",
    "description": "The table SimulationProductRiskMetrics contains risk metrics for various products in a simulation scenario, including Stocking Point Count Risk, Make and Supply Count Risk, the scenario name, the risk rating name, the product name, and the statistics type.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "StockingPointCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "MakeAndSupplyCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationProductRiskMetricsReplicationDetail": {
    "type": "Output",
    "description": "This table likely contains detailed information on the risk metrics associated with product simulations, broken down by replication number. It likely includes data on stocking point count risk, make and supply count risk, and the risk rating name for each simulation scenario. Each row in the table would represent a specific replication of a simulation for a product, showing the corresponding risk metrics and risk rating.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "StockingPointCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "MakeAndSupplyCountRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationProductionReport": {
    "type": "Output",
    "description": "The SimulationProductionReport table contains data related to the production simulation, including the scenario name, replication number, production number, facility name, product name, production quantity, production volume, production weight, production cost, production order start and end times, and units of measurement for quantity, volume, weight, and cost. This table serves as a report summarizing production data for the simulation scenario.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductionNumber",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductionQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductionQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductionVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductionVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductionWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductionWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductionCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductionOrderStartTime",
        "Data Type": "Timestamp",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductionOrderEndTime",
        "Data Type": "Timestamp",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationRiskMetricsSummary": {
    "type": "Output",
    "description": "The SimulationRiskMetricsSummary table provides a summary of the risk metrics associated with different components (Customer, Facility, Supplier, Network) in a specific scenario. It includes the RiskScore, CustomerRisk, FacilityRisk, SupplierRisk, and NetworkRisk values for the scenario, as well as additional information such as the DARTVersion, ScenarioName, RiskRatingName, and StatType. This table allows for quick reference and comparison of risk levels across different scenarios and components.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "Simulations that were run for multiple replications will have outputs summarized into several statistics. The type of statistic being reported will be populated in this field. For a single replication simulation, the only Stat Type will be Mean."
      },
      {
        "Column Name": "RiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk score associated with this scenario. This is calculated as the weighted average of the Customer Risk, Facility Risk, Supplier Risk and Network Risk."
      },
      {
        "Column Name": "CustomerRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with Customers in this scenario. More details on the Risk components can be found in the Simulation Customer Summary and Simulation Customer Risk Metrics tables."
      },
      {
        "Column Name": "FacilityRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with Facilities in this scenario. More details on the Risk components can be found in the Simulation Facility Summary and Simulation Facility Risk Metrics tables."
      },
      {
        "Column Name": "SupplierRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with Suppliers in this scenario. More details on the Risk components can be found in the Simulation Supplier Summary and Simulation Supplier Risk Metrics tables."
      },
      {
        "Column Name": "NetworkRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with Network activities in this scenario. More details on the Risk components can be found in the Simulation Network Risk Metrics and Simulation Product Risk Metrics tables."
      },
      {
        "Column Name": "DARTVersion",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The version of the DART solver that was used for the scenario run."
      }
    ]
  },
  "SimulationRiskMetricsSummaryReplicationDetail": {
    "type": "Output",
    "description": "The SimulationRiskMetricsSummaryReplicationDetail table provides a detailed summary of risk metrics for each replication of a scenario. It includes information such as the ScenarioName, ReplicationNumber, RiskScore (weighted average of Customer Risk, Facility Risk, Supplier Risk, and Network Risk), as well as individual risk scores for customers, facilities, suppliers, and network activities. The table also includes the DARTVersion used for the scenario run and the RiskRatingName that the risk metrics are reported for.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG, DART]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG, DART]",
        "Explanation": "The replication the results are saved for."
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "RiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk score associated with this scenario. This is calculated as the weighted average of the Customer Risk, Facility Risk, Supplier Risk and Network Risk."
      },
      {
        "Column Name": "CustomerRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with Customers in this scenario. More details on the Risk components can be found in the Simulation Customer Summary and Simulation Customer Risk Metrics tables."
      },
      {
        "Column Name": "FacilityRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with Facilities in this scenario. More details on the Risk components can be found in the Simulation Facility Summary and Simulation Facility Risk Metrics tables."
      },
      {
        "Column Name": "SupplierRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with Suppliers in this scenario. More details on the Risk components can be found in the Simulation Supplier Summary and Simulation Supplier Risk Metrics tables."
      },
      {
        "Column Name": "NetworkRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with Network activities in this scenario. More details on the Risk components can be found in the Simulation Network Risk Metrics and Simulation Product Risk Metrics tables."
      },
      {
        "Column Name": "DARTVersion",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The version of the DART solver that was used for the scenario run."
      }
    ]
  },
  "SimulationRouteReport": {
    "type": "Output",
    "description": "The SimulationRouteReport table contains detailed information about simulated transportation routes. It tracks comprehensive route metrics including costs, distances, times, asset utilization, and delivery quantities, providing complete analysis of route performance and efficiency.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "RouteName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the route."
      },
      {
        "Column Name": "TransportationAssetName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the Transportation Asset used on the route"
      },
      {
        "Column Name": "TransportationAssetUnitId",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit id of the Transportation Asset used on the route"
      },
      {
        "Column Name": "RouteCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total cost of the route. This will be the sum of the fixed route cost, the total distance cost of all segments of this route, the total time cost of the route, the total stop cost of the route and the total unit cost of the route."
      },
      {
        "Column Name": "FixedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The route fixed cost."
      },
      {
        "Column Name": "DistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total distance cost of the route."
      },
      {
        "Column Name": "RepositionDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total reposition distance cost of the route."
      },
      {
        "Column Name": "OutOfRouteDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total out of route distance cost of the route."
      },
      {
        "Column Name": "TimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The time cost of the route."
      },
      {
        "Column Name": "WaitTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The wait time cost of the route."
      },
      {
        "Column Name": "RestTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rest time cost for the route."
      },
      {
        "Column Name": "BreakTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The short break time cost for the route."
      },
      {
        "Column Name": "StopCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The cost attributed to the number of stops in the route."
      },
      {
        "Column Name": "UnitCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit cost for the route."
      },
      {
        "Column Name": "RouteDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total route distance."
      },
      {
        "Column Name": "RepositionDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total reposition distance of the route."
      },
      {
        "Column Name": "OutOfRouteDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total out of route distance of the route."
      },
      {
        "Column Name": "RouteDistanceUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure used for distance."
      },
      {
        "Column Name": "RouteTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total route time."
      },
      {
        "Column Name": "RouteTravelTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total route travel time."
      },
      {
        "Column Name": "RouteServiceTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total route service time."
      },
      {
        "Column Name": "RouteWaitTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total route wait time."
      },
      {
        "Column Name": "RouteRestTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total time spent in a rest during the route."
      },
      {
        "Column Name": "RouteBreakTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total route break time."
      },
      {
        "Column Name": "RouteTimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure used for time."
      },
      {
        "Column Name": "NumberOfStops",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of stops taken on this route"
      },
      {
        "Column Name": "DeliveredQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The quantity of product that was served by the route."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that the quantities are expressed in terms of."
      },
      {
        "Column Name": "DeliveredVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The volume of product that was served by the route."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that the volumes are expressed in terms of."
      },
      {
        "Column Name": "DeliveredWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The weight of product that was served by the route."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that the weights are expressed in terms of."
      },
      {
        "Column Name": "NumberOfDeliveredShipments",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of shipments delivered on the route"
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the pickup location for the route"
      },
      {
        "Column Name": "RouteStartDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The date and time at which the Route starts."
      },
      {
        "Column Name": "RouteEndDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The date and time at which the Route ends."
      }
    ]
  },
  "SimulationRouteSegmentReport": {
    "type": "Output",
    "description": "The SimulationRouteSegmentReport table contains detailed information about individual segments within transportation routes. It tracks segment-specific metrics such as distances, times, geographic coordinates, and timing details, enabling granular analysis of route components.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "SegmentID",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "A unique identifier for the segment"
      },
      {
        "Column Name": "OriginName",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The location of the origin of the segment."
      },
      {
        "Column Name": "DestinationName",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The location of the destination of the segment."
      },
      {
        "Column Name": "RouteName",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The route that contains the segment."
      },
      {
        "Column Name": "SegmentDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The distance of the segment."
      },
      {
        "Column Name": "SegmentDistanceUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure used for distance."
      },
      {
        "Column Name": "SegmentTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total time for the segment."
      },
      {
        "Column Name": "SegmentTravelTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The travel time for the segment."
      },
      {
        "Column Name": "SegmentRestTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rest time for the segment."
      },
      {
        "Column Name": "SegmentBreakTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The break time for the segment."
      },
      {
        "Column Name": "TimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure used for time."
      },
      {
        "Column Name": "OriginLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The latitude coordinate of the origin of the segment"
      },
      {
        "Column Name": "OriginLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The longitude coordinate of the origin of the segment"
      },
      {
        "Column Name": "DestinationLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The latitude coordinate of the destination of the segment"
      },
      {
        "Column Name": "DestinationLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The longitude coordinate of the destination of the segment"
      },
      {
        "Column Name": "StartDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The date and time at which the Asset departs from the origin of the Segment."
      },
      {
        "Column Name": "EndDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The date and time at which the Asset arrives at the destination of the Segment."
      }
    ]
  },
  "SimulationRouteStopReport": {
    "type": "Output",
    "description": "The SimulationRouteStopReport table contains detailed information about individual stops within transportation routes. It tracks stop-specific metrics including delivery quantities, service times, costs, and timing details, providing comprehensive analysis of route stop activities.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "StopID",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "A unique identifier for the stop"
      },
      {
        "Column Name": "SiteName",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The location of the stop."
      },
      {
        "Column Name": "StopType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The type of this stop. It could be Pickup, Delivery, Asset Return"
      },
      {
        "Column Name": "RouteName",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The route that contains the stop."
      },
      {
        "Column Name": "DeliveredQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The quantity of product that was served at the stop."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that the quantities are expressed in terms of."
      },
      {
        "Column Name": "DeliveredVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The volume of product that was served in the stop."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that the volumes are expressed in terms of."
      },
      {
        "Column Name": "DeliveredWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The weight of product that was served in the stop."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that the weights are expressed in terms of."
      },
      {
        "Column Name": "AllocatedRouteCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The route cost that the stop is responsible for"
      },
      {
        "Column Name": "AllocatedRouteCostPercent",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The proportion of the route cost that the stop is responsible for"
      },
      {
        "Column Name": "ServiceTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The service time at this stop."
      },
      {
        "Column Name": "WaitTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The wait time at this stop."
      },
      {
        "Column Name": "RestTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rest time at this stop."
      },
      {
        "Column Name": "BreakTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The short break time at this stop."
      },
      {
        "Column Name": "TimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure used for time."
      },
      {
        "Column Name": "ArrivalDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The date and time at which the Asset arrives at this Stop."
      },
      {
        "Column Name": "ServiceDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The date and time at which the pickup or delivery starts."
      },
      {
        "Column Name": "DepartureDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The date and time at which the Asset leaves this Stop."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The latitude coordinate of the Stop"
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The longitude coordinate of the Stop"
      }
    ]
  },
  "SimulationShipmentReport": {
    "type": "Output",
    "description": "The SimulationShipmentReport table contains data related to simulated shipments, including details such as scenario name, replication number, shipment ID, order ID, line item ID, product name, origin and destination names, mode of shipment, quantities, volumes, weights, costs, departure and arrival times, and due dates. It is used to track and analyze simulated shipments for reporting and analysis purposes.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ShipmentID",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OrderID",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "LineItemID",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DestinationName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ModeName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ShippedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ShippedQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ShippedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ShippedVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ShippedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ShippedWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ShipmentCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "CostDimension",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DutyCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "InTransitHoldingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DepartureTime",
        "Data Type": "Timestamp",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ArrivalTime",
        "Data Type": "Timestamp",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "DueDate",
        "Data Type": "Timestamp",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationSupplierProductSummary": {
    "type": "Output",
    "description": "The SimulationSupplierProductSummary table likely contains data related to the summary of simulated supplier products. It may include information such as the total supplied quantity, volume, and weight of products, along with the corresponding units of measurement. The table may also include details such as the latitude and longitude of suppliers, the name of the scenario being simulated, the name of the supplier, the name of the product, and the type of statistical data being presented.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "SupplierName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalSuppliedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "SuppliedQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalSuppliedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "SuppliedVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalSuppliedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "SuppliedWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationSupplierProductSummaryReplicationDetail": {
    "type": "Output",
    "description": "The table SimulationSupplierProductSummaryReplicationDetail contains detailed information about the replication of a simulation involving a supplier and a specific product. It includes data on the number of replications, quantities supplied, volumes supplied, weights supplied, as well as the units of measurement. Additionally, it provides the latitude and longitude coordinates of the supplier location, the name of the specific scenario being simulated, the name of the supplier, and the name of the product. This table allows for a comprehensive analysis of the supply chain dynamics in the simulated scenario.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "SupplierName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalSuppliedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "SuppliedQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalSuppliedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "SuppliedVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalSuppliedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "SuppliedWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationSupplierRiskMetrics": {
    "type": "Output",
    "description": "The SimulationSupplierRiskMetrics table provides information on various risk metrics associated with different suppliers. This includes the Supplier Risk Score, Concentration Risk, Geographic Risk, User Defined Risk, Latitude, Longitude, Scenario Name, Risk Rating Name, Supplier Name, and statistics such as Minimum, Mean, Maximum, and Half Width. This table helps in assessing the overall risk associated with each supplier in a simulation scenario.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "SupplierName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "[Min, Mean, Max, HalfWidth]"
      },
      {
        "Column Name": "SupplierRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the geographic location of the Supplier. This is a weighted average of several geographic components that are reported in greater detail in the Simulation Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Suppliers table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationSupplierRiskMetricsReplicationDetail": {
    "type": "Output",
    "description": "The SimulationSupplierRiskMetricsReplicationDetail table likely contains detailed information on the risk metrics for different suppliers in a simulation scenario. This table would include specific data such as ReplicationNumber, SupplierRiskScore, ConcentrationRisk, GeographicRisk, UserDefinedRisk, Latitude, Longitude, ScenarioName, RiskRatingName, and SupplierName for each individual supplier in the simulation.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "RiskRatingName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": "The Risk Rating that risk metrics are reported for."
      },
      {
        "Column Name": "SupplierName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "SupplierRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the geographic location of the Supplier. This is a weighted average of several geographic components that are reported in greater detail in the Simulation Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Suppliers table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The latitude of the Supplier."
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The longitude of the Supplier."
      }
    ]
  },
  "SimulationSupplierSummary": {
    "type": "Output",
    "description": "The SimulationSupplierSummary table provides a summary of important information and metrics relating to various suppliers in a simulation or analysis. This includes details such as the total supplied quantity, volume, and weight, as well as associated risk scores and geographic data for each supplier. The table also likely includes supplier names, coordinates (latitude and longitude), and specific scenario names and statistical types for reference.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "SupplierName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalSuppliedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "SuppliedQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalSuppliedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "SuppliedVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalSuppliedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "SuppliedWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "SupplierRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the geographic location of the Supplier. This is a weighted average of several geographic components that are reported in greater detail in the Simulation Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Suppliers table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationSupplierSummaryReplicationDetail": {
    "type": "Output",
    "description": "The SimulationSupplierSummaryReplicationDetail table contains detailed information about the replication numbers, supplied quantities, volumes, weights, risk scores, and geographic details of suppliers in a simulation. It includes data on the risk associated with the geographic location of suppliers, user-defined risk values, as well as the latitude and longitude coordinates of each supplier. The table also includes information on the scenario name and the name of the suppliers.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "SupplierName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalSuppliedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "SuppliedQuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalSuppliedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "SuppliedVolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalSuppliedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "SuppliedWeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "SupplierRiskScore",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "ConcentrationRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "GeographicRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the geographic location of the Supplier. This is a weighted average of several geographic components that are reported in greater detail in the Simulation Geographic Risk Metrics table."
      },
      {
        "Column Name": "UserDefinedRisk",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": "The risk associated with the User Defined Risk value entered in the Suppliers table."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG, DART]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationTransportationAssetSummary": {
    "type": "Output",
    "description": "The SimulationTransportationAssetSummary table contains aggregated performance metrics for transportation assets. It tracks comprehensive usage statistics including costs, distances, times, and delivery volumes, providing high-level analysis of asset utilization and efficiency.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "TransportationAssetName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the transportation asset."
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the domicile for the transportation asset."
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "NumberUsed",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of transportation assets of this type used in the solution."
      },
      {
        "Column Name": "TotalCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalRouteFixedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total route fixed cost across all routes using this transportation asset type. This is specified in the Fixed Cost Per Route field of the Transportation Rates table."
      },
      {
        "Column Name": "TotalFixedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total fixed cost across all routes using this transportation asset type. This is specified in the Fixed Cost field of the Transportation Assets table."
      },
      {
        "Column Name": "TotalDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total distance cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalRepositionDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total reposition distance cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalOutOfRouteDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total out of route distance cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total cost attributed to time across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalWaitTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total cost attributed to wait time across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalRestTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rest time cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalBreakTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The short break time cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalStopCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total cost attributed to the number of stops across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalUnitCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total unit cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total route distance across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalRepositionDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total reposition distance across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalOutOfRouteDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total out of route distance across all routes using this transportation asset type."
      },
      {
        "Column Name": "DistanceUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure used for distance."
      },
      {
        "Column Name": "TotalTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total route time across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalTravelTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total travel time across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalServiceTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total service time across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalWaitTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total route wait time across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalRestTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total time spent in a rest across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalBreakTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total time spent in a short break across all routes using this transportation asset type."
      },
      {
        "Column Name": "TimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure used for time."
      },
      {
        "Column Name": "TotalDeliveredQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of product that was served across all routes using this transportation asset type."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that the quantities are expressed in terms of."
      },
      {
        "Column Name": "TotalDeliveredVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of product that was served across all routes using this transportation asset type."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that the volumes are expressed in terms of."
      },
      {
        "Column Name": "TotalDeliveredWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of product that was served across all routes using this transportation asset type."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that the weights are expressed in terms of."
      },
      {
        "Column Name": "NumberOfDeliveredShipments",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of shipments delivered by this asset."
      }
    ]
  },
  "SimulationTransportationAssetSummaryReplicationDetail": {
    "type": "Output",
    "description": "The SimulationTransportationAssetSummaryReplicationDetail table contains detailed performance metrics for transportation assets across simulation replications. It tracks the same comprehensive metrics as the summary table but preserves individual replication results for statistical analysis.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TransportationAssetName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[THROG]",
        "Explanation": "The name of the transportation asset."
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The name of the domicile for the transportation asset."
      },
      {
        "Column Name": "NumberUsed",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The number of transportation assets of this type used in the solution."
      },
      {
        "Column Name": "TotalCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalRouteFixedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total route fixed cost across all routes using this transportation asset type. This is specified in the Fixed Cost Per Route field of the Transportation Rates table."
      },
      {
        "Column Name": "TotalFixedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total fixed cost across all routes using this transportation asset type. This is specified in the Fixed Cost field of the Transportation Assets table."
      },
      {
        "Column Name": "TotalDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total distance cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalRepositionDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total reposition distance cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalOutOfRouteDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total out of route distance cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total cost attributed to time across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalWaitTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total cost attributed to wait time across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalRestTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The rest time cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalBreakTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The short break time cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalStopCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total cost attributed to the number of stops across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalUnitCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total unit cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total route distance across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalRepositionDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total reposition distance across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalOutOfRouteDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total out of route distance across all routes using this transportation asset type."
      },
      {
        "Column Name": "DistanceUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure used for distance."
      },
      {
        "Column Name": "TotalTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total route time across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalTravelTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total travel time across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalServiceTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total service time across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalWaitTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total route wait time across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalRestTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total time spent in a rest across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalBreakTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total time spent in a short break across all routes using this transportation asset type."
      },
      {
        "Column Name": "TimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure used for time."
      },
      {
        "Column Name": "TotalDeliveredQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total quantity of product that was served across all routes using this transportation asset type."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that the quantities are expressed in terms of."
      },
      {
        "Column Name": "TotalDeliveredVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total volume of product that was served across all routes using this transportation asset type."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that the volumes are expressed in terms of."
      },
      {
        "Column Name": "TotalDeliveredWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total weight of product that was served across all routes using this transportation asset type."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The unit of measure that the weights are expressed in terms of."
      },
      {
        "Column Name": "NumberOfDeliveredShipments",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": "The total number of shipments delivered by this asset."
      }
    ]
  },
  "SimulationValidationErrorReport": {
    "type": "Output",
    "description": "The table SimulationValidationErrorReport records information about errors encountered during the simulation process. It includes columns such as ScenarioName, TableName, ColumnName, ErrorType, ErrorMessage, Severity, IdentifiedValue, Action, ValueReplaced, and Count to provide details on the validation error, the affected data, the type of error, and the steps taken to address it.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TableName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ColumnName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ErrorType",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ErrorMessage",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Severity",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "IdentifiedValue",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Action",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ValueReplaced",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Count",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationWorkCenterQueueDepthReport": {
    "type": "Output",
    "description": "The table SimulationWorkCenterQueueDepthReport likely contains a report that shows the queue depth at different work centers in a simulation. It records information such as the scenario name, replication number, work center name, facility name, time, queue type, and queue depth. This table can be used to analyze the efficiency of work centers and identify potential bottlenecks in a simulation model.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WorkCenterName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Time",
        "Data Type": "Timestamp",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QueueType",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationWorkCenterQueueSummary": {
    "type": "Output",
    "description": "The table SimulationWorkCenterQueueSummary contains a summary of queue data for different work centers in a simulation. It includes information such as the name of the scenario being simulated, the name of the work center, the facility name, the type of statistic being measured, the average, minimum, and maximum queue depths, the type of queue, the total time spent in the queue, and the latitude and longitude coordinates of the work center.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WorkCenterName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "AverageQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "MinQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "MaxQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QueueType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalTimeInQueueCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationWorkCenterQueueSummaryReplicationDetail": {
    "type": "Output",
    "description": "The table SimulationWorkCenterQueueSummaryReplicationDetail provides a detailed summary of the queue performance at work centers in a simulation scenario. It includes information such as the replication number, work center name, facility name, average queue depth, minimum queue depth, maximum queue depth, queue type, total time in queue cost, latitude, and longitude. This table helps track and analyze the queue behavior and performance at different work centers during simulations.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WorkCenterName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "AverageQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "MinQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "MaxQueueDepth",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QueueType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalTimeInQueueCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationWorkCenterSummary": {
    "type": "Output",
    "description": "The SimulationWorkCenterSummary table provides an overview of the costs, quantities, volumes, weights, and processing times associated with different work centers in a simulation scenario. It includes information such as the name of the work center, facility, type of statistic, total costs, operating costs, processed quantities, volumes, and weights, as well as geographical coordinates of the work center.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WorkCenterName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "StatType",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalWorkCenterCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OperatingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "NetTotalProcessedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "NetTotalProcessedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "NetTotalProcessedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProcessedTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "SimulationWorkCenterSummaryReplicationDetail": {
    "type": "Output",
    "description": "The table SimulationWorkCenterSummaryReplicationDetail provides a detailed summary of work center operations in a simulation scenario, including replication number, work center and facility names, costs, processed quantities, volumes, and weights, as well as processing times. It also includes information on operating costs, geographical locations (latitude and longitude), and units of measurement for quantities, volumes, weights, and processing times.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "ReplicationNumber",
        "Data Type": "int",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WorkCenterName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "FacilityName",
        "Data Type": "String",
        "Primary Key": "YES",
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalWorkCenterCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProcessCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "OperatingCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "NetTotalProcessedQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "NetTotalProcessedVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "NetTotalProcessedWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TotalProcessedTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "TimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[THROG]",
        "Explanation": NaN
      }
    ]
  },
  "TransportationActivityReport": {
    "type": "Output",
    "description": "The TransportationActivityReport table contains detailed records of all transportation-related activities. It tracks individual activities such as pickups, deliveries, travel, and breaks, including timing, locations, quantities, and associated duty time constraints.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "ActivityID",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "A unique identifier for the activity"
      },
      {
        "Column Name": "Type",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The type of this activity. It could be Pickup, Delivery, Travel, Wait, Break, Rest, Vehicle Return"
      },
      {
        "Column Name": "StartDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The date and time at which the activity starts."
      },
      {
        "Column Name": "EndDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The date and time at which the activity ends."
      },
      {
        "Column Name": "RouteName",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The route that contains the stop."
      },
      {
        "Column Name": "TransportationAssetName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "The name of the transportation asset."
      },
      {
        "Column Name": "StartLocationName",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The location of the start of the activity."
      },
      {
        "Column Name": "EndLocationName",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The location of the end of the activity."
      },
      {
        "Column Name": "Distance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The distance of the activity."
      },
      {
        "Column Name": "Time",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The duration of the activity."
      },
      {
        "Column Name": "TimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure used for time."
      },
      {
        "Column Name": "Quantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The quantity of product that was served during the activity."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that the quantities are expressed in terms of."
      },
      {
        "Column Name": "Volume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The volume of product that was served during the activity."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that the volumes are expressed in terms of."
      },
      {
        "Column Name": "Weight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The weight of product that was served during the activity."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that the weights are expressed in terms of."
      },
      {
        "Column Name": "ActivityCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The cost for this activity."
      },
      {
        "Column Name": "CurrentDutyTimeWithinShift",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The current duty time accumulated since the last rest."
      },
      {
        "Column Name": "CurrentDriveTimeWithinShift",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The current drive time accumulated since the last rest."
      },
      {
        "Column Name": "CurrentDriveTimeBeforeShortBreak",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The current drive time accumulated since the last break."
      }
    ]
  },
  "TransportationAssetSummary": {
    "type": "Output",
    "description": "The TransportationAssetSummary table contains various metrics and measures related to transportation assets used in a solution. It includes information such as the number of assets used, total costs, delivered quantities, volumes, weights, unit costs, time costs, stop costs, distances, and times for each transportation asset type. Additionally, it provides details on the number of shipments delivered by each asset and the scenario for which the results are saved.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "TransportationAssetName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "The name of the transportation asset."
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The name of the domicile for the transportation asset."
      },
      {
        "Column Name": "NumberUsed",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The number of transportation assets of this type used in the solution."
      },
      {
        "Column Name": "TotalCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalRouteFixedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total route fixed cost across all routes using this transportation asset type. This is specified in the Fixed Cost Per Route field of the Transportation Rates table."
      },
      {
        "Column Name": "TotalFixedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total fixed cost across all routes using this transportation asset type. This is specified in the Fixed Cost field of the Transportation Assets table"
      },
      {
        "Column Name": "TotalDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total distance cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalRepositionDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total reposition distance cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalOutOfRouteDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total out of route distance cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total cost attributed to time across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalWaitTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total cost attributed to wait time across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalRestTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The rest time cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalBreakTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The short break time cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalStopCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total cost attributed to the number of stops across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalUnitCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total unit cost across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total route distance across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalRepositionDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total reposition distance across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalOutOfRouteDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total out of route distance across all routes using this transportation asset type."
      },
      {
        "Column Name": "DistanceUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure used for distance."
      },
      {
        "Column Name": "TotalTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total route time across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalTravelTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total travel time across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalServiceTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total service time across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalWaitTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total wait time across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalRestTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total time spent in a rest across all routes using this transportation asset type."
      },
      {
        "Column Name": "TotalBreakTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total time spent in a short break across all routes using this transportation asset type."
      },
      {
        "Column Name": "TimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure used for time."
      },
      {
        "Column Name": "TotalDeliveredQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total quantity of product that was served across all routes using this transportation asset type."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that the quantities are expressed in terms of."
      },
      {
        "Column Name": "TotalDeliveredVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total volume of product that was served across all routes using this transportation asset type."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that the volumes are expressed in terms of."
      },
      {
        "Column Name": "TotalDeliveredWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total weight of product that was served across all routes using this transportation asset type."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that the weights are expressed in terms of."
      },
      {
        "Column Name": "NumberOfDeliveredShipments",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total number of shipments delivered by this asset."
      },
      {
        "Column Name": "TotalCO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total CO2 emissions from all uses of this asset. This is taken as the total of Route CO2 Emissions for routes that this asset was assigned to."
      },
      {
        "Column Name": "TotalCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The cost attributed to CO2 Emissions for this asset."
      }
    ]
  },
  "TransportationLoadBalancingSummary": {
    "type": "Output",
    "description": "The TransportationLoadBalancingSummary table contains daily delivery performance metrics organized by source location. It tracks delivery quantities, distances, times, and resource utilization, enabling analysis of load balancing effectiveness across the network.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "The name of the scenario the results are saved for.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "SourceName",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The Facility that the demand originates from.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "DeliveryDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The date for these deliveries.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "Weekday",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The day of the week for these deliveries.",
        "NEO Supported": NaN,
        "THROG Supported": "No"
      },
      {
        "Column Name": "DeliveredQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The amount of the Product being delivered on this day.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "DeliveredQuantityUOM",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that Quantity is reported in terms of.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "DeliveredVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The volume of the Product being delivered on this day.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "DeliveredVolumeUOM",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that Volume is reported in terms of.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "DeliveredWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The weight of the Product being delivered on this day.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "DeliveredWeightUOM",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that Weight is reported in terms of.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "TotalDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total distance across all routes on this day.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "DistanceUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure used for distance.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "TotalTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total time across all routes on this day.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "TimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure used for time.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "NumberOfRoutes",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The number of routes that were used on this day.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "NumberOfTransportationAssets",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The number of Transportation Assets that were used on this day.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      },
      {
        "Column Name": "NumberOfDeliveredShipments",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total number of shipments that were delivered on this day.",
        "NEO Supported": NaN,
        "THROG Supported": NaN
      }
    ]
  },
  "TransportationRouteSummary": {
    "type": "Output",
    "description": "The TransportationRouteSummary table provides a summary of various details related to transportation routes, including information such as route start date and time, total route cost breakdown, distance, time, stops, delivered quantities, volumes, and weights, as well as details about the transportation asset used, number of shipments delivered, pickup location, scenario name, route name, and unique tour identifier. This table serves as a comprehensive overview of key metrics and characteristics of transportation routes.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "The name of the scenario the results are saved for.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RouteName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "The name of the route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TransportationAssetName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The name of the Transportation Asset used on the route",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RouteCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total cost of the route. This will be the sum of the fixed route cost, the total distance cost of all segments of this route, the total time cost of the route, the total stop cost of the route and the total unit cost of the route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "FixedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The route fixed cost. This is specified in the Fixed Cost Per Route field of the Transportation Rates table.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "DistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total distance cost of the route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RepositionDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total reposition distance cost of the route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "OutOfRouteDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total out of route distance cost of the route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The time cost of the route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "WaitTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The wait time cost of the route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RestTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The rest time cost for the route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "BreakTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The short break time cost for the route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "StopCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The cost attributed to the number of stops in the route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "UnitCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit cost for the route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RouteDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total route distance.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RepositionDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total reposition distance of the route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "OutOfRouteDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total out of route distance of the route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RouteDistanceUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure used for distance.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RouteTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total route time.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RouteTravelTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total route travel time.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RouteServiceTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total route service time.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RouteWaitTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total route wait time.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RouteRestTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total time spent in a rest during the route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RouteBreakTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total time spent in a short break during the route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RouteTimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure used for time.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "NumberOfStops",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The number of stops taken on this route",
        "MasterColumn": NaN
      },
      {
        "Column Name": "DeliveredQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The quantity of product that was served by the route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that the quantities are expressed in terms of.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "DeliveredVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The volume of product that was served by the route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that the volumes are expressed in terms of.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "DeliveredWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The weight of product that was served by the route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that the weights are expressed in terms of.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "NumberOfDeliveredShipments",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The number of shipments delivered on the route",
        "MasterColumn": NaN
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The name of the pickup location for the route",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RouteStartDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The date and time at which the Route starts.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RouteEndDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The date and time at which the Route ends.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RouteCO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The CO2 emissions for this route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "RouteCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The cost attributed to CO2 Emissions for this route.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourID",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "A unique identifier for the tour (asset schedule) that the Route is assigned to",
        "MasterColumn": NaN
      },
      {
        "Column Name": "DecompositionName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "Decomposition Name given to the shipments in this route.",
        "MasterColumn": NaN
      }
    ]
  },
  "TransportationSegmentSummary": {
    "type": "Output",
    "description": "The TransportationSegmentSummary table provides a summary of various information related to transportation segments, such as the origin and destination locations, route, distance, travel time, and coordinates. It also includes details such as the unit of measure for distance and time, as well as a unique identifier for each segment. The table is likely used to track and analyze transportation data for various scenarios.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "SegmentID",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "A unique identifier for the segment"
      },
      {
        "Column Name": "OriginName",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The location of the origin of the segment."
      },
      {
        "Column Name": "DestinationName",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The location of the destination of the segment."
      },
      {
        "Column Name": "RouteName",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The route that contains the segment."
      },
      {
        "Column Name": "SegmentDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The distance of the segment."
      },
      {
        "Column Name": "SegmentDistanceUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure used for distance."
      },
      {
        "Column Name": "SegmentTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total time for the segment. This will include Travel, Rest and Break time."
      },
      {
        "Column Name": "SegmentTravelTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The travel time for the segment."
      },
      {
        "Column Name": "SegmentRestTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total time spent in a rest on this segment."
      },
      {
        "Column Name": "SegmentBreakTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total time spent in a short break on this segment."
      },
      {
        "Column Name": "TimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure used for time."
      },
      {
        "Column Name": "OriginLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The latitude coordinate of the origin of the segment"
      },
      {
        "Column Name": "OriginLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The longitude coordinate of the origin of the segment"
      },
      {
        "Column Name": "DestinationLatitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The latitude coordinate of the destination of the segment"
      },
      {
        "Column Name": "DestinationLongitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The longitude coordinate of the destination of the segment"
      },
      {
        "Column Name": "StartDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The date and time at which the Asset departs from the origin of the Segment."
      },
      {
        "Column Name": "EndDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The date and time at which the Asset arrives at the destination of the Segment."
      },
      {
        "Column Name": "CO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The CO2 emissions from this segment."
      },
      {
        "Column Name": "CO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The cost attributed to CO2 Emissions for this segment."
      }
    ]
  },
  "TransportationShipmentSummary": {
    "type": "Output",
    "description": "The table TransportationShipmentSummary provides a summary of various details related to shipments, including information on the origin and destination of the shipment, the product being shipped, quantity, volume, weight, shipment status, route details, costs, stop ID, and other relevant information. It serves as a comprehensive overview of the transportation logistics for each individual shipment within a given scenario.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "The name of the scenario the results are saved for.",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "ShipmentID",
        "Data Type": "String - Fixed",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "A unique identifier for the Shipment.",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "SourceName",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The Facility that the shipment originates from.",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "DestinationName",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The Customer that the shipment was delivered to.",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "ProductName",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The Product in the shipment.",
        "NEO Supported": NaN,
        "THROG Supported": "No",
        "MasterColumn": NaN
      },
      {
        "Column Name": "Quantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The amount of the Product being shipped.",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that Quantity is reported in terms of.",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "Volume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The volume of the Product being shipped.",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that Volume is reported in terms of.",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "Weight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The weight of the Product being shipped.",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that Weight is reported in terms of.",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "ShipmentStatus",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The status of the shipment in the solution. It could be Routed, Direct Shipping, Unrouted",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "RouteName",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The route that contains the shipment.",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "AllocatedRouteCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The route cost that the shipment is responsible for",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "AllocatedRouteCostPercent",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The proportion of the route cost that the shipment is responsible for",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "StopID",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "A unique identifier for the stop",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "DirectCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The direct cost of the shipment if it uses direct shipping",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "UnroutedReason",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The diagnosed reason of why the shipment is could not be routed",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "TransportationAssetName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "The Transportation Asset used for this shipment.",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "PickupDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The date and time at which the shipment was picked-up.",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "DeliveryDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The date and time at which the Shipment was delivered.",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "AllocatedCO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The allocated CO2 emissions from delivering this shipment.",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "AllocatedCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The cost attributed to CO2 Emissions for this shipment.",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      },
      {
        "Column Name": "DecompositionName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "Decomposition Name given to the shipment.",
        "NEO Supported": NaN,
        "THROG Supported": NaN,
        "MasterColumn": NaN
      }
    ]
  },
  "TransportationStopSummary": {
    "type": "Output",
    "description": "The TransportationStopSummary table appears to contain detailed information about each stop on a transportation route. This includes data such as the site location, route name, delivered quantities of product, volumes, weights, route cost, service time, and geographic coordinates. Each stop is uniquely identified by a StopID, and the data is organized by scenario name for reference purposes.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "StopID",
        "Data Type": "int",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "A unique identifier for the stop"
      },
      {
        "Column Name": "SiteName",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The location of the stop."
      },
      {
        "Column Name": "StopType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The type of this stop. It could be Pickup, Delivery, Asset Return"
      },
      {
        "Column Name": "RouteName",
        "Data Type": "Name",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The route that contains the stop."
      },
      {
        "Column Name": "DeliveredQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The quantity of product that was served at the stop."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that the quantities are expressed in terms of."
      },
      {
        "Column Name": "DeliveredVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The volume of product that was served in the stop."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that the volumes are expressed in terms of."
      },
      {
        "Column Name": "DeliveredWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The weight of product that was served in the stop."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that the weights are expressed in terms of."
      },
      {
        "Column Name": "AllocatedRouteCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The route cost that the stop is responsible for"
      },
      {
        "Column Name": "AllocatedRouteCostPercent",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The proportion of the route cost that the stop is responsible for"
      },
      {
        "Column Name": "ServiceTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The service time at this stop. This is defined in the Unit Pickup / Delivery Time in the Transportation Assets table."
      },
      {
        "Column Name": "WaitTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The wait time at this stop."
      },
      {
        "Column Name": "RestTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The rest time at this stop."
      },
      {
        "Column Name": "BreakTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The short break time at this stop."
      },
      {
        "Column Name": "TimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure used for time."
      },
      {
        "Column Name": "ArrivalDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The date and time at which the Asset arrives at this Stop."
      },
      {
        "Column Name": "ServiceDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The date and time at which the pickup or delivery starts."
      },
      {
        "Column Name": "DepartureDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The date and time at which the Asset leaves this Stop."
      },
      {
        "Column Name": "Latitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The latitude coordinate of the Stop"
      },
      {
        "Column Name": "Longitude",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The longitude coordinate of the Stop"
      }
    ]
  },
  "TransportationSummary": {
    "type": "Output",
    "description": "The TransportationSummary table provides a comprehensive overview of the transportation scenario run, including details such as the version of the solver used, start time of the scenario run, total run time, resource size, memory consumption, solve type, transportation costs, route costs, quantity, volume, and weight metrics, distance, time, number of routes, transportation assets, and shipments, as well as information on the scenario name and any shipments that were delivered or remained unrouted.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "HopperVersion",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The version of the HOPPER solver that was used for the scenario run."
      },
      {
        "Column Name": "RunStartTime",
        "Data Type": "Timestamp",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The Date/Time when the scenario was run."
      },
      {
        "Column Name": "TotalRunTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total time taken for the scenario run to complete. Total Run Time will be expressed in minutes."
      },
      {
        "Column Name": "ResourceSize",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The size of the solver resource that was selected to run the optimization."
      },
      {
        "Column Name": "ConsumedMemory",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The amount of memory (GB) that was consumed during the optimization run."
      },
      {
        "Column Name": "SolveType",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The type of solve that was run."
      },
      {
        "Column Name": "TotalTransportationCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total cost of the scenario."
      },
      {
        "Column Name": "TotalRouteFixedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total route fixed cost in the scenario."
      },
      {
        "Column Name": "TotalAssetFixedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total asset fixed cost in the scenario."
      },
      {
        "Column Name": "TotalDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total distance cost of the scenario."
      },
      {
        "Column Name": "TotalRepositionDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total reposition distance cost of the scenario."
      },
      {
        "Column Name": "TotalOutOfRouteDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total out of route distance cost of the scenario."
      },
      {
        "Column Name": "TotalTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total cost attributed to time."
      },
      {
        "Column Name": "TotalWaitTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total cost attributed to wait time."
      },
      {
        "Column Name": "TotalRestTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total rest time cost."
      },
      {
        "Column Name": "TotalBreakTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total short break time cost."
      },
      {
        "Column Name": "TotalStopCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total cost attributed to the number of stops."
      },
      {
        "Column Name": "TotalUnitCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total unit cost."
      },
      {
        "Column Name": "TotalDirectCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total cost attributed to direct shipment cost."
      },
      {
        "Column Name": "TotalDeliveredQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total quantity of product that was served by a route in the scenario run."
      },
      {
        "Column Name": "TotalDirectQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total quantity of product that was served with the direct option in the scenario run."
      },
      {
        "Column Name": "TotalUndeliveredQuantity",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total quantity of product that went unserved in this scenario run."
      },
      {
        "Column Name": "QuantityUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that the quantities are expressed in terms of."
      },
      {
        "Column Name": "TotalDeliveredVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total volume of product that was served ny a route in the scenario run."
      },
      {
        "Column Name": "TotalDirectVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total volume of product that was served with the direct option in the scenario run."
      },
      {
        "Column Name": "TotalUndeliveredVolume",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total volume of product that went unserved in this scenario run."
      },
      {
        "Column Name": "VolumeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that the volumes are expressed in terms of."
      },
      {
        "Column Name": "TotalDeliveredWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total weight of product that was served by a route in the scenario run."
      },
      {
        "Column Name": "TotalDirectWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total weight of product that was served with the direct option in the scenario run."
      },
      {
        "Column Name": "TotalUndeliveredWeight",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total weight of product that went unserved in this scenario run."
      },
      {
        "Column Name": "WeightUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure that the weights are expressed in terms of."
      },
      {
        "Column Name": "TotalDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total distance across all routes."
      },
      {
        "Column Name": "TotalRepositionDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total reposition distance of the scenario."
      },
      {
        "Column Name": "TotalOutOfRouteDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total out of route distance of the scenario."
      },
      {
        "Column Name": "DistanceUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure used for distance."
      },
      {
        "Column Name": "TotalTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total time across all routes."
      },
      {
        "Column Name": "TotalTravelTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total travel time across all routes."
      },
      {
        "Column Name": "TotalServiceTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total service time across all routes."
      },
      {
        "Column Name": "TotalWaitTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total wait time across all routes."
      },
      {
        "Column Name": "TotalRestTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total time spent in a rest across all routes."
      },
      {
        "Column Name": "TotalBreakTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total time spent in a short break across all routes."
      },
      {
        "Column Name": "TimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure used for time."
      },
      {
        "Column Name": "NumberOfRoutes",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The number of routes that were used in the solution."
      },
      {
        "Column Name": "NumberOfTransportationAssets",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The number of Transportation Assets that were used in the solution."
      },
      {
        "Column Name": "NumberOfDeliveredShipments",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total number of shipments that were delivered on a route."
      },
      {
        "Column Name": "NumberOfDirectShipments",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total number of shipments that were delivered with the Direct option."
      },
      {
        "Column Name": "NumberOfUnroutedShipments",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total number of shipments that were unrouted."
      },
      {
        "Column Name": "TotalCO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total CO2 emissions for across the entire scenario run."
      },
      {
        "Column Name": "TotalCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The cost attributed to CO2 Emissions for this scenario."
      }
    ]
  },
  "TransportationTourSummary": {
    "type": "Output",
    "description": "The table TransportationTourSummary contains a summary of transportation information for a specific tour, identified by its TourID. It likely includes details such as the scenario name, the type of transportation used, the number of vehicles or passengers, the distance traveled, and any other pertinent information related to transportation for the tour.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "The name of the scenario the results are saved for.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourID",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[HOPPER]",
        "Explanation": "The ID for the Tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total cost of the Tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourRouteFixedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total route fixed costs.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourAssetFixedCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The sum of the asset fixed cost of the routes on this Tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total distance cost of the tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourRepositionDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total reposition distance cost of the tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourOutOfRouteDistanceCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total out of route distance cost of the tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The time cost of the tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourWaitTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The wait time cost of the tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourRestTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The rest time cost for the tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourBreakTimeCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The short break time cost for the tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourStopCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The cost attributed to the number of stops in the tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourUnitCost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit cost for the tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total Tour distance.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourRepositionDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total reposition distance of the tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourOutOfRouteDistance",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total out of route distance of the tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourDistanceUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure used for distance.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total duration of the Tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourTravelTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total tour travel time.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourServiceTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total tour service time.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourWaitTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total tour wait time.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourRestTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total time spent in a rest during the tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourBreakTime",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The total time spent in a short break during the tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourTimeUOM",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The unit of measure used for time.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "NumberOfRoutes",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The number of routes in the Tour",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TransportationAssetName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The name of the Asset operating this Tour",
        "MasterColumn": NaN
      },
      {
        "Column Name": "OriginName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The name of the pickup location for all routes in this Tour",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourStartDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The date and time at which the first route in the Tour starts.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourEndDate",
        "Data Type": "Date/Time",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The date and time at which the last route in the tour ends.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourCO2Emissions",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The CO2 emissions for this tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "TourCO2Cost",
        "Data Type": "double",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "The cost attributed to CO2 Emissions for this tour.",
        "MasterColumn": NaN
      },
      {
        "Column Name": "DecompositionName",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[HOPPER]",
        "Explanation": "Decomposition Name given to the shipments that make up the routes on this tour.",
        "MasterColumn": NaN
      }
    ]
  },
  "TransportationValidationErrorReport": {
    "type": "Output",
    "description": "The TransportationValidationErrorReport table contains validation results specific to transportation-related data and configurations. It tracks identified issues, their severity, applied corrections, and occurrence frequencies within the transportation modeling components.",
    "columns": [
      {
        "Column Name": "ScenarioName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[]",
        "Explanation": "The name of the scenario the results are saved for."
      },
      {
        "Column Name": "TableName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[]",
        "Explanation": "The name of the table where the error has identified."
      },
      {
        "Column Name": "ColumnName",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[]",
        "Explanation": "The name of the column where the error has been identified."
      },
      {
        "Column Name": "ValidationRule",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The name of the internal validation rule that the optimization engine found a problem in."
      },
      {
        "Column Name": "ErrorType",
        "Data Type": "String",
        "Primary Key": "Yes",
        "Engine": "[]",
        "Explanation": "The listed type of error associated with the validation rule."
      },
      {
        "Column Name": "ErrorMessage",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "A description of the reported error."
      },
      {
        "Column Name": "Severity",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The severity of the identified error, this will be one of Lowest, Low, Medium or High severity."
      },
      {
        "Column Name": "IdentifiedValue",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The value that has been identified as the source of the error"
      },
      {
        "Column Name": "Action",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "If corrective action was taken, the data adjustment performed by the solver will be listed here."
      },
      {
        "Column Name": "ValueReplaced",
        "Data Type": "String",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "If a value had to be replaced, the updated value will be listed here."
      },
      {
        "Column Name": "Count",
        "Data Type": "int",
        "Primary Key": NaN,
        "Engine": "[]",
        "Explanation": "The number of times that the error occurred."
      }
    ]
  }
}